/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.*;
import DBClasses.*;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.table.*;

import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import Model.ViewSwitcher;
import Model.AccountInfo;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JPanel;
import javax.swing.JTextArea;
/**
 *
 * @author Adam
 */
public class MainWindow extends javax.swing.JFrame {

    private StringBuilder loginStatusMessage = new StringBuilder();
    private final int MAX_SLOPE_TRAFFIC = 100;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        KeyboardEventHandler eventHandler = new KeyboardEventHandler(this);
        AddKeyEventHandling(eventHandler);
        cardViewList = new Vector<>();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserRoleChooseGroup = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        Login = new javax.swing.JPanel();
        LoginPageHelpButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        LoginButton = new javax.swing.JButton();
        LoginTextField = new javax.swing.JTextField();
        MessageLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JPasswordField();
        PasswordLabel = new javax.swing.JLabel();
        LoginLabel = new javax.swing.JLabel();
        CreateAccountLink = new javax.swing.JLabel();
        BackgroundImageLabel = new javax.swing.JLabel();
        ActionInfoLabel = new javax.swing.JLabel();
        Register = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        RegisterMessageLabel = new javax.swing.JLabel();
        LoginTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        RepeatPasswordLabel = new javax.swing.JLabel();
        RepeatPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        RegistrationPageHelpButton = new javax.swing.JButton();
        Name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Surname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DocumentNumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        City = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Country = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Street = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        RegisterButton = new javax.swing.JButton();
        RegisterBackgroundImage1 = new javax.swing.JLabel();
        CashierPanel = new javax.swing.JPanel();
        CashierContainer = new javax.swing.JPanel();
        ClientAccountEditPanel = new javax.swing.JPanel();
        MyAccountLabel2 = new javax.swing.JLabel();
        EditLoginLabel2 = new javax.swing.JLabel();
        EditPasswordLabel2 = new javax.swing.JLabel();
        LoginEditTextfield2 = new javax.swing.JTextField();
        PasswordEditTextfield2 = new javax.swing.JTextField();
        NameEditTextfield2 = new javax.swing.JTextField();
        SurnameEditTextfield2 = new javax.swing.JTextField();
        NameEditLabel2 = new javax.swing.JLabel();
        SurnameEditLabel2 = new javax.swing.JLabel();
        IDEditLabel2 = new javax.swing.JLabel();
        IDEditTextfield2 = new javax.swing.JTextField();
        StreetEditTextfield2 = new javax.swing.JTextField();
        CityEditTextfield2 = new javax.swing.JTextField();
        CountryEditTextfield2 = new javax.swing.JTextField();
        StreetEditLabel2 = new javax.swing.JLabel();
        CityEditLabel2 = new javax.swing.JLabel();
        CountryEditLabel2 = new javax.swing.JLabel();
        EditDetailsButton2 = new javax.swing.JButton();
        SaveDetailsButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        CancelButton2 = new javax.swing.JButton();
        EditMessageLabel2 = new javax.swing.JLabel();
        DocumentEditTextfield2 = new javax.swing.JTextField();
        CountryEditLabel3 = new javax.swing.JLabel();
        userActiveCheckboxInCashierPanel = new javax.swing.JCheckBox();
        NewClientAccountPanel = new javax.swing.JPanel();
        MyAccountLabel1 = new javax.swing.JLabel();
        EditLoginLabel1 = new javax.swing.JLabel();
        EditPasswordLabel1 = new javax.swing.JLabel();
        LoginEditTextfield1 = new javax.swing.JTextField();
        PasswordEditTextfield1 = new javax.swing.JTextField();
        NameEditTextfield1 = new javax.swing.JTextField();
        SurnameEditTextfield1 = new javax.swing.JTextField();
        NameEditLabel1 = new javax.swing.JLabel();
        SurnameEditLabel1 = new javax.swing.JLabel();
        StreetEditTextfield1 = new javax.swing.JTextField();
        CityEditTextfield1 = new javax.swing.JTextField();
        CountryEditTextfield1 = new javax.swing.JTextField();
        StreetEditLabel1 = new javax.swing.JLabel();
        CityEditLabel1 = new javax.swing.JLabel();
        CountryEditLabel1 = new javax.swing.JLabel();
        SaveDetailsButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        CancelButton1 = new javax.swing.JButton();
        EditMessageLabel1 = new javax.swing.JLabel();
        DocumentEditTextfield1 = new javax.swing.JTextField();
        PasswordEditTextfield3 = new javax.swing.JTextField();
        EditPasswordLabel3 = new javax.swing.JLabel();
        ClientCardsPanel = new javax.swing.JPanel();
        PrintCardDataPanel1 = new javax.swing.JPanel();
        PrintCardDataOkButton1 = new javax.swing.JButton();
        PrintCardDataTextPanel1 = new javax.swing.JScrollPane();
        PrintCardDataText1 = new javax.swing.JTextArea();
        StationTrafficPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        StationTrafficTable = new javax.swing.JTable();
        ContactPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        SearchPanel = new javax.swing.JPanel();
        UserSearchInputTextField = new javax.swing.JTextField();
        ResultListPanel = new javax.swing.JScrollPane();
        ResultList = new javax.swing.JList<String>();
        SearchButton2 = new javax.swing.JButton();
        CardScanStatusTextField = new javax.swing.JTextField();
        CardScanButton = new javax.swing.JButton();
        ContactButton3 = new javax.swing.JButton();
        NewAccountButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        EditClientButton = new javax.swing.JButton();
        SlopeTrafficButton1 = new javax.swing.JButton();
        ClientModeButton1 = new javax.swing.JButton();
        CashierChangeModeToAdminButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        SelectedUserPanel = new javax.swing.JScrollPane();
        SelecetedUserTextPlane = new javax.swing.JTextPane();
        CashierHelpButton = new javax.swing.JButton();
        ClientCardsButton1 = new javax.swing.JButton();
        UserBackgroundLabel3 = new javax.swing.JLabel();
        AdminMainPanel = new javax.swing.JPanel();
        AdminContainerPanel = new javax.swing.JPanel();
        AdminMenuPanel = new javax.swing.JPanel();
        UsersButton = new javax.swing.JButton();
        PriceListButton = new javax.swing.JButton();
        SlopeButton = new javax.swing.JButton();
        GatesButton = new javax.swing.JButton();
        CashierModeButton = new javax.swing.JButton();
        ClientModeButton = new javax.swing.JButton();
        AdminMainPanelHelpButton = new javax.swing.JButton();
        GateProductsPanel = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        GatesProductsAddFromGate = new javax.swing.JButton();
        GatesProductsRemoveFromGate = new javax.swing.JButton();
        GatesProductsResultLabel = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        GatesProductsGatesProductList = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        GatesProductsAwailableProducts = new javax.swing.JTable();
        jScrollPane18 = new javax.swing.JScrollPane();
        GatesProductsGatesList = new javax.swing.JTable();
        GateProductsHelp = new javax.swing.JButton();
        EditProductPanel = new javax.swing.JPanel();
        ActualizeProductButton = new javax.swing.JButton();
        ActualizePriceTextField = new javax.swing.JTextField();
        ActualizeProductNameText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        AdminEditProductHelpButton = new javax.swing.JButton();
        AddProductToPriceListPanel = new javax.swing.JPanel();
        ProductPriceListAddItemPrice = new javax.swing.JButton();
        ProductPriceListResult = new javax.swing.JLabel();
        ProductPriceListFindProduct = new javax.swing.JTextField();
        ProductPriceItemPriceLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ProductPriceListItemPrices = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        ProductPriceListProducts = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        ProductPriceListPriceLists = new javax.swing.JTable();
        ProductPriceItemPriceField = new javax.swing.JTextField();
        ProductPriceListPriceListFind = new javax.swing.JTextField();
        AdminAddProductToPricelistHelpButton = new javax.swing.JButton();
        AddProductPanel = new javax.swing.JPanel();
        AddNewProductButton1 = new javax.swing.JButton();
        NewProductNameTextField1 = new javax.swing.JTextField();
        ProductNameLabel1 = new javax.swing.JLabel();
        NewProductResult1 = new javax.swing.JLabel();
        NewProductPriceTextField = new javax.swing.JTextField();
        ProductPriceLabel = new javax.swing.JLabel();
        AdminAddProductHelpButton = new javax.swing.JButton();
        AddPriceList = new javax.swing.JPanel();
        NewPriceListButton = new javax.swing.JButton();
        NewPriceListDateFrom = new javax.swing.JTextField();
        NewPriceListDateTo = new javax.swing.JTextField();
        PriceListFromLabel = new javax.swing.JLabel();
        PriceListToLabel = new javax.swing.JLabel();
        NewPriceListResult = new javax.swing.JLabel();
        AdminAddPricelistHelpButton = new javax.swing.JButton();
        PriceListManagmentAdmintPanel = new javax.swing.JPanel();
        SearchProductTextField = new javax.swing.JTextField();
        FindProductButton = new javax.swing.JButton();
        EditProductButton = new javax.swing.JButton();
        RemoveProductButton = new javax.swing.JButton();
        NewProductButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        PriceListTable = new javax.swing.JTable();
        SlopeManagementAdminPanel = new javax.swing.JPanel();
        SlopeTrafficScrollPane = new javax.swing.JScrollPane();
        SlopeTraffic = new javax.swing.JTable();
        AdminSlopeManagementHelpButton = new javax.swing.JButton();
        UserManagmentAdmintPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        UserListTable = new javax.swing.JTable();
        FindUserButton = new javax.swing.JButton();
        SearchUserTextField = new javax.swing.JTextField();
        EditUserButton = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        ProductsManagmentAdminPanel = new javax.swing.JPanel();
        ProductsTables = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductList = new javax.swing.JTable();
        jSplitPane2 = new javax.swing.JSplitPane();
        jButton1 = new javax.swing.JButton();
        ProductFindText = new javax.swing.JTextField();
        jSplitPane5 = new javax.swing.JSplitPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        PriceLists = new javax.swing.JTable();
        jSplitPane6 = new javax.swing.JSplitPane();
        jButton6 = new javax.swing.JButton();
        PriceListFindText = new javax.swing.JTextField();
        jSplitPane7 = new javax.swing.JSplitPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        CurrentPricesTable = new javax.swing.JTable();
        jSplitPane8 = new javax.swing.JSplitPane();
        jButton7 = new javax.swing.JButton();
        CurrentPriceFindText = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        AdminProductPanelHelpButton = new javax.swing.JButton();
        AttractionsEditAddPanel = new javax.swing.JPanel();
        AttractionNameTextField = new javax.swing.JTextField();
        TerminalNameLabel = new javax.swing.JLabel();
        AttractionTypeComboBox = new javax.swing.JComboBox();
        CancelAddAttractionButton = new javax.swing.JButton();
        AddAttractionButton = new javax.swing.JButton();
        AttractionTypeLabel = new javax.swing.JLabel();
        AddAttractionMessage = new javax.swing.JLabel();
        AdminAttractionsEditHelpButton = new javax.swing.JButton();
        TerminalsEditAddPanel = new javax.swing.JPanel();
        LockTimeLabel1 = new javax.swing.JLabel();
        CancelAddTerminalButton1 = new javax.swing.JButton();
        AddTerminalButton1 = new javax.swing.JButton();
        LockTimeComboBox2 = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        ChosenAttractionLabel = new javax.swing.JLabel();
        AddTerminalMessageLabel = new javax.swing.JLabel();
        AdminTerminalsEditHelpButton = new javax.swing.JButton();
        AttractionsAndGatesPanel = new javax.swing.JTabbedPane();
        AttractionManagementAdminPanel = new javax.swing.JPanel();
        AttractionListPanel = new javax.swing.JPanel();
        FindAttractionButton = new javax.swing.JButton();
        SearchAttractionTextField = new javax.swing.JTextField();
        NewAttractionButton = new javax.swing.JButton();
        AttractionTable = new javax.swing.JScrollPane();
        AttractionListTable2 = new javax.swing.JTable();
        AttractionsAndGatesHelp = new javax.swing.JButton();
        GatesManagementAdminPanel = new javax.swing.JPanel();
        TerminalListPanel = new javax.swing.JPanel();
        FindTerminalButton = new javax.swing.JButton();
        SearchTerminalTextField = new javax.swing.JTextField();
        NewTerminalButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        TerminalListTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        AttractionsAndGatesHelp2 = new javax.swing.JButton();
        EditUserAdmintPanel = new javax.swing.JPanel();
        UpdateUser = new javax.swing.JButton();
        LoginTextField2 = new javax.swing.JTextField();
        UserRadio = new javax.swing.JRadioButton();
        CashierRadio = new javax.swing.JRadioButton();
        AdminRadio = new javax.swing.JRadioButton();
        UpdateResultLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        NameTextField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        SurnameTextField2 = new javax.swing.JTextField();
        DocumentTextField2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        StreetTextField2 = new javax.swing.JTextField();
        CityTextField2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        CountryTextField2 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        userActiveCheckboxInAdminPanel = new javax.swing.JCheckBox();
        AdminUserEditHelpButton = new javax.swing.JButton();
        AdminLogoutButton = new javax.swing.JButton();
        AdminViewTitleLabel = new javax.swing.JLabel();
        AdminPanelBackButton = new javax.swing.JButton();
        AdminMyAccountButton = new javax.swing.JButton();
        AdminBackgroundLabel = new javax.swing.JLabel();
        UserMainPanel = new javax.swing.JPanel();
        UserChangeModeToAdminButton = new javax.swing.JButton();
        UserMyAccountButton = new javax.swing.JButton();
        UserLogoutButton = new javax.swing.JButton();
        ContactButton = new javax.swing.JButton();
        MyCardsButton = new javax.swing.JButton();
        SlopeTrafficButton = new javax.swing.JButton();
        UserContainerPanel = new javax.swing.JPanel();
        UserMyCardsPanel = new javax.swing.JPanel();
        PrintCardDataPanel = new javax.swing.JPanel();
        PrintCardDataOkButton = new javax.swing.JButton();
        PrintCardDataTextPanel = new javax.swing.JScrollPane();
        PrintCardDataText = new javax.swing.JTextArea();
        UserPanelMyCardsHelpButton = new javax.swing.JButton();
        UserBuyPointsPanel = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        BuyAndPayButton = new javax.swing.JButton();
        pointsPackagesListScrollPane = new javax.swing.JScrollPane();
        pointsPackagesListPane = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        costSum = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        pointsSum = new javax.swing.JTextField();
        buyPackagePointsMessage = new javax.swing.JLabel();
        buyPointsPackageBackButton = new javax.swing.JButton();
        UserBuyPointsHelpButton = new javax.swing.JButton();
        UserContactPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        UserChoosePaymentMethodPanel = new javax.swing.JPanel();
        BuyAndPayButton1 = new javax.swing.JButton();
        BuyAndPayButton2 = new javax.swing.JButton();
        mbankOptionLabel = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        transferujOptionLabel = new javax.swing.JLabel();
        paypalOptionLabel = new javax.swing.JLabel();
        BuyAndPayButton3 = new javax.swing.JButton();
        BuyAndPayButton4 = new javax.swing.JButton();
        UserTraffic = new javax.swing.JPanel();
        UserTrafficScrollPane = new javax.swing.JScrollPane();
        UserTrafficTable = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        MyAccountPanel = new javax.swing.JPanel();
        EditLoginLabel = new javax.swing.JLabel();
        EditPasswordLabel = new javax.swing.JLabel();
        LoginEditTextfield = new javax.swing.JTextField();
        PasswordEditTextfield = new javax.swing.JTextField();
        NameEditTextfield = new javax.swing.JTextField();
        SurnameEditTextfield = new javax.swing.JTextField();
        NameEditLabel = new javax.swing.JLabel();
        SurnameEditLabel = new javax.swing.JLabel();
        IDEditLabel = new javax.swing.JLabel();
        IDEditTextfield = new javax.swing.JTextField();
        StreetEditTextfield = new javax.swing.JTextField();
        CityEditTextfield = new javax.swing.JTextField();
        CountryEditTextfield = new javax.swing.JTextField();
        StreetEditLabel = new javax.swing.JLabel();
        CityEditLabel = new javax.swing.JLabel();
        ActiveLabelMyAccount = new javax.swing.JLabel();
        EditDetailsButton = new javax.swing.JButton();
        SaveDetailsButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();
        EditMessageLabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        DocumentEditTextfield = new javax.swing.JTextField();
        CountryEditLabel4 = new javax.swing.JLabel();
        userActiveCheckboxInMyAccountPanel = new javax.swing.JCheckBox();
        Symulator = new javax.swing.JPanel();
        SymulatotHelp = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        SymulatorBuyButton = new javax.swing.JButton();
        SymulatorResultLabel = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        SymulatorTerminalList = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        SymulatorProductList = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        SymulatorCardsList = new javax.swing.JTable();
        BackgroundImageLabel1 = new javax.swing.JLabel();

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jEditorPane1.setName("jEditorPane1"); // NOI18N
        jScrollPane2.setViewportView(jEditorPane1);

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 700));
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        Login.setName("LoginPanel"); // NOI18N
        Login.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                LoginAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Login.setLayout(null);

        LoginPageHelpButton.setText("Pomoc");
        LoginPageHelpButton.setName("LoginPageHelpButton"); // NOI18N
        LoginPageHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginPageHelpButtonActionPerformed(evt);
            }
        });
        Login.add(LoginPageHelpButton);
        LoginPageHelpButton.setBounds(590, 650, 90, 30);

        jButton2.setText("Symulator");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Login.add(jButton2);
        jButton2.setBounds(10, 650, 140, 40);

        LoginButton.setText("Zaloguj");
        LoginButton.setName("LoginPanel"); // NOI18N
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });
        Login.add(LoginButton);
        LoginButton.setBounds(450, 120, 80, 23);

        LoginTextField.setName("LoginPanel"); // NOI18N
        LoginTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginTextFieldActionPerformed(evt);
            }
        });
        Login.add(LoginTextField);
        LoginTextField.setBounds(450, 50, 220, 30);

        MessageLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MessageLabel.setForeground(new java.awt.Color(255, 0, 0));
        MessageLabel.setToolTipText("");
        MessageLabel.setName("MessageLabel"); // NOI18N
        Login.add(MessageLabel);
        MessageLabel.setBounds(450, 30, 220, 20);
        MessageLabel.getAccessibleContext().setAccessibleName("MessageLabel");

        PasswordTextField.setName("LoginPanel"); // NOI18N
        PasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextFieldActionPerformed(evt);
            }
        });
        Login.add(PasswordTextField);
        PasswordTextField.setBounds(450, 80, 220, 30);

        PasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        PasswordLabel.setText("Hasło:");
        PasswordLabel.setName("PasswordLabel"); // NOI18N
        Login.add(PasswordLabel);
        PasswordLabel.setBounds(370, 90, 50, 14);

        LoginLabel.setForeground(new java.awt.Color(255, 255, 255));
        LoginLabel.setText("Login:");
        LoginLabel.setName("LoginLabel"); // NOI18N
        Login.add(LoginLabel);
        LoginLabel.setBounds(370, 60, 50, 14);

        CreateAccountLink.setForeground(new java.awt.Color(255, 255, 255));
        CreateAccountLink.setText("Załóż konto");
        CreateAccountLink.setName("CreateAccountLink"); // NOI18N
        CreateAccountLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateAccountLinkMouseClicked(evt);
            }
        });
        Login.add(CreateAccountLink);
        CreateAccountLink.setBounds(600, 120, 70, 20);

        BackgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login.jpg"))); // NOI18N
        BackgroundImageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        BackgroundImageLabel.setName("BackgroundImageLabel"); // NOI18N
        Login.add(BackgroundImageLabel);
        BackgroundImageLabel.setBounds(0, 0, 1310, 890);

        ActionInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ActionInfoLabel.setText("Trwa logowanie... [Tu będzie jakiś obrazek przedstawiający kręcące się coś albo status bar]");
        ActionInfoLabel.setToolTipText("");
        ActionInfoLabel.setName("ActionInfoLabel"); // NOI18N
        Login.add(ActionInfoLabel);
        ActionInfoLabel.setBounds(0, 0, 750, 440);

        getContentPane().add(Login, "login");
        Login.getAccessibleContext().setAccessibleName("");

        Register.setName("RegisterPanel"); // NOI18N
        Register.setLayout(null);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Ulica:");
        jLabel8.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel8);
        jLabel8.setBounds(370, 300, 50, 14);

        RegisterMessageLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RegisterMessageLabel.setForeground(new java.awt.Color(255, 0, 0));
        RegisterMessageLabel.setName("RegisterMessageLabel"); // NOI18N
        Register.add(RegisterMessageLabel);
        RegisterMessageLabel.setBounds(450, 30, 220, 20);

        LoginTextField1.setName("RegisterPanel"); // NOI18N
        LoginTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginTextField1ActionPerformed(evt);
            }
        });
        Register.add(LoginTextField1);
        LoginTextField1.setBounds(450, 50, 220, 30);
        LoginTextField1.getAccessibleContext().setAccessibleName("LoginTextField1");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hasło:");
        jLabel1.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel1);
        jLabel1.setBounds(370, 90, 50, 14);

        Password.setName("Password"); // NOI18N
        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });
        Register.add(Password);
        Password.setBounds(450, 80, 220, 30);

        RepeatPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        RepeatPasswordLabel.setText("Powtórz hasło:");
        RepeatPasswordLabel.setName("RepeatPasswordLabel"); // NOI18N
        Register.add(RepeatPasswordLabel);
        RepeatPasswordLabel.setBounds(370, 120, 80, 10);

        RepeatPassword.setName("RepeatPassword"); // NOI18N
        Register.add(RepeatPassword);
        RepeatPassword.setBounds(450, 110, 220, 30);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Imię:");
        jLabel2.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel2.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel2);
        jLabel2.setBounds(370, 150, 50, 14);

        RegistrationPageHelpButton.setText("Pomoc");
        RegistrationPageHelpButton.setName("RegistrationPageHelpButton"); // NOI18N
        RegistrationPageHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrationPageHelpButtonActionPerformed(evt);
            }
        });
        Register.add(RegistrationPageHelpButton);
        RegistrationPageHelpButton.setBounds(590, 650, 90, 30);

        Name.setName("Name"); // NOI18N
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        Register.add(Name);
        Name.setBounds(450, 140, 220, 30);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nazwisko:");
        jLabel3.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel3.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel3);
        jLabel3.setBounds(370, 180, 60, 14);

        Surname.setName("Surname"); // NOI18N
        Surname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SurnameActionPerformed(evt);
            }
        });
        Register.add(Surname);
        Surname.setBounds(450, 170, 220, 30);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nr dokumentu:");
        jLabel4.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel4);
        jLabel4.setBounds(370, 210, 90, 14);

        DocumentNumber.setName("DocumentNumber"); // NOI18N
        DocumentNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentNumberActionPerformed(evt);
            }
        });
        Register.add(DocumentNumber);
        DocumentNumber.setBounds(450, 200, 220, 30);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Miasto:");
        jLabel5.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel5.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel5);
        jLabel5.setBounds(370, 240, 50, 14);

        City.setName("City"); // NOI18N
        City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityActionPerformed(evt);
            }
        });
        Register.add(City);
        City.setBounds(450, 230, 220, 30);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Państwo:");
        jLabel6.setMaximumSize(new java.awt.Dimension(29, 14));
        jLabel6.setMinimumSize(new java.awt.Dimension(29, 14));
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(29, 14));
        Register.add(jLabel6);
        jLabel6.setBounds(370, 270, 60, 14);

        Country.setName("Country"); // NOI18N
        Country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountryActionPerformed(evt);
            }
        });
        Register.add(Country);
        Country.setBounds(450, 260, 220, 30);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Login:");
        jLabel7.setName("jLabel7"); // NOI18N
        Register.add(jLabel7);
        jLabel7.setBounds(370, 60, 50, 14);

        Street.setName("Street"); // NOI18N
        Street.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StreetActionPerformed(evt);
            }
        });
        Register.add(Street);
        Street.setBounds(450, 290, 220, 30);

        BackButton.setText("Powrót");
        BackButton.setName("BackButton"); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        Register.add(BackButton);
        BackButton.setBounds(490, 330, 80, 23);

        RegisterButton.setText("Załóż konto");
        RegisterButton.setMaximumSize(new java.awt.Dimension(67, 23));
        RegisterButton.setMinimumSize(new java.awt.Dimension(67, 23));
        RegisterButton.setName("RegisterButton"); // NOI18N
        RegisterButton.setPreferredSize(new java.awt.Dimension(67, 23));
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });
        Register.add(RegisterButton);
        RegisterButton.setBounds(570, 330, 100, 23);

        RegisterBackgroundImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/register.jpg"))); // NOI18N
        RegisterBackgroundImage1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        RegisterBackgroundImage1.setName("RegisterBackgroundImage1"); // NOI18N
        Register.add(RegisterBackgroundImage1);
        RegisterBackgroundImage1.setBounds(0, 0, 1220, 890);

        getContentPane().add(Register, "register");

        CashierPanel.setName("CashierPanel"); // NOI18N
        CashierPanel.setPreferredSize(new java.awt.Dimension(700, 700));
        CashierPanel.setLayout(null);

        CashierContainer.setName("CashierContainer"); // NOI18N
        CashierContainer.setOpaque(false);
        CashierContainer.setLayout(new java.awt.CardLayout());

        ClientAccountEditPanel.setAutoscrolls(true);
        ClientAccountEditPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        ClientAccountEditPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        ClientAccountEditPanel.setName("ClientAccountEditPanel"); // NOI18N
        ClientAccountEditPanel.setLayout(null);

        MyAccountLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        MyAccountLabel2.setText("Edytuj dane klienta");
        MyAccountLabel2.setName("MyAccountLabel2"); // NOI18N
        ClientAccountEditPanel.add(MyAccountLabel2);
        MyAccountLabel2.setBounds(90, 10, 270, 30);

        EditLoginLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditLoginLabel2.setText("Login");
        EditLoginLabel2.setName("EditLoginLabel2"); // NOI18N
        ClientAccountEditPanel.add(EditLoginLabel2);
        EditLoginLabel2.setBounds(10, 100, 80, 30);

        EditPasswordLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditPasswordLabel2.setText("Hasło");
        EditPasswordLabel2.setName("EditPasswordLabel2"); // NOI18N
        ClientAccountEditPanel.add(EditPasswordLabel2);
        EditPasswordLabel2.setBounds(10, 130, 80, 30);

        LoginEditTextfield2.setName("LoginEditTextfield2"); // NOI18N
        LoginEditTextfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginEditTextfield2ActionPerformed(evt);
            }
        });
        ClientAccountEditPanel.add(LoginEditTextfield2);
        LoginEditTextfield2.setBounds(110, 100, 180, 30);

        PasswordEditTextfield2.setEditable(false);
        PasswordEditTextfield2.setText("*****");
        PasswordEditTextfield2.setName("PasswordEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(PasswordEditTextfield2);
        PasswordEditTextfield2.setBounds(110, 130, 180, 30);

        NameEditTextfield2.setName("NameEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(NameEditTextfield2);
        NameEditTextfield2.setBounds(110, 160, 180, 30);

        SurnameEditTextfield2.setName("SurnameEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(SurnameEditTextfield2);
        SurnameEditTextfield2.setBounds(110, 190, 180, 30);

        NameEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NameEditLabel2.setText("Imię");
        NameEditLabel2.setName("NameEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(NameEditLabel2);
        NameEditLabel2.setBounds(10, 160, 80, 30);

        SurnameEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SurnameEditLabel2.setText("Nazwisko");
        SurnameEditLabel2.setName("SurnameEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(SurnameEditLabel2);
        SurnameEditLabel2.setBounds(10, 190, 80, 30);

        IDEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        IDEditLabel2.setText("ID");
        IDEditLabel2.setName("IDEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(IDEditLabel2);
        IDEditLabel2.setBounds(10, 70, 80, 30);

        IDEditTextfield2.setName("IDEditTextfield2"); // NOI18N
        IDEditTextfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDEditTextfield2ActionPerformed(evt);
            }
        });
        ClientAccountEditPanel.add(IDEditTextfield2);
        IDEditTextfield2.setBounds(110, 70, 180, 30);

        StreetEditTextfield2.setName("StreetEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(StreetEditTextfield2);
        StreetEditTextfield2.setBounds(110, 250, 180, 30);

        CityEditTextfield2.setName("CityEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(CityEditTextfield2);
        CityEditTextfield2.setBounds(110, 280, 180, 30);

        CountryEditTextfield2.setName("CountryEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(CountryEditTextfield2);
        CountryEditTextfield2.setBounds(110, 310, 180, 30);

        StreetEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StreetEditLabel2.setText("Ulica");
        StreetEditLabel2.setName("StreetEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(StreetEditLabel2);
        StreetEditLabel2.setBounds(10, 250, 80, 30);

        CityEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CityEditLabel2.setText("Miasto");
        CityEditLabel2.setName("CityEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(CityEditLabel2);
        CityEditLabel2.setBounds(10, 280, 80, 30);

        CountryEditLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CountryEditLabel2.setText("Aktywny?");
        CountryEditLabel2.setName("CountryEditLabel2"); // NOI18N
        ClientAccountEditPanel.add(CountryEditLabel2);
        CountryEditLabel2.setBounds(10, 340, 80, 30);

        EditDetailsButton2.setText("Edytuj Dane");
        EditDetailsButton2.setName("EditDetailsButton2"); // NOI18N
        EditDetailsButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditDetailsButton2ActionPerformed(evt);
            }
        });
        ClientAccountEditPanel.add(EditDetailsButton2);
        EditDetailsButton2.setBounds(110, 380, 180, 23);

        SaveDetailsButton2.setText("Zapisz");
        SaveDetailsButton2.setEnabled(false);
        SaveDetailsButton2.setName("SaveDetailsButton2"); // NOI18N
        SaveDetailsButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDetailsButton2ActionPerformed(evt);
            }
        });
        ClientAccountEditPanel.add(SaveDetailsButton2);
        SaveDetailsButton2.setBounds(210, 410, 80, 23);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Nr dokumentu");
        jLabel12.setName("jLabel12"); // NOI18N
        ClientAccountEditPanel.add(jLabel12);
        jLabel12.setBounds(10, 220, 100, 30);

        CancelButton2.setText("Anuluj");
        CancelButton2.setEnabled(false);
        CancelButton2.setName("CancelButton2"); // NOI18N
        CancelButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButton2ActionPerformed(evt);
            }
        });
        ClientAccountEditPanel.add(CancelButton2);
        CancelButton2.setBounds(110, 410, 73, 23);

        EditMessageLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditMessageLabel2.setName("EditMessageLabel2"); // NOI18N
        ClientAccountEditPanel.add(EditMessageLabel2);
        EditMessageLabel2.setBounds(110, 440, 180, 20);

        DocumentEditTextfield2.setName("DocumentEditTextfield2"); // NOI18N
        ClientAccountEditPanel.add(DocumentEditTextfield2);
        DocumentEditTextfield2.setBounds(110, 220, 180, 30);

        CountryEditLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CountryEditLabel3.setText("Kraj");
        CountryEditLabel3.setName("CountryEditLabel3"); // NOI18N
        ClientAccountEditPanel.add(CountryEditLabel3);
        CountryEditLabel3.setBounds(10, 310, 80, 30);

        userActiveCheckboxInCashierPanel.setEnabled(false);
        userActiveCheckboxInCashierPanel.setName("userActiveCheckboxInCashierPanel"); // NOI18N
        ClientAccountEditPanel.add(userActiveCheckboxInCashierPanel);
        userActiveCheckboxInCashierPanel.setBounds(110, 350, 30, 21);

        CashierContainer.add(ClientAccountEditPanel, "ClientAccountEditPanel");

        NewClientAccountPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        NewClientAccountPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        NewClientAccountPanel.setName(""); // NOI18N
        NewClientAccountPanel.setOpaque(false);
        NewClientAccountPanel.setLayout(null);

        MyAccountLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        MyAccountLabel1.setText("Nowe konto klienta");
        MyAccountLabel1.setName("MyAccountLabel1"); // NOI18N
        NewClientAccountPanel.add(MyAccountLabel1);
        MyAccountLabel1.setBounds(90, 10, 270, 30);

        EditLoginLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditLoginLabel1.setText("Login");
        EditLoginLabel1.setName("EditLoginLabel1"); // NOI18N
        NewClientAccountPanel.add(EditLoginLabel1);
        EditLoginLabel1.setBounds(10, 70, 80, 30);

        EditPasswordLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditPasswordLabel1.setText("Powtórz hasło");
        EditPasswordLabel1.setName("EditPasswordLabel1"); // NOI18N
        NewClientAccountPanel.add(EditPasswordLabel1);
        EditPasswordLabel1.setBounds(10, 130, 100, 30);

        LoginEditTextfield1.setName("LoginEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(LoginEditTextfield1);
        LoginEditTextfield1.setBounds(110, 70, 180, 30);

        PasswordEditTextfield1.setName("PasswordEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(PasswordEditTextfield1);
        PasswordEditTextfield1.setBounds(110, 130, 180, 30);

        NameEditTextfield1.setName("NameEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(NameEditTextfield1);
        NameEditTextfield1.setBounds(110, 160, 180, 30);

        SurnameEditTextfield1.setName("SurnameEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(SurnameEditTextfield1);
        SurnameEditTextfield1.setBounds(110, 190, 180, 30);

        NameEditLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NameEditLabel1.setText("Imię");
        NameEditLabel1.setName("NameEditLabel1"); // NOI18N
        NewClientAccountPanel.add(NameEditLabel1);
        NameEditLabel1.setBounds(10, 160, 80, 30);

        SurnameEditLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SurnameEditLabel1.setText("Nazwisko");
        SurnameEditLabel1.setName("SurnameEditLabel1"); // NOI18N
        NewClientAccountPanel.add(SurnameEditLabel1);
        SurnameEditLabel1.setBounds(10, 190, 80, 30);

        StreetEditTextfield1.setName("StreetEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(StreetEditTextfield1);
        StreetEditTextfield1.setBounds(110, 250, 180, 30);

        CityEditTextfield1.setName("CityEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(CityEditTextfield1);
        CityEditTextfield1.setBounds(110, 280, 180, 30);

        CountryEditTextfield1.setName("CountryEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(CountryEditTextfield1);
        CountryEditTextfield1.setBounds(110, 310, 180, 30);

        StreetEditLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StreetEditLabel1.setText("Ulica");
        StreetEditLabel1.setName("StreetEditLabel1"); // NOI18N
        NewClientAccountPanel.add(StreetEditLabel1);
        StreetEditLabel1.setBounds(10, 250, 80, 30);

        CityEditLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CityEditLabel1.setText("Miasto");
        CityEditLabel1.setName("CityEditLabel1"); // NOI18N
        NewClientAccountPanel.add(CityEditLabel1);
        CityEditLabel1.setBounds(10, 280, 80, 30);

        CountryEditLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CountryEditLabel1.setText("Kraj");
        CountryEditLabel1.setName("CountryEditLabel1"); // NOI18N
        NewClientAccountPanel.add(CountryEditLabel1);
        CountryEditLabel1.setBounds(10, 310, 80, 30);

        SaveDetailsButton1.setText("Zapisz");
        SaveDetailsButton1.setName("SaveDetailsButton1"); // NOI18N
        SaveDetailsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDetailsButton1ActionPerformed(evt);
            }
        });
        NewClientAccountPanel.add(SaveDetailsButton1);
        SaveDetailsButton1.setBounds(210, 360, 80, 23);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Nr dokumentu");
        jLabel11.setName("jLabel11"); // NOI18N
        NewClientAccountPanel.add(jLabel11);
        jLabel11.setBounds(10, 220, 100, 30);

        CancelButton1.setText("Anuluj");
        CancelButton1.setName("CancelButton1"); // NOI18N
        CancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButton1ActionPerformed(evt);
            }
        });
        NewClientAccountPanel.add(CancelButton1);
        CancelButton1.setBounds(110, 360, 73, 23);

        EditMessageLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditMessageLabel1.setName("EditMessageLabel1"); // NOI18N
        NewClientAccountPanel.add(EditMessageLabel1);
        EditMessageLabel1.setBounds(110, 390, 180, 20);

        DocumentEditTextfield1.setName("DocumentEditTextfield1"); // NOI18N
        NewClientAccountPanel.add(DocumentEditTextfield1);
        DocumentEditTextfield1.setBounds(110, 220, 180, 30);

        PasswordEditTextfield3.setName("PasswordEditTextfield3"); // NOI18N
        NewClientAccountPanel.add(PasswordEditTextfield3);
        PasswordEditTextfield3.setBounds(110, 100, 180, 30);

        EditPasswordLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditPasswordLabel3.setText("Hasło");
        EditPasswordLabel3.setName("EditPasswordLabel3"); // NOI18N
        NewClientAccountPanel.add(EditPasswordLabel3);
        EditPasswordLabel3.setBounds(10, 100, 80, 30);

        CashierContainer.add(NewClientAccountPanel, "NewClientAccountPanel");

        ClientCardsPanel.setName("ClientCardsPanel"); // NOI18N
        ClientCardsPanel.setOpaque(false);
        ClientCardsPanel.setLayout(null);

        PrintCardDataPanel1.setBackground(new java.awt.Color(204, 204, 204));
        PrintCardDataPanel1.setName("PrintCardDataPanel1"); // NOI18N
        PrintCardDataPanel1.setLayout(null);

        PrintCardDataOkButton1.setText("OK");
        PrintCardDataOkButton1.setName("PrintCardDataOkButton1"); // NOI18N
        PrintCardDataOkButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintCardDataOkButton1ActionPerformed(evt);
            }
        });
        PrintCardDataPanel1.add(PrintCardDataOkButton1);
        PrintCardDataOkButton1.setBounds(210, 450, 47, 23);

        PrintCardDataTextPanel1.setName("PrintCardDataTextPanel1"); // NOI18N

        PrintCardDataText1.setColumns(20);
        PrintCardDataText1.setRows(5);
        PrintCardDataText1.setName("PrintCardDataText1"); // NOI18N
        PrintCardDataTextPanel1.setViewportView(PrintCardDataText1);

        PrintCardDataPanel1.add(PrintCardDataTextPanel1);
        PrintCardDataTextPanel1.setBounds(20, 20, 430, 420);

        ClientCardsPanel.add(PrintCardDataPanel1);
        PrintCardDataPanel1.setBounds(20, 20, 470, 490);

        CashierContainer.add(ClientCardsPanel, "ClientCardsPanel");

        StationTrafficPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        StationTrafficPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        StationTrafficPanel.setName("StationTrafficPanel"); // NOI18N
        StationTrafficPanel.setOpaque(false);
        StationTrafficPanel.setLayout(null);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        StationTrafficTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID stoku", "Ruch z ost. godziny", "Przeciążenie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
        centerRenderer2.setHorizontalAlignment (JLabel.CENTER);
        StationTrafficTable.setDefaultRenderer (String.class, centerRenderer2);
        StationTrafficTable.setDefaultRenderer (Long.class, centerRenderer2);
        DefaultTableCellRenderer renderer2 = (DefaultTableCellRenderer)StationTrafficTable.getTableHeader().getDefaultRenderer();
        renderer2.setHorizontalAlignment (JLabel.CENTER);
        StationTrafficTable.setEnabled(false);
        StationTrafficTable.setEnabled(false);
        StationTrafficTable.setName("StationTrafficTable"); // NOI18N
        StationTrafficTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                StationTrafficTableShowed(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(StationTrafficTable);

        StationTrafficPanel.add(jScrollPane1);
        jScrollPane1.setBounds(20, 10, 452, 402);

        CashierContainer.add(StationTrafficPanel, "StationTrafficPanel");

        ContactPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        ContactPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        ContactPanel.setName("ContactPanel"); // NOI18N
        ContactPanel.setOpaque(false);
        ContactPanel.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel13.setText("Kontakt");
        jLabel13.setName("jLabel13"); // NOI18N
        ContactPanel.add(jLabel13);
        jLabel13.setBounds(190, 0, 240, 60);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Akademicka 18, Gliwice 44-100");
        jLabel25.setName("jLabel25"); // NOI18N
        ContactPanel.add(jLabel25);
        jLabel25.setBounds(30, 80, 300, 50);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("Telefon: 558 201 654");
        jLabel26.setName("jLabel26"); // NOI18N
        ContactPanel.add(jLabel26);
        jLabel26.setBounds(30, 50, 300, 50);

        CashierContainer.add(ContactPanel, "ContactPanel");

        SearchPanel.setName("SearchPanel"); // NOI18N
        SearchPanel.setOpaque(false);
        SearchPanel.setLayout(null);

        UserSearchInputTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        UserSearchInputTextField.setName("UserSearchInputTextField"); // NOI18N
        UserSearchInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSearchInputTextFieldActionPerformed(evt);
            }
        });
        UserSearchInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UserSearchInputTextFieldChanged(evt);
            }
        });
        SearchPanel.add(UserSearchInputTextField);
        UserSearchInputTextField.setBounds(13, 10, 200, 40);

        ResultListPanel.setName("ResultListPanel"); // NOI18N

        ResultList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ResultList.setName("ResultList"); // NOI18N
        ResultList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultListClicked(evt);
            }
        });
        ResultListPanel.setViewportView(ResultList);

        SearchPanel.add(ResultListPanel);
        ResultListPanel.setBounds(10, 60, 280, 240);

        SearchButton2.setText("Szukaj");
        SearchButton2.setName("SearchButton2"); // NOI18N
        SearchPanel.add(SearchButton2);
        SearchButton2.setBounds(220, 10, 70, 40);

        CardScanStatusTextField.setEditable(false);
        CardScanStatusTextField.setBackground(new java.awt.Color(255, 255, 255));
        CardScanStatusTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CardScanStatusTextField.setText("Skanuj");
        CardScanStatusTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CardScanStatusTextField.setName("CardScanStatusTextField"); // NOI18N
        SearchPanel.add(CardScanStatusTextField);
        CardScanStatusTextField.setBounds(330, 60, 180, 70);

        CardScanButton.setText("Skanuj kartę");
        CardScanButton.setName("CardScanButton"); // NOI18N
        CardScanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CardScanButtonActionPerformed(evt);
            }
        });
        SearchPanel.add(CardScanButton);
        CardScanButton.setBounds(330, 10, 180, 40);

        CashierContainer.add(SearchPanel, "SearchPanel");

        CashierPanel.add(CashierContainer);
        CashierContainer.setBounds(175, 130, 515, 495);

        ContactButton3.setText("Kontakt");
        ContactButton3.setMaximumSize(new java.awt.Dimension(67, 23));
        ContactButton3.setMinimumSize(new java.awt.Dimension(67, 23));
        ContactButton3.setName("ContactButton3"); // NOI18N
        ContactButton3.setPreferredSize(new java.awt.Dimension(67, 23));
        ContactButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactButton3ActionPerformed(evt);
            }
        });
        CashierPanel.add(ContactButton3);
        ContactButton3.setBounds(20, 280, 140, 30);

        NewAccountButton.setText("Założ konto klienta");
        NewAccountButton.setMaximumSize(new java.awt.Dimension(67, 23));
        NewAccountButton.setMinimumSize(new java.awt.Dimension(67, 23));
        NewAccountButton.setName("NewAccountButton"); // NOI18N
        NewAccountButton.setPreferredSize(new java.awt.Dimension(67, 23));
        NewAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewAccountButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(NewAccountButton);
        NewAccountButton.setBounds(20, 160, 140, 30);

        LogoutButton.setText("Wyloguj");
        LogoutButton.setMaximumSize(new java.awt.Dimension(67, 23));
        LogoutButton.setMinimumSize(new java.awt.Dimension(67, 23));
        LogoutButton.setName("LogoutButton"); // NOI18N
        LogoutButton.setPreferredSize(new java.awt.Dimension(67, 23));
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(LogoutButton);
        LogoutButton.setBounds(580, 10, 80, 23);

        EditClientButton.setText("Edytuj klienta");
        EditClientButton.setMaximumSize(new java.awt.Dimension(67, 23));
        EditClientButton.setMinimumSize(new java.awt.Dimension(67, 23));
        EditClientButton.setName("EditClientButton"); // NOI18N
        EditClientButton.setPreferredSize(new java.awt.Dimension(67, 23));
        EditClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditClientButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(EditClientButton);
        EditClientButton.setBounds(20, 190, 140, 30);

        SlopeTrafficButton1.setText("Natężenie stoku");
        SlopeTrafficButton1.setMaximumSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton1.setMinimumSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton1.setName("SlopeTrafficButton1"); // NOI18N
        SlopeTrafficButton1.setPreferredSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlopeTrafficButton1ActionPerformed(evt);
            }
        });
        CashierPanel.add(SlopeTrafficButton1);
        SlopeTrafficButton1.setBounds(20, 250, 140, 30);

        ClientModeButton1.setText("Tryb klienta");
        ClientModeButton1.setMaximumSize(new java.awt.Dimension(67, 23));
        ClientModeButton1.setMinimumSize(new java.awt.Dimension(67, 23));
        ClientModeButton1.setName("ClientModeButton1"); // NOI18N
        ClientModeButton1.setPreferredSize(new java.awt.Dimension(67, 23));
        ClientModeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientModeButton1ActionPerformed(evt);
            }
        });
        CashierPanel.add(ClientModeButton1);
        ClientModeButton1.setBounds(480, 10, 100, 23);

        CashierChangeModeToAdminButton.setText("Tryb administratora");
        CashierChangeModeToAdminButton.setMaximumSize(new java.awt.Dimension(67, 23));
        CashierChangeModeToAdminButton.setMinimumSize(new java.awt.Dimension(67, 23));
        CashierChangeModeToAdminButton.setName("CashierChangeModeToAdminButton"); // NOI18N
        CashierChangeModeToAdminButton.setPreferredSize(new java.awt.Dimension(67, 23));
        CashierChangeModeToAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashierChangeModeToAdminButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(CashierChangeModeToAdminButton);
        CashierChangeModeToAdminButton.setBounds(330, 10, 150, 23);

        SearchButton.setText("Wyszukiwarka");
        SearchButton.setMaximumSize(new java.awt.Dimension(67, 23));
        SearchButton.setMinimumSize(new java.awt.Dimension(67, 23));
        SearchButton.setName("SearchButton"); // NOI18N
        SearchButton.setPreferredSize(new java.awt.Dimension(67, 23));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(SearchButton);
        SearchButton.setBounds(20, 130, 140, 30);

        SelectedUserPanel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SelectedUserPanel.setName("SelectedUserPanel"); // NOI18N

        SelecetedUserTextPlane.setEditable(false);
        SelecetedUserTextPlane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SelecetedUserTextPlane.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SelecetedUserTextPlane.setText("Użytkownik: brak");
        SelecetedUserTextPlane.setToolTipText("");
        SelecetedUserTextPlane.setName("SelecetedUserTextPlane"); // NOI18N
        SelectedUserPanel.setViewportView(SelecetedUserTextPlane);

        CashierPanel.add(SelectedUserPanel);
        SelectedUserPanel.setBounds(180, 60, 500, 60);

        CashierHelpButton.setText("Pomoc");
        CashierHelpButton.setActionCommand("CashierHelpButton");
        CashierHelpButton.setMaximumSize(new java.awt.Dimension(67, 23));
        CashierHelpButton.setMinimumSize(new java.awt.Dimension(67, 23));
        CashierHelpButton.setName("CashierHelpButton"); // NOI18N
        CashierHelpButton.setPreferredSize(new java.awt.Dimension(67, 23));
        CashierHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashierHelpButtonActionPerformed(evt);
            }
        });
        CashierPanel.add(CashierHelpButton);
        CashierHelpButton.setBounds(20, 630, 140, 30);

        ClientCardsButton1.setText("Karty klienta");
        ClientCardsButton1.setMaximumSize(new java.awt.Dimension(67, 23));
        ClientCardsButton1.setMinimumSize(new java.awt.Dimension(67, 23));
        ClientCardsButton1.setName("ClientCardsButton1"); // NOI18N
        ClientCardsButton1.setPreferredSize(new java.awt.Dimension(67, 23));
        ClientCardsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientCardsButton1ActionPerformed(evt);
            }
        });
        CashierPanel.add(ClientCardsButton1);
        ClientCardsButton1.setBounds(20, 220, 140, 30);

        UserBackgroundLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clientPage.jpg"))); // NOI18N
        UserBackgroundLabel3.setName("UserBackgroundLabel3"); // NOI18N
        CashierPanel.add(UserBackgroundLabel3);
        UserBackgroundLabel3.setBounds(0, 0, 700, 700);

        getContentPane().add(CashierPanel, "cashierPanel");

        AdminMainPanel.setName("AdminMainPanel"); // NOI18N
        AdminMainPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AdminMainPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        AdminMainPanel.setLayout(null);

        AdminContainerPanel.setName("AdminContainerPanel"); // NOI18N
        AdminContainerPanel.setOpaque(false);
        AdminContainerPanel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                AdminContainerPanelComponentAdded(evt);
            }
        });
        AdminContainerPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                AdminContainerPanelComponentShown(evt);
            }
        });
        AdminContainerPanel.setLayout(new java.awt.CardLayout());

        AdminMenuPanel.setName("AdminMenuPanel"); // NOI18N
        AdminMenuPanel.setOpaque(false);
        AdminMenuPanel.setLayout(null);

        UsersButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        UsersButton.setText("Użytkownicy");
        UsersButton.setName("UsersButton"); // NOI18N
        UsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsersButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(UsersButton);
        UsersButton.setBounds(120, 20, 160, 80);

        PriceListButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PriceListButton.setText("Cennik");
        PriceListButton.setToolTipText("");
        PriceListButton.setName("PriceListButton"); // NOI18N
        PriceListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceListButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(PriceListButton);
        PriceListButton.setBounds(290, 20, 160, 80);

        SlopeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SlopeButton.setText("Stok");
        SlopeButton.setName("SlopeButton"); // NOI18N
        SlopeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlopeButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(SlopeButton);
        SlopeButton.setBounds(120, 110, 160, 80);

        GatesButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GatesButton.setText("Atrakcje/Bramki");
        GatesButton.setName("GatesButton"); // NOI18N
        GatesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GatesButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(GatesButton);
        GatesButton.setBounds(290, 110, 160, 80);

        CashierModeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CashierModeButton.setText("Tryb kasjera");
        CashierModeButton.setName("CashierModeButton"); // NOI18N
        CashierModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashierModeButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(CashierModeButton);
        CashierModeButton.setBounds(120, 200, 160, 80);

        ClientModeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ClientModeButton.setText("Tryb klienta");
        ClientModeButton.setName("ClientModeButton"); // NOI18N
        ClientModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientModeButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(ClientModeButton);
        ClientModeButton.setBounds(290, 200, 160, 80);

        AdminMainPanelHelpButton.setText("Pomoc");
        AdminMainPanelHelpButton.setName("AdminMainPanelHelpButton"); // NOI18N
        AdminMainPanelHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminMainPanelHelpButtonActionPerformed(evt);
            }
        });
        AdminMenuPanel.add(AdminMainPanelHelpButton);
        AdminMainPanelHelpButton.setBounds(483, 320, 100, 23);

        AdminContainerPanel.add(AdminMenuPanel, "adminMenuPanel");

        GateProductsPanel.setName("gatesProductsPanel"); // NOI18N
        GateProductsPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                GateProductsPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        GateProductsPanel.setLayout(null);

        jLabel39.setText("Terminale");
        jLabel39.setName("jLabel39"); // NOI18N
        GateProductsPanel.add(jLabel39);
        jLabel39.setBounds(0, 10, 200, 20);

        jLabel40.setText("Produkty w terminalach");
        jLabel40.setName("jLabel40"); // NOI18N
        GateProductsPanel.add(jLabel40);
        jLabel40.setBounds(190, 10, 200, 20);

        jLabel41.setText("Dostepne Produkty");
        jLabel41.setName("jLabel41"); // NOI18N
        GateProductsPanel.add(jLabel41);
        jLabel41.setBounds(400, 10, 160, 20);

        GatesProductsAddFromGate.setBackground(new java.awt.Color(0, 0, 0));
        GatesProductsAddFromGate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GatesProductsAddFromGate.setForeground(new java.awt.Color(255, 255, 255));
        GatesProductsAddFromGate.setText("Dodaj");
        GatesProductsAddFromGate.setName("GatesProductsAddFromGate"); // NOI18N
        GatesProductsAddFromGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GatesProductsAddFromGateActionPerformed(evt);
            }
        });
        GateProductsPanel.add(GatesProductsAddFromGate);
        GatesProductsAddFromGate.setBounds(400, 300, 160, 40);

        GatesProductsRemoveFromGate.setBackground(new java.awt.Color(0, 0, 0));
        GatesProductsRemoveFromGate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GatesProductsRemoveFromGate.setForeground(new java.awt.Color(255, 255, 255));
        GatesProductsRemoveFromGate.setText("Usuń");
        GatesProductsRemoveFromGate.setName("GatesProductsRemoveFromGate"); // NOI18N
        GatesProductsRemoveFromGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GatesProductsRemoveFromGateActionPerformed(evt);
            }
        });
        GateProductsPanel.add(GatesProductsRemoveFromGate);
        GatesProductsRemoveFromGate.setBounds(210, 300, 160, 40);

        GatesProductsResultLabel.setName("GatesProductsResultLabel"); // NOI18N
        GateProductsPanel.add(GatesProductsResultLabel);
        GatesProductsResultLabel.setBounds(50, 300, 290, 40);

        jScrollPane16.setName("jScrollPane16"); // NOI18N

        GatesProductsGatesProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GatesProductsGatesProductList.setToolTipText("");
        GatesProductsGatesProductList.setName("GatesProductsGatesProductList"); // NOI18N
        GatesProductsGatesProductList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GatesProductsGatesProductListMouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(GatesProductsGatesProductList);

        GateProductsPanel.add(jScrollPane16);
        jScrollPane16.setBounds(190, 30, 180, 260);

        jScrollPane17.setName("jScrollPane17"); // NOI18N

        GatesProductsAwailableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        GatesProductsAwailableProducts.setToolTipText("");
        GatesProductsAwailableProducts.setName("GatesProductsAwailableProducts"); // NOI18N
        jScrollPane17.setViewportView(GatesProductsAwailableProducts);

        GateProductsPanel.add(jScrollPane17);
        jScrollPane17.setBounds(400, 30, 230, 260);

        jScrollPane18.setName("jScrollPane18"); // NOI18N

        GatesProductsGatesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Atrakcja"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        GatesProductsGatesList.setToolTipText("");
        GatesProductsGatesList.setName("GatesProductsGatesList"); // NOI18N
        GatesProductsGatesList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                GatesProductsGatesListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        GatesProductsGatesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GatesProductsGatesListMouseClicked(evt);
            }
        });
        jScrollPane18.setViewportView(GatesProductsGatesList);

        GateProductsPanel.add(jScrollPane18);
        jScrollPane18.setBounds(0, 30, 160, 260);

        GateProductsHelp.setText("Pomoc");
        GateProductsHelp.setName("GateProductsHelp"); // NOI18N
        GateProductsHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GateProductsHelpActionPerformed(evt);
            }
        });
        GateProductsPanel.add(GateProductsHelp);
        GateProductsHelp.setBounds(520, 0, 80, 30);

        AdminContainerPanel.add(GateProductsPanel, "gatesProductsPanel");

        EditProductPanel.setName("EditProductPanel"); // NOI18N
        EditProductPanel.setOpaque(false);
        EditProductPanel.setLayout(null);

        ActualizeProductButton.setBackground(new java.awt.Color(0, 0, 0));
        ActualizeProductButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ActualizeProductButton.setForeground(new java.awt.Color(255, 255, 255));
        ActualizeProductButton.setText("Aktualizuj");
        ActualizeProductButton.setName("ActualizeProductButton"); // NOI18N
        EditProductPanel.add(ActualizeProductButton);
        ActualizeProductButton.setBounds(160, 180, 120, 30);

        ActualizePriceTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ActualizePriceTextField.setName("ActualizePriceTextField"); // NOI18N
        EditProductPanel.add(ActualizePriceTextField);
        ActualizePriceTextField.setBounds(30, 130, 250, 30);

        ActualizeProductNameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ActualizeProductNameText.setName("ActualizeProductNameText"); // NOI18N
        EditProductPanel.add(ActualizeProductNameText);
        ActualizeProductNameText.setBounds(30, 70, 250, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Cena");
        jLabel17.setName("jLabel17"); // NOI18N
        EditProductPanel.add(jLabel17);
        jLabel17.setBounds(30, 110, 110, 14);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nazwa");
        jLabel18.setName("jLabel18"); // NOI18N
        EditProductPanel.add(jLabel18);
        jLabel18.setBounds(30, 50, 120, 14);

        AdminEditProductHelpButton.setText("Pomoc");
        AdminEditProductHelpButton.setName("AdminEditProductHelpButton"); // NOI18N
        AdminEditProductHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminEditProductHelpButtonActionPerformed(evt);
            }
        });
        EditProductPanel.add(AdminEditProductHelpButton);
        AdminEditProductHelpButton.setBounds(469, 320, 120, 23);

        AdminContainerPanel.add(EditProductPanel, "editProductAdminPanel");
        EditProductPanel.getAccessibleContext().setAccessibleName("");

        AddProductToPriceListPanel.setName("AddProductToPriceListPanel"); // NOI18N
        AddProductToPriceListPanel.setOpaque(false);
        AddProductToPriceListPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AddProductToPriceListPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        AddProductToPriceListPanel.setLayout(null);

        ProductPriceListAddItemPrice.setBackground(new java.awt.Color(0, 0, 0));
        ProductPriceListAddItemPrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ProductPriceListAddItemPrice.setForeground(new java.awt.Color(255, 255, 255));
        ProductPriceListAddItemPrice.setText("Dodaj");
        ProductPriceListAddItemPrice.setName("ProductPriceListAddItemPrice"); // NOI18N
        ProductPriceListAddItemPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductPriceListAddItemPriceActionPerformed(evt);
            }
        });
        AddProductToPriceListPanel.add(ProductPriceListAddItemPrice);
        ProductPriceListAddItemPrice.setBounds(430, 300, 160, 40);

        ProductPriceListResult.setName("ProductPriceListResult"); // NOI18N
        AddProductToPriceListPanel.add(ProductPriceListResult);
        ProductPriceListResult.setBounds(10, 300, 290, 40);

        ProductPriceListFindProduct.setToolTipText("");
        ProductPriceListFindProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProductPriceListFindProduct.setName("ProductPriceListFindProduct"); // NOI18N
        ProductPriceListFindProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductPriceListFindProductKeyReleased(evt);
            }
        });
        AddProductToPriceListPanel.add(ProductPriceListFindProduct);
        ProductPriceListFindProduct.setBounds(430, 0, 160, 30);

        ProductPriceItemPriceLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ProductPriceItemPriceLabel.setText("Cena");
        ProductPriceItemPriceLabel.setName("ProductPriceItemPriceLabel"); // NOI18N
        AddProductToPriceListPanel.add(ProductPriceItemPriceLabel);
        ProductPriceItemPriceLabel.setBounds(310, 310, 190, 30);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        ProductPriceListItemPrices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produkt", "Cena"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProductPriceListItemPrices.setToolTipText("");
        ProductPriceListItemPrices.setName("ProductPriceListItemPrices"); // NOI18N
        jScrollPane4.setViewportView(ProductPriceListItemPrices);

        AddProductToPriceListPanel.add(jScrollPane4);
        jScrollPane4.setBounds(210, 30, 200, 260);

        jScrollPane11.setName("jScrollPane11"); // NOI18N

        ProductPriceListProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ProductPriceListProducts.setToolTipText("");
        ProductPriceListProducts.setName("ProductPriceListProducts"); // NOI18N
        jScrollPane11.setViewportView(ProductPriceListProducts);

        AddProductToPriceListPanel.add(jScrollPane11);
        jScrollPane11.setBounds(430, 30, 160, 260);

        jScrollPane12.setName("jScrollPane12"); // NOI18N

        ProductPriceListPriceLists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Od", "Do"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ProductPriceListPriceLists.setToolTipText("");
        ProductPriceListPriceLists.setName("ProductPriceListPriceLists"); // NOI18N
        ProductPriceListPriceLists.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ProductPriceListPriceListsAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        ProductPriceListPriceLists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductPriceListPriceListsMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(ProductPriceListPriceLists);

        AddProductToPriceListPanel.add(jScrollPane12);
        jScrollPane12.setBounds(0, 30, 200, 260);

        ProductPriceItemPriceField.setText("0");
        ProductPriceItemPriceField.setToolTipText("");
        ProductPriceItemPriceField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProductPriceItemPriceField.setName("ProductPriceItemPriceField"); // NOI18N
        AddProductToPriceListPanel.add(ProductPriceItemPriceField);
        ProductPriceItemPriceField.setBounds(350, 300, 80, 40);

        ProductPriceListPriceListFind.setToolTipText("");
        ProductPriceListPriceListFind.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProductPriceListPriceListFind.setName("ProductPriceListPriceListFind"); // NOI18N
        ProductPriceListPriceListFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductPriceListPriceListFindKeyReleased(evt);
            }
        });
        AddProductToPriceListPanel.add(ProductPriceListPriceListFind);
        ProductPriceListPriceListFind.setBounds(0, 0, 200, 30);

        AdminAddProductToPricelistHelpButton.setText("Pomoc");
        AdminAddProductToPricelistHelpButton.setName("AdminAddProductToPricelistHelpButton"); // NOI18N
        AdminAddProductToPricelistHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAddProductToPricelistHelpButtonActionPerformed(evt);
            }
        });
        AddProductToPriceListPanel.add(AdminAddProductToPricelistHelpButton);
        AdminAddProductToPricelistHelpButton.setBounds(179, 310, 110, 23);

        AdminContainerPanel.add(AddProductToPriceListPanel, "addProductToPriceListPanel");
        AddProductToPriceListPanel.getAccessibleContext().setAccessibleName("");

        AddProductPanel.setName("AddProductPanel"); // NOI18N
        AddProductPanel.setOpaque(false);
        AddProductPanel.setLayout(null);

        AddNewProductButton1.setBackground(new java.awt.Color(0, 0, 0));
        AddNewProductButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddNewProductButton1.setForeground(new java.awt.Color(255, 255, 255));
        AddNewProductButton1.setText("Dodaj");
        AddNewProductButton1.setName("AddNewProductButton1"); // NOI18N
        AddNewProductButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewProductButton1ActionPerformed(evt);
            }
        });
        AddProductPanel.add(AddNewProductButton1);
        AddNewProductButton1.setBounds(160, 180, 120, 30);

        NewProductNameTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NewProductNameTextField1.setName("NewProductNameTextField1"); // NOI18N
        AddProductPanel.add(NewProductNameTextField1);
        NewProductNameTextField1.setBounds(30, 70, 250, 30);

        ProductNameLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ProductNameLabel1.setText("Nazwa");
        ProductNameLabel1.setName("ProductNameLabel1"); // NOI18N
        AddProductPanel.add(ProductNameLabel1);
        ProductNameLabel1.setBounds(30, 50, 190, 14);

        NewProductResult1.setName("NewProductResult1"); // NOI18N
        AddProductPanel.add(NewProductResult1);
        NewProductResult1.setBounds(290, 180, 220, 40);

        NewProductPriceTextField.setText("0");
        NewProductPriceTextField.setToolTipText("");
        NewProductPriceTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NewProductPriceTextField.setName("NewProductPriceTextField"); // NOI18N
        AddProductPanel.add(NewProductPriceTextField);
        NewProductPriceTextField.setBounds(30, 130, 250, 30);

        ProductPriceLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ProductPriceLabel.setText("Cena");
        ProductPriceLabel.setName("ProductPriceLabel"); // NOI18N
        AddProductPanel.add(ProductPriceLabel);
        ProductPriceLabel.setBounds(30, 110, 190, 14);

        AdminAddProductHelpButton.setText("Pomoc");
        AdminAddProductHelpButton.setName("AdminAddProductHelpButton"); // NOI18N
        AdminAddProductHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAddProductHelpButtonActionPerformed(evt);
            }
        });
        AddProductPanel.add(AdminAddProductHelpButton);
        AdminAddProductHelpButton.setBounds(479, 320, 100, 23);

        AdminContainerPanel.add(AddProductPanel, "addProductAdminPanel");

        AddPriceList.setName("AddPriceList"); // NOI18N
        AddPriceList.setOpaque(false);
        AddPriceList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AddPriceListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        AddPriceList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                AddPriceListComponentShown(evt);
            }
        });
        AddPriceList.setLayout(null);

        NewPriceListButton.setBackground(new java.awt.Color(0, 0, 0));
        NewPriceListButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NewPriceListButton.setForeground(new java.awt.Color(255, 255, 255));
        NewPriceListButton.setText("Dodaj");
        NewPriceListButton.setName("NewPriceListButton"); // NOI18N
        NewPriceListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPriceListButtonActionPerformed(evt);
            }
        });
        AddPriceList.add(NewPriceListButton);
        NewPriceListButton.setBounds(160, 190, 120, 30);

        NewPriceListDateFrom.setText("01-01-2000");
        NewPriceListDateFrom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NewPriceListDateFrom.setName("NewPriceListDateFrom"); // NOI18N
        NewPriceListDateFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPriceListDateFromActionPerformed(evt);
            }
        });
        AddPriceList.add(NewPriceListDateFrom);
        NewPriceListDateFrom.setBounds(30, 70, 250, 30);

        NewPriceListDateTo.setText("01-01-2012");
        NewPriceListDateTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NewPriceListDateTo.setName("NewPriceListDateTo"); // NOI18N
        AddPriceList.add(NewPriceListDateTo);
        NewPriceListDateTo.setBounds(30, 130, 250, 30);

        PriceListFromLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PriceListFromLabel.setText("Do");
        PriceListFromLabel.setName("PriceListFromLabel"); // NOI18N
        AddPriceList.add(PriceListFromLabel);
        PriceListFromLabel.setBounds(30, 110, 190, 14);

        PriceListToLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PriceListToLabel.setText("Od");
        PriceListToLabel.setName("PriceListToLabel"); // NOI18N
        AddPriceList.add(PriceListToLabel);
        PriceListToLabel.setBounds(30, 50, 190, 14);

        NewPriceListResult.setName("NewPriceListResult"); // NOI18N
        AddPriceList.add(NewPriceListResult);
        NewPriceListResult.setBounds(290, 130, 240, 110);

        AdminAddPricelistHelpButton.setText("Pomoc");
        AdminAddPricelistHelpButton.setName("AdminAddPricelistHelpButton"); // NOI18N
        AdminAddPricelistHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAddPricelistHelpButtonActionPerformed(evt);
            }
        });
        AddPriceList.add(AdminAddPricelistHelpButton);
        AdminAddPricelistHelpButton.setBounds(490, 310, 100, 23);

        AdminContainerPanel.add(AddPriceList, "addPriceListAdminPanel");

        PriceListManagmentAdmintPanel.setName("PriceListManagmentAdmintPanel"); // NOI18N
        PriceListManagmentAdmintPanel.setOpaque(false);
        PriceListManagmentAdmintPanel.setLayout(null);

        SearchProductTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchProductTextField.setName("SearchProductTextField"); // NOI18N
        SearchProductTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchProductTextFieldActionPerformed(evt);
            }
        });
        PriceListManagmentAdmintPanel.add(SearchProductTextField);
        SearchProductTextField.setBounds(30, 20, 380, 30);

        FindProductButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        FindProductButton.setIconTextGap(0);
        FindProductButton.setName("FindProductButton"); // NOI18N
        PriceListManagmentAdmintPanel.add(FindProductButton);
        FindProductButton.setBounds(410, 20, 40, 30);

        EditProductButton.setBackground(new java.awt.Color(0, 0, 0));
        EditProductButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        EditProductButton.setForeground(new java.awt.Color(255, 255, 255));
        EditProductButton.setText("Edytuj");
        EditProductButton.setBorder(null);
        EditProductButton.setName("EditProductButton"); // NOI18N
        EditProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditProductButtonActionPerformed(evt);
            }
        });
        PriceListManagmentAdmintPanel.add(EditProductButton);
        EditProductButton.setBounds(470, 50, 120, 30);

        RemoveProductButton.setBackground(new java.awt.Color(0, 0, 0));
        RemoveProductButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RemoveProductButton.setForeground(new java.awt.Color(255, 255, 255));
        RemoveProductButton.setText("Usuń");
        RemoveProductButton.setName("RemoveProductButton"); // NOI18N
        PriceListManagmentAdmintPanel.add(RemoveProductButton);
        RemoveProductButton.setBounds(470, 90, 120, 30);

        NewProductButton.setBackground(new java.awt.Color(0, 0, 0));
        NewProductButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NewProductButton.setForeground(new java.awt.Color(255, 255, 255));
        NewProductButton.setText("Nowy Produkt");
        NewProductButton.setName("NewProductButton"); // NOI18N
        NewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewProductButtonActionPerformed(evt);
            }
        });
        PriceListManagmentAdmintPanel.add(NewProductButton);
        NewProductButton.setBounds(470, 280, 120, 30);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane5.setName("jScrollPane5"); // NOI18N

        PriceListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Produktu", "Nazwa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PriceListTable.setName("PriceListTable"); // NOI18N
        jScrollPane5.setViewportView(PriceListTable);

        PriceListManagmentAdmintPanel.add(jScrollPane5);
        jScrollPane5.setBounds(30, 50, 420, 260);

        AdminContainerPanel.add(PriceListManagmentAdmintPanel, "priceListManagmentAdminPanel");

        SlopeManagementAdminPanel.setName("SlopeManagementAdminPanel"); // NOI18N
        SlopeManagementAdminPanel.setOpaque(false);
        SlopeManagementAdminPanel.setLayout(null);

        SlopeTrafficScrollPane.setName("SlopeTrafficScrollPane"); // NOI18N

        SlopeTraffic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID stoku", "Ruch z ost. godziny", "Przeciążenie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment (JLabel.CENTER);
        SlopeTraffic.setDefaultRenderer (String.class, centerRenderer);
        SlopeTraffic.setDefaultRenderer (Long.class, centerRenderer);
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer)SlopeTraffic.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment (JLabel.CENTER);
        SlopeTraffic.setName("SlopeTraffic"); // NOI18N
        SlopeTrafficScrollPane.setViewportView(SlopeTraffic);

        SlopeManagementAdminPanel.add(SlopeTrafficScrollPane);
        SlopeTrafficScrollPane.setBounds(0, 0, 600, 230);

        AdminSlopeManagementHelpButton.setText("Pomoc");
        AdminSlopeManagementHelpButton.setName("AdminSlopeManagementHelpButton"); // NOI18N
        AdminSlopeManagementHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminSlopeManagementHelpButtonActionPerformed(evt);
            }
        });
        SlopeManagementAdminPanel.add(AdminSlopeManagementHelpButton);
        AdminSlopeManagementHelpButton.setBounds(473, 320, 110, 23);

        AdminContainerPanel.add(SlopeManagementAdminPanel, "slopeManagmentAdminPanel");

        UserManagmentAdmintPanel.setName("UserManagmentAdmintPanel"); // NOI18N
        UserManagmentAdmintPanel.setOpaque(false);
        UserManagmentAdmintPanel.setLayout(null);

        jScrollPane7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane7.setName("jScrollPane7"); // NOI18N

        UserListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Imię", "Nazwisko", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        UserListTable.setName("UserListTable"); // NOI18N
        UserListTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                UserListTableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane7.setViewportView(UserListTable);

        UserManagmentAdmintPanel.add(jScrollPane7);
        jScrollPane7.setBounds(30, 50, 420, 260);

        FindUserButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        FindUserButton.setIconTextGap(0);
        FindUserButton.setName("FindUserButton"); // NOI18N
        FindUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindUserButtonActionPerformed(evt);
            }
        });
        UserManagmentAdmintPanel.add(FindUserButton);
        FindUserButton.setBounds(410, 20, 39, 30);

        SearchUserTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchUserTextField.setName("SearchUserTextField"); // NOI18N
        SearchUserTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchUserTextFieldActionPerformed(evt);
            }
        });
        SearchUserTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SearchUserTextFieldKeyTyped(evt);
            }
        });
        UserManagmentAdmintPanel.add(SearchUserTextField);
        SearchUserTextField.setBounds(30, 20, 380, 30);

        EditUserButton.setBackground(new java.awt.Color(0, 0, 0));
        EditUserButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        EditUserButton.setForeground(new java.awt.Color(255, 255, 255));
        EditUserButton.setText("Edytuj");
        EditUserButton.setBorder(null);
        EditUserButton.setName("EditUserButton"); // NOI18N
        EditUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUserButtonActionPerformed(evt);
            }
        });
        UserManagmentAdmintPanel.add(EditUserButton);
        EditUserButton.setBounds(470, 50, 120, 30);

        jButton8.setText("Pomoc");
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        UserManagmentAdmintPanel.add(jButton8);
        jButton8.setBounds(483, 320, 100, 23);

        AdminContainerPanel.add(UserManagmentAdmintPanel, "userManagmentAdminPanel");

        ProductsManagmentAdminPanel.setName("ProductsManagmentAdminPanel"); // NOI18N
        ProductsManagmentAdminPanel.setOpaque(false);
        ProductsManagmentAdminPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ProductsManagmentAdminPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        ProductsManagmentAdminPanel.setLayout(null);

        ProductsTables.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProductsTables.setName("ProductsTables"); // NOI18N
        ProductsTables.setOpaque(true);

        jSplitPane1.setDividerLocation(30);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        ProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nr w katalogu", "Nazwa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ProductList.setName("ProductList"); // NOI18N
        jScrollPane3.setViewportView(ProductList);

        jSplitPane1.setBottomComponent(jScrollPane3);

        jSplitPane2.setDividerLocation(360);
        jSplitPane2.setName("jSplitPane2"); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jSplitPane2.setRightComponent(jButton1);

        ProductFindText.setName("ProductFindText"); // NOI18N
        ProductFindText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ProductFindTextInputMethodTextChanged(evt);
            }
        });
        ProductFindText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductFindTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ProductFindTextKeyTyped(evt);
            }
        });
        jSplitPane2.setLeftComponent(ProductFindText);

        jSplitPane1.setLeftComponent(jSplitPane2);

        ProductsTables.addTab("Lista Produktów ", jSplitPane1);

        jSplitPane5.setDividerLocation(30);
        jSplitPane5.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane5.setName("jSplitPane5"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        PriceLists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Produktu", "Data od", "Data do"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PriceLists.setName("PriceLists"); // NOI18N
        jScrollPane8.setViewportView(PriceLists);

        jSplitPane5.setBottomComponent(jScrollPane8);

        jSplitPane6.setDividerLocation(360);
        jSplitPane6.setName("jSplitPane6"); // NOI18N

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jSplitPane6.setRightComponent(jButton6);

        PriceListFindText.setName("PriceListFindText"); // NOI18N
        PriceListFindText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PriceListFindTextKeyReleased(evt);
            }
        });
        jSplitPane6.setLeftComponent(PriceListFindText);

        jSplitPane5.setLeftComponent(jSplitPane6);

        ProductsTables.addTab("Cennik", jSplitPane5);

        jSplitPane7.setDividerLocation(30);
        jSplitPane7.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane7.setName("jSplitPane7"); // NOI18N

        jScrollPane9.setName("jScrollPane9"); // NOI18N

        CurrentPricesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Produktu", "Nazwa", "Cena"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        CurrentPricesTable.setName("CurrentPricesTable"); // NOI18N
        CurrentPricesTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                CurrentPricesTableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane9.setViewportView(CurrentPricesTable);

        jSplitPane7.setBottomComponent(jScrollPane9);

        jSplitPane8.setDividerLocation(360);
        jSplitPane8.setName("jSplitPane8"); // NOI18N

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jSplitPane8.setRightComponent(jButton7);

        CurrentPriceFindText.setName("CurrentPriceFindText"); // NOI18N
        CurrentPriceFindText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CurrentPriceFindTextKeyReleased(evt);
            }
        });
        jSplitPane8.setLeftComponent(CurrentPriceFindText);

        jSplitPane7.setLeftComponent(jSplitPane8);

        ProductsTables.addTab("Aktualne ceny", jSplitPane7);

        ProductsManagmentAdminPanel.add(ProductsTables);
        ProductsTables.setBounds(10, 20, 410, 320);
        ProductsTables.getAccessibleContext().setAccessibleName("Products");

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("NowyCennik");
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        ProductsManagmentAdminPanel.add(jButton9);
        jButton9.setBounds(430, 230, 160, 30);

        jButton10.setBackground(new java.awt.Color(0, 0, 0));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Nowa Cena Produktu");
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        ProductsManagmentAdminPanel.add(jButton10);
        jButton10.setBounds(430, 270, 160, 30);

        jButton11.setBackground(new java.awt.Color(0, 0, 0));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Nowy Produkt");
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        ProductsManagmentAdminPanel.add(jButton11);
        jButton11.setBounds(430, 190, 160, 30);

        AdminProductPanelHelpButton.setText("Pomoc");
        AdminProductPanelHelpButton.setName("AdminProductPanelHelpButton"); // NOI18N
        AdminProductPanelHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminProductPanelHelpButtonActionPerformed(evt);
            }
        });
        ProductsManagmentAdminPanel.add(AdminProductPanelHelpButton);
        AdminProductPanelHelpButton.setBounds(490, 320, 100, 23);

        AdminContainerPanel.add(ProductsManagmentAdminPanel, "productsManagementPanel");

        AttractionsEditAddPanel.setName("AttractionsEditAddPanel"); // NOI18N
        AttractionsEditAddPanel.setLayout(null);

        AttractionNameTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AttractionNameTextField.setName("AttractionNameTextField"); // NOI18N
        AttractionsEditAddPanel.add(AttractionNameTextField);
        AttractionNameTextField.setBounds(30, 60, 240, 30);

        TerminalNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TerminalNameLabel.setText("Nazwa");
        TerminalNameLabel.setName("TerminalNameLabel"); // NOI18N
        AttractionsEditAddPanel.add(TerminalNameLabel);
        TerminalNameLabel.setBounds(30, 40, 70, 14);

        AttractionTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stok", "Sklep" }));
        AttractionTypeComboBox.setBorder(null);
        AttractionTypeComboBox.setName("AttractionTypeComboBox"); // NOI18N
        AttractionTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttractionTypeComboBoxActionPerformed(evt);
            }
        });
        AttractionsEditAddPanel.add(AttractionTypeComboBox);
        AttractionTypeComboBox.setBounds(30, 120, 160, 30);

        CancelAddAttractionButton.setBackground(new java.awt.Color(0, 0, 0));
        CancelAddAttractionButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CancelAddAttractionButton.setForeground(new java.awt.Color(255, 255, 255));
        CancelAddAttractionButton.setText("Anuluj");
        CancelAddAttractionButton.setName("CancelAddAttractionButton"); // NOI18N
        CancelAddAttractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAddAttractionButtonActionPerformed(evt);
            }
        });
        AttractionsEditAddPanel.add(CancelAddAttractionButton);
        CancelAddAttractionButton.setBounds(30, 230, 110, 30);

        AddAttractionButton.setBackground(new java.awt.Color(0, 0, 0));
        AddAttractionButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddAttractionButton.setForeground(new java.awt.Color(255, 255, 255));
        AddAttractionButton.setText("Dodaj");
        AddAttractionButton.setName("AddAttractionButton"); // NOI18N
        AddAttractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAttractionButtonActionPerformed(evt);
            }
        });
        AttractionsEditAddPanel.add(AddAttractionButton);
        AddAttractionButton.setBounds(150, 230, 110, 30);

        AttractionTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AttractionTypeLabel.setText("Typ Atrakcji");
        AttractionTypeLabel.setName("AttractionTypeLabel"); // NOI18N
        AttractionsEditAddPanel.add(AttractionTypeLabel);
        AttractionTypeLabel.setBounds(30, 100, 90, 14);

        AddAttractionMessage.setName("AddAttractionMessage"); // NOI18N
        AttractionsEditAddPanel.add(AddAttractionMessage);
        AddAttractionMessage.setBounds(150, 270, 180, 30);

        AdminAttractionsEditHelpButton.setText("Pomoc");
        AdminAttractionsEditHelpButton.setName("AdminAttractionsEditHelpButton"); // NOI18N
        AdminAttractionsEditHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAttractionsEditHelpButtonActionPerformed(evt);
            }
        });
        AttractionsEditAddPanel.add(AdminAttractionsEditHelpButton);
        AdminAttractionsEditHelpButton.setBounds(463, 320, 120, 23);

        AdminContainerPanel.add(AttractionsEditAddPanel, "AttractionsEditAddPanel");

        TerminalsEditAddPanel.setName("TerminalsEditAddPanel"); // NOI18N
        TerminalsEditAddPanel.setOpaque(false);
        TerminalsEditAddPanel.setLayout(null);

        LockTimeLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LockTimeLabel1.setText("Czas Blokady");
        LockTimeLabel1.setName("LockTimeLabel1"); // NOI18N
        TerminalsEditAddPanel.add(LockTimeLabel1);
        LockTimeLabel1.setBounds(30, 110, 80, 14);

        CancelAddTerminalButton1.setBackground(new java.awt.Color(0, 0, 0));
        CancelAddTerminalButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CancelAddTerminalButton1.setForeground(new java.awt.Color(255, 255, 255));
        CancelAddTerminalButton1.setText("Anuluj");
        CancelAddTerminalButton1.setName("CancelAddTerminalButton1"); // NOI18N
        CancelAddTerminalButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAddTerminalButton1ActionPerformed(evt);
            }
        });
        TerminalsEditAddPanel.add(CancelAddTerminalButton1);
        CancelAddTerminalButton1.setBounds(30, 200, 110, 30);

        AddTerminalButton1.setBackground(new java.awt.Color(0, 0, 0));
        AddTerminalButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddTerminalButton1.setForeground(new java.awt.Color(255, 255, 255));
        AddTerminalButton1.setText("Dodaj");
        AddTerminalButton1.setName("AddTerminalButton1"); // NOI18N
        AddTerminalButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTerminalButton1ActionPerformed(evt);
            }
        });
        TerminalsEditAddPanel.add(AddTerminalButton1);
        AddTerminalButton1.setBounds(150, 200, 110, 30);

        LockTimeComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1s", "2s", "3s", "4s" }));
        LockTimeComboBox2.setBorder(null);
        LockTimeComboBox2.setName("LockTimeComboBox2"); // NOI18N
        TerminalsEditAddPanel.add(LockTimeComboBox2);
        LockTimeComboBox2.setBounds(30, 130, 60, 30);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel30.setText("Wybrana atrakcja:");
        jLabel30.setName("jLabel30"); // NOI18N
        TerminalsEditAddPanel.add(jLabel30);
        jLabel30.setBounds(30, 40, 130, 30);

        ChosenAttractionLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        ChosenAttractionLabel.setName("ChosenAttractionLabel"); // NOI18N
        TerminalsEditAddPanel.add(ChosenAttractionLabel);
        ChosenAttractionLabel.setBounds(170, 40, 130, 30);

        AddTerminalMessageLabel.setName("AddTerminalMessageLabel"); // NOI18N
        TerminalsEditAddPanel.add(AddTerminalMessageLabel);
        AddTerminalMessageLabel.setBounds(150, 244, 220, 20);

        AdminTerminalsEditHelpButton.setText("Pomoc");
        AdminTerminalsEditHelpButton.setName("AdminTerminalsEditHelpButton"); // NOI18N
        AdminTerminalsEditHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminTerminalsEditHelpButtonActionPerformed(evt);
            }
        });
        TerminalsEditAddPanel.add(AdminTerminalsEditHelpButton);
        AdminTerminalsEditHelpButton.setBounds(463, 320, 120, 23);

        AdminContainerPanel.add(TerminalsEditAddPanel, "TerminalsEditAddPanel");
        TerminalsEditAddPanel.getAccessibleContext().setAccessibleName("");

        AttractionsAndGatesPanel.setName("AttractionsAndGatesPanel"); // NOI18N

        AttractionManagementAdminPanel.setForeground(new java.awt.Color(255, 255, 255));
        AttractionManagementAdminPanel.setName("AttractionManagementAdminPanel"); // NOI18N
        AttractionManagementAdminPanel.setOpaque(false);
        AttractionManagementAdminPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AttractionManagementAdminPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        AttractionManagementAdminPanel.setLayout(new java.awt.CardLayout());

        AttractionListPanel.setName("AttractionListPanel"); // NOI18N
        AttractionListPanel.setLayout(null);

        FindAttractionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        FindAttractionButton.setIconTextGap(0);
        FindAttractionButton.setName("FindAttractionButton"); // NOI18N
        AttractionListPanel.add(FindAttractionButton);
        FindAttractionButton.setBounds(410, 20, 39, 30);

        SearchAttractionTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchAttractionTextField.setName("SearchAttractionTextField"); // NOI18N
        SearchAttractionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchAttractionTextFieldActionPerformed(evt);
            }
        });
        SearchAttractionTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchAttractionTextFieldTyped(evt);
            }
        });
        AttractionListPanel.add(SearchAttractionTextField);
        SearchAttractionTextField.setBounds(30, 20, 380, 30);

        NewAttractionButton.setBackground(new java.awt.Color(0, 0, 0));
        NewAttractionButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NewAttractionButton.setForeground(new java.awt.Color(255, 255, 255));
        NewAttractionButton.setText("Nowa Atrakcja");
        NewAttractionButton.setName("NewAttractionButton"); // NOI18N
        NewAttractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewAttractionButtonActionPerformed(evt);
            }
        });
        AttractionListPanel.add(NewAttractionButton);
        NewAttractionButton.setBounds(470, 280, 120, 30);

        AttractionTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AttractionTable.setName("AttractionTable"); // NOI18N
        AttractionTable.setOpaque(false);

        AttractionListTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Attraction ID", "Nazwa", "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AttractionListTable2.setName("AttractionListTable2"); // NOI18N
        AttractionTable.setViewportView(AttractionListTable2);

        AttractionListPanel.add(AttractionTable);
        AttractionTable.setBounds(30, 50, 420, 260);

        AttractionsAndGatesHelp.setText("Pomoc");
        AttractionsAndGatesHelp.setName("AttractionsAndGatesHelp"); // NOI18N
        AttractionsAndGatesHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttractionsAndGatesHelpActionPerformed(evt);
            }
        });
        AttractionListPanel.add(AttractionsAndGatesHelp);
        AttractionsAndGatesHelp.setBounds(470, 10, 110, 23);

        AttractionManagementAdminPanel.add(AttractionListPanel, "AttractionListPanel");

        AttractionsAndGatesPanel.addTab("Atrakcje", AttractionManagementAdminPanel);

        GatesManagementAdminPanel.setForeground(new java.awt.Color(255, 255, 255));
        GatesManagementAdminPanel.setName("GatesManagementAdminPanel"); // NOI18N
        GatesManagementAdminPanel.setOpaque(false);
        GatesManagementAdminPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                GatesManagementAdminPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        GatesManagementAdminPanel.setLayout(new java.awt.CardLayout());

        TerminalListPanel.setName("TerminalListPanel"); // NOI18N
        TerminalListPanel.setLayout(null);

        FindTerminalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.PNG"))); // NOI18N
        FindTerminalButton.setIconTextGap(0);
        FindTerminalButton.setName("FindTerminalButton"); // NOI18N
        TerminalListPanel.add(FindTerminalButton);
        FindTerminalButton.setBounds(410, 20, 39, 30);

        SearchTerminalTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchTerminalTextField.setName("SearchTerminalTextField"); // NOI18N
        SearchTerminalTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchTerminalTextFieldKeyReleased(evt);
            }
        });
        TerminalListPanel.add(SearchTerminalTextField);
        SearchTerminalTextField.setBounds(30, 20, 380, 30);

        NewTerminalButton.setBackground(new java.awt.Color(0, 0, 0));
        NewTerminalButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NewTerminalButton.setForeground(new java.awt.Color(255, 255, 255));
        NewTerminalButton.setText("Nowy Terminal");
        NewTerminalButton.setName("NewTerminalButton"); // NOI18N
        NewTerminalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewTerminalButtonActionPerformed(evt);
            }
        });
        TerminalListPanel.add(NewTerminalButton);
        NewTerminalButton.setBounds(470, 280, 120, 30);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane6.setName("jScrollPane6"); // NOI18N
        jScrollPane6.setOpaque(false);

        TerminalListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Terminal ID", "Atrakcja", "Czas Blokady"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TerminalListTable.setName("TerminalListTable"); // NOI18N
        jScrollPane6.setViewportView(TerminalListTable);
        if (TerminalListTable.getColumnModel().getColumnCount() > 0) {
            TerminalListTable.getColumnModel().getColumn(2).setHeaderValue("Czas Blokady");
        }

        TerminalListPanel.add(jScrollPane6);
        jScrollPane6.setBounds(30, 50, 420, 260);

        jButton3.setText("Zarzadzaj");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        TerminalListPanel.add(jButton3);
        jButton3.setBounds(470, 250, 120, 23);

        AttractionsAndGatesHelp2.setText("Pomoc");
        AttractionsAndGatesHelp2.setName("AttractionsAndGatesHelp2"); // NOI18N
        AttractionsAndGatesHelp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttractionsAndGatesHelp2ActionPerformed(evt);
            }
        });
        TerminalListPanel.add(AttractionsAndGatesHelp2);
        AttractionsAndGatesHelp2.setBounds(470, 10, 110, 23);

        GatesManagementAdminPanel.add(TerminalListPanel, "card8");

        AttractionsAndGatesPanel.addTab("Bramki", GatesManagementAdminPanel);

        AdminContainerPanel.add(AttractionsAndGatesPanel, "AttractionsAndGatesPanel");

        EditUserAdmintPanel.setName("EditUserAdmintPanel"); // NOI18N
        EditUserAdmintPanel.setOpaque(false);
        EditUserAdmintPanel.setLayout(null);

        UpdateUser.setBackground(new java.awt.Color(0, 0, 0));
        UpdateUser.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UpdateUser.setForeground(new java.awt.Color(255, 255, 255));
        UpdateUser.setText("Aktualizuj");
        UpdateUser.setName("UpdateUser"); // NOI18N
        UpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateUserActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(UpdateUser);
        UpdateUser.setBounds(400, 300, 110, 30);

        LoginTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        LoginTextField2.setMaximumSize(new java.awt.Dimension(6, 22));
        LoginTextField2.setMinimumSize(new java.awt.Dimension(6, 22));
        LoginTextField2.setName("LoginTextField2"); // NOI18N
        LoginTextField2.setPreferredSize(new java.awt.Dimension(59, 22));
        LoginTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginTextField2ActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(LoginTextField2);
        LoginTextField2.setBounds(170, 10, 220, 30);

        UserRoleChooseGroup.add(UserRadio);
        UserRadio.setText("User");
        UserRadio.setName("UserRadio"); // NOI18N
        UserRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserRadioActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(UserRadio);
        UserRadio.setBounds(320, 230, 80, 30);

        UserRoleChooseGroup.add(CashierRadio);
        CashierRadio.setText("Cashier");
        CashierRadio.setName("CashierRadio"); // NOI18N
        CashierRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashierRadioActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(CashierRadio);
        CashierRadio.setBounds(240, 230, 80, 30);

        UserRoleChooseGroup.add(AdminRadio);
        AdminRadio.setText("Admin");
        AdminRadio.setName("AdminRadio"); // NOI18N
        EditUserAdmintPanel.add(AdminRadio);
        AdminRadio.setBounds(170, 230, 80, 30);

        UpdateResultLabel.setName("UpdateResultLabel"); // NOI18N
        EditUserAdmintPanel.add(UpdateResultLabel);
        UpdateResultLabel.setBounds(400, 320, 140, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Imię");
        jLabel15.setName("jLabel15"); // NOI18N
        EditUserAdmintPanel.add(jLabel15);
        jLabel15.setBounds(110, 40, 40, 20);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Nazwisko");
        jLabel16.setName("jLabel16"); // NOI18N
        EditUserAdmintPanel.add(jLabel16);
        jLabel16.setBounds(110, 70, 60, 20);

        NameTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NameTextField2.setName("NameTextField2"); // NOI18N
        EditUserAdmintPanel.add(NameTextField2);
        NameTextField2.setBounds(170, 40, 220, 30);

        jLabel19.setName("jLabel19"); // NOI18N
        EditUserAdmintPanel.add(jLabel19);
        jLabel19.setBounds(40, 110, 0, 0);

        SurnameTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SurnameTextField2.setName("SurnameTextField2"); // NOI18N
        EditUserAdmintPanel.add(SurnameTextField2);
        SurnameTextField2.setBounds(170, 70, 220, 30);

        DocumentTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DocumentTextField2.setName("DocumentTextField2"); // NOI18N
        EditUserAdmintPanel.add(DocumentTextField2);
        DocumentTextField2.setBounds(170, 100, 220, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Login");
        jLabel20.setName("jLabel20"); // NOI18N
        EditUserAdmintPanel.add(jLabel20);
        jLabel20.setBounds(110, 10, 40, 20);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Dokument");
        jLabel21.setName("jLabel21"); // NOI18N
        EditUserAdmintPanel.add(jLabel21);
        jLabel21.setBounds(110, 100, 60, 20);

        StreetTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        StreetTextField2.setName("StreetTextField2"); // NOI18N
        EditUserAdmintPanel.add(StreetTextField2);
        StreetTextField2.setBounds(170, 130, 220, 30);

        CityTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CityTextField2.setName("CityTextField2"); // NOI18N
        EditUserAdmintPanel.add(CityTextField2);
        CityTextField2.setBounds(170, 160, 220, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Ulica");
        jLabel22.setName("jLabel22"); // NOI18N
        EditUserAdmintPanel.add(jLabel22);
        jLabel22.setBounds(110, 130, 40, 20);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Miasto");
        jLabel23.setName("jLabel23"); // NOI18N
        EditUserAdmintPanel.add(jLabel23);
        jLabel23.setBounds(110, 160, 50, 20);

        CountryTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CountryTextField2.setName("CountryTextField2"); // NOI18N
        EditUserAdmintPanel.add(CountryTextField2);
        CountryTextField2.setBounds(170, 190, 220, 30);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Aktywny?");
        jLabel24.setName("jLabel24"); // NOI18N
        EditUserAdmintPanel.add(jLabel24);
        jLabel24.setBounds(110, 270, 70, 20);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setText("Rola");
        jLabel42.setName("jLabel42"); // NOI18N
        EditUserAdmintPanel.add(jLabel42);
        jLabel42.setBounds(110, 230, 40, 20);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Kraj");
        jLabel43.setName("jLabel43"); // NOI18N
        EditUserAdmintPanel.add(jLabel43);
        jLabel43.setBounds(110, 190, 40, 20);

        userActiveCheckboxInAdminPanel.setName("userActiveCheckboxInAdminPanel"); // NOI18N
        userActiveCheckboxInAdminPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActiveCheckboxInAdminPanelActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(userActiveCheckboxInAdminPanel);
        userActiveCheckboxInAdminPanel.setBounds(180, 270, 30, 23);

        AdminUserEditHelpButton.setText("Pomoc");
        AdminUserEditHelpButton.setName("AdminUserEditHelpButton"); // NOI18N
        AdminUserEditHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminUserEditHelpButtonActionPerformed(evt);
            }
        });
        EditUserAdmintPanel.add(AdminUserEditHelpButton);
        AdminUserEditHelpButton.setBounds(459, 10, 110, 23);

        AdminContainerPanel.add(EditUserAdmintPanel, "editUserAdminPanel");

        AdminMainPanel.add(AdminContainerPanel);
        AdminContainerPanel.setBounds(50, 240, 600, 350);

        AdminLogoutButton.setText("Wyloguj");
        AdminLogoutButton.setName("AdminLogoutButton"); // NOI18N
        AdminLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminLogoutButtonActionPerformed(evt);
            }
        });
        AdminMainPanel.add(AdminLogoutButton);
        AdminLogoutButton.setBounds(600, 40, 80, 23);

        AdminViewTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AdminViewTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AdminViewTitleLabel.setName("AdminViewTitleLabel"); // NOI18N
        AdminMainPanel.add(AdminViewTitleLabel);
        AdminViewTitleLabel.setBounds(90, 174, 500, 50);

        AdminPanelBackButton.setText("Wstecz");
        AdminPanelBackButton.setName("AdminPanelBackButton"); // NOI18N
        AdminPanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminPanelBackButtonActionPerformed(evt);
            }
        });
        AdminMainPanel.add(AdminPanelBackButton);
        AdminPanelBackButton.setBounds(60, 590, 80, 30);

        AdminMyAccountButton.setText("Moje konto");
        AdminMyAccountButton.setName("AdminMyAccountButton"); // NOI18N
        AdminMyAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminMyAccountButtonActionPerformed(evt);
            }
        });
        AdminMainPanel.add(AdminMyAccountButton);
        AdminMyAccountButton.setBounds(510, 40, 90, 23);

        AdminBackgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/skibackgroundAdmin3.jpg"))); // NOI18N
        AdminBackgroundLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        AdminBackgroundLabel.setDoubleBuffered(true);
        AdminBackgroundLabel.setName("AdminBackgroundLabel"); // NOI18N
        AdminMainPanel.add(AdminBackgroundLabel);
        AdminBackgroundLabel.setBounds(0, 0, 1220, 890);

        getContentPane().add(AdminMainPanel, "adminPanelMain");

        UserMainPanel.setName("UserMainPanel"); // NOI18N
        UserMainPanel.setPreferredSize(new java.awt.Dimension(700, 700));
        UserMainPanel.setLayout(null);

        UserChangeModeToAdminButton.setText("Tryb administratora");
        UserChangeModeToAdminButton.setMaximumSize(new java.awt.Dimension(67, 23));
        UserChangeModeToAdminButton.setMinimumSize(new java.awt.Dimension(67, 23));
        UserChangeModeToAdminButton.setName("UserChangeModeToAdminButton"); // NOI18N
        UserChangeModeToAdminButton.setPreferredSize(new java.awt.Dimension(67, 23));
        UserChangeModeToAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserChangeModeToAdminButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(UserChangeModeToAdminButton);
        UserChangeModeToAdminButton.setBounds(330, 10, 150, 23);

        UserMyAccountButton.setText("Moje konto");
        UserMyAccountButton.setMaximumSize(new java.awt.Dimension(67, 23));
        UserMyAccountButton.setMinimumSize(new java.awt.Dimension(67, 23));
        UserMyAccountButton.setName("UserMyAccountButton"); // NOI18N
        UserMyAccountButton.setPreferredSize(new java.awt.Dimension(67, 23));
        UserMyAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserMyAccountButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(UserMyAccountButton);
        UserMyAccountButton.setBounds(480, 10, 100, 23);

        UserLogoutButton.setText("Wyloguj");
        UserLogoutButton.setMaximumSize(new java.awt.Dimension(67, 23));
        UserLogoutButton.setMinimumSize(new java.awt.Dimension(67, 23));
        UserLogoutButton.setName("UserLogoutButton"); // NOI18N
        UserLogoutButton.setPreferredSize(new java.awt.Dimension(67, 23));
        UserLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserLogoutButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(UserLogoutButton);
        UserLogoutButton.setBounds(580, 10, 80, 23);

        ContactButton.setText("Kontakt");
        ContactButton.setMaximumSize(new java.awt.Dimension(67, 23));
        ContactButton.setMinimumSize(new java.awt.Dimension(67, 23));
        ContactButton.setName("ContactButton"); // NOI18N
        ContactButton.setPreferredSize(new java.awt.Dimension(67, 23));
        ContactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(ContactButton);
        ContactButton.setBounds(20, 190, 140, 30);

        MyCardsButton.setText("Moje karty");
        MyCardsButton.setMaximumSize(new java.awt.Dimension(67, 23));
        MyCardsButton.setMinimumSize(new java.awt.Dimension(67, 23));
        MyCardsButton.setName("MyCardsButton"); // NOI18N
        MyCardsButton.setPreferredSize(new java.awt.Dimension(67, 23));
        MyCardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyCardsButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(MyCardsButton);
        MyCardsButton.setBounds(20, 130, 140, 30);

        SlopeTrafficButton.setText("Natężenie stoku");
        SlopeTrafficButton.setMaximumSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton.setMinimumSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton.setName("SlopeTrafficButton"); // NOI18N
        SlopeTrafficButton.setPreferredSize(new java.awt.Dimension(67, 23));
        SlopeTrafficButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlopeTrafficButtonActionPerformed(evt);
            }
        });
        UserMainPanel.add(SlopeTrafficButton);
        SlopeTrafficButton.setBounds(20, 160, 140, 30);

        UserContainerPanel.setName("UserContainerPanel"); // NOI18N
        UserContainerPanel.setOpaque(false);
        UserContainerPanel.setLayout(new java.awt.CardLayout());

        UserMyCardsPanel.setName("UserMyCardsPanel"); // NOI18N
        UserMyCardsPanel.setOpaque(false);
        UserMyCardsPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                UserMyCardsPanelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        UserMyCardsPanel.setLayout(null);

        PrintCardDataPanel.setBackground(new java.awt.Color(204, 204, 204));
        PrintCardDataPanel.setName("PrintCardDataPanel"); // NOI18N
        PrintCardDataPanel.setLayout(null);

        PrintCardDataOkButton.setText("OK");
        PrintCardDataOkButton.setName("PrintCardDataOkButton"); // NOI18N
        PrintCardDataOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintCardDataOkButtonActionPerformed(evt);
            }
        });
        PrintCardDataPanel.add(PrintCardDataOkButton);
        PrintCardDataOkButton.setBounds(210, 460, 47, 23);

        PrintCardDataTextPanel.setName("PrintCardDataTextPanel"); // NOI18N

        PrintCardDataText.setColumns(20);
        PrintCardDataText.setRows(5);
        PrintCardDataText.setName("PrintCardDataText"); // NOI18N
        PrintCardDataTextPanel.setViewportView(PrintCardDataText);

        PrintCardDataPanel.add(PrintCardDataTextPanel);
        PrintCardDataTextPanel.setBounds(20, 20, 430, 420);

        UserMyCardsPanel.add(PrintCardDataPanel);
        PrintCardDataPanel.setBounds(20, 20, 470, 490);

        UserPanelMyCardsHelpButton.setText("Pomoc");
        UserPanelMyCardsHelpButton.setName("UserPanelMyCardsHelpButton"); // NOI18N
        UserPanelMyCardsHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserPanelMyCardsHelpButtonActionPerformed(evt);
            }
        });
        UserMyCardsPanel.add(UserPanelMyCardsHelpButton);
        UserPanelMyCardsHelpButton.setBounds(400, 500, 110, 30);

        UserContainerPanel.add(UserMyCardsPanel, "userMyCards");

        UserBuyPointsPanel.setName("UserBuyPointsPanel"); // NOI18N
        UserBuyPointsPanel.setOpaque(false);
        UserBuyPointsPanel.setLayout(null);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel28.setText("Wybierz pakiet(y):");
        jLabel28.setName("jLabel28"); // NOI18N
        UserBuyPointsPanel.add(jLabel28);
        jLabel28.setBounds(30, 40, 150, 22);

        BuyAndPayButton.setText("Kupuję i płacę");
        BuyAndPayButton.setName("BuyAndPayButton"); // NOI18N
        BuyAndPayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyAndPayButtonActionPerformed(evt);
            }
        });
        UserBuyPointsPanel.add(BuyAndPayButton);
        BuyAndPayButton.setBounds(290, 250, 160, 40);

        pointsPackagesListScrollPane.setBorder(null);
        pointsPackagesListScrollPane.setName("pointsPackagesListScrollPane"); // NOI18N
        pointsPackagesListScrollPane.setOpaque(false);

        pointsPackagesListPane.setName("pointsPackagesListPane"); // NOI18N
        pointsPackagesListPane.setOpaque(false);
        pointsPackagesListPane.setLayout(new java.awt.GridLayout(0, 1));
        pointsPackagesListScrollPane.setViewportView(pointsPackagesListPane);

        UserBuyPointsPanel.add(pointsPackagesListScrollPane);
        pointsPackagesListScrollPane.setBounds(30, 70, 220, 320);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("zł");
        jLabel29.setName("jLabel29"); // NOI18N
        UserBuyPointsPanel.add(jLabel29);
        jLabel29.setBounds(410, 160, 40, 17);

        costSum.setEditable(false);
        costSum.setText("0");
        costSum.setName("costSum"); // NOI18N
        costSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costSumActionPerformed(evt);
            }
        });
        UserBuyPointsPanel.add(costSum);
        costSum.setBounds(330, 160, 70, 30);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("pkt.");
        jLabel34.setName("jLabel34"); // NOI18N
        UserBuyPointsPanel.add(jLabel34);
        jLabel34.setBounds(410, 120, 30, 17);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Podsumowanie:");
        jLabel35.setName("jLabel35"); // NOI18N
        UserBuyPointsPanel.add(jLabel35);
        jLabel35.setBounds(330, 90, 110, 17);

        pointsSum.setEditable(false);
        pointsSum.setText("0");
        pointsSum.setName("pointsSum"); // NOI18N
        pointsSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointsSumActionPerformed(evt);
            }
        });
        UserBuyPointsPanel.add(pointsSum);
        pointsSum.setBounds(330, 120, 70, 30);

        buyPackagePointsMessage.setName("buyPackagePointsMessage"); // NOI18N
        UserBuyPointsPanel.add(buyPackagePointsMessage);
        buyPackagePointsMessage.setBounds(290, 300, 230, 40);

        buyPointsPackageBackButton.setText("Wróć");
        buyPointsPackageBackButton.setName("buyPointsPackageBackButton"); // NOI18N
        buyPointsPackageBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyPointsPackageBackButtonActionPerformed(evt);
            }
        });
        UserBuyPointsPanel.add(buyPointsPackageBackButton);
        buyPointsPackageBackButton.setBounds(30, 400, 100, 40);

        UserBuyPointsHelpButton.setText("Pomoc");
        UserBuyPointsHelpButton.setName("UserBuyPointsHelpButton"); // NOI18N
        UserBuyPointsHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserBuyPointsHelpButtonActionPerformed(evt);
            }
        });
        UserBuyPointsPanel.add(UserBuyPointsHelpButton);
        UserBuyPointsHelpButton.setBounds(363, 400, 120, 23);

        UserContainerPanel.add(UserBuyPointsPanel, "userBuyPoints");

        UserContactPanel.setName("UserContactPanel"); // NOI18N
        UserContactPanel.setOpaque(false);
        UserContactPanel.setLayout(null);

        jLabel31.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel31.setText("Kontakt");
        jLabel31.setName("jLabel31"); // NOI18N
        UserContactPanel.add(jLabel31);
        jLabel31.setBounds(190, 0, 240, 60);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("Akademicka 18, Gliwice 44-100");
        jLabel32.setName("jLabel32"); // NOI18N
        UserContactPanel.add(jLabel32);
        jLabel32.setBounds(30, 80, 300, 50);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setText("Telefon: 558 201 654");
        jLabel33.setName("jLabel33"); // NOI18N
        UserContactPanel.add(jLabel33);
        jLabel33.setBounds(30, 50, 300, 50);

        UserContainerPanel.add(UserContactPanel, "UserContactPanel");

        UserChoosePaymentMethodPanel.setName("UserChoosePaymentMethodPanel"); // NOI18N
        UserChoosePaymentMethodPanel.setOpaque(false);
        UserChoosePaymentMethodPanel.setLayout(null);

        BuyAndPayButton1.setText("Wróć");
        BuyAndPayButton1.setName("BuyAndPayButton1"); // NOI18N
        BuyAndPayButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyAndPayButton1ActionPerformed(evt);
            }
        });
        UserChoosePaymentMethodPanel.add(BuyAndPayButton1);
        BuyAndPayButton1.setBounds(30, 400, 100, 40);

        BuyAndPayButton2.setText("Kupuję i płacę");
        BuyAndPayButton2.setName("BuyAndPayButton2"); // NOI18N
        BuyAndPayButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyAndPayButton2ActionPerformed(evt);
            }
        });
        UserChoosePaymentMethodPanel.add(BuyAndPayButton2);
        BuyAndPayButton2.setBounds(300, 90, 140, 60);

        mbankOptionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mbankOptionLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/paypal.png"))); // NOI18N
        mbankOptionLabel.setName("mbankOptionLabel"); // NOI18N
        UserChoosePaymentMethodPanel.add(mbankOptionLabel);
        mbankOptionLabel.setBounds(50, 90, 160, 50);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel38.setText("Wybierz metodę płatności:");
        jLabel38.setName("jLabel38"); // NOI18N
        UserChoosePaymentMethodPanel.add(jLabel38);
        jLabel38.setBounds(30, 40, 240, 22);

        transferujOptionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        transferujOptionLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/transferuj.jpg"))); // NOI18N
        transferujOptionLabel.setName("transferujOptionLabel"); // NOI18N
        UserChoosePaymentMethodPanel.add(transferujOptionLabel);
        transferujOptionLabel.setBounds(50, 280, 250, 50);

        paypalOptionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paypalOptionLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mbank.jpg"))); // NOI18N
        paypalOptionLabel.setName("paypalOptionLabel"); // NOI18N
        UserChoosePaymentMethodPanel.add(paypalOptionLabel);
        paypalOptionLabel.setBounds(50, 190, 130, 50);

        BuyAndPayButton3.setText("Kupuję i płacę");
        BuyAndPayButton3.setName("BuyAndPayButton3"); // NOI18N
        BuyAndPayButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyAndPayButton3ActionPerformed(evt);
            }
        });
        UserChoosePaymentMethodPanel.add(BuyAndPayButton3);
        BuyAndPayButton3.setBounds(300, 270, 140, 60);

        BuyAndPayButton4.setText("Kupuję i płacę");
        BuyAndPayButton4.setName("BuyAndPayButton4"); // NOI18N
        BuyAndPayButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyAndPayButton4ActionPerformed(evt);
            }
        });
        UserChoosePaymentMethodPanel.add(BuyAndPayButton4);
        BuyAndPayButton4.setBounds(300, 180, 140, 60);

        UserContainerPanel.add(UserChoosePaymentMethodPanel, "userChoosePaymentMethod");

        UserTraffic.setName("UserTraffic"); // NOI18N
        UserTraffic.setOpaque(false);

        UserTrafficScrollPane.setName("UserTrafficScrollPane"); // NOI18N

        UserTrafficTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID stoku", "Ruch z ost. godziny", "Przeciążenie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DefaultTableCellRenderer centerRenderer3 = new DefaultTableCellRenderer();
        centerRenderer3.setHorizontalAlignment (JLabel.CENTER);
        UserTrafficTable.setDefaultRenderer (String.class, centerRenderer3);
        UserTrafficTable.setDefaultRenderer (Long.class, centerRenderer3);
        DefaultTableCellRenderer renderer3 = (DefaultTableCellRenderer)UserTrafficTable.getTableHeader().getDefaultRenderer();
        renderer3.setHorizontalAlignment (JLabel.CENTER);
        UserTrafficTable.setName("UserTrafficTable");
        UserTrafficScrollPane.setViewportView(UserTrafficTable);

        UserTraffic.add(UserTrafficScrollPane);

        UserContainerPanel.add(UserTraffic, "card6");

        UserMainPanel.add(UserContainerPanel);
        UserContainerPanel.setBounds(170, 150, 530, 550);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clientPage.jpg"))); // NOI18N
        jLabel27.setText("Moje Konto");
        jLabel27.setName("jLabel27"); // NOI18N
        UserMainPanel.add(jLabel27);
        jLabel27.setBounds(0, 0, 700, 700);

        getContentPane().add(UserMainPanel, "UserMainPanel");

        MyAccountPanel.setAutoscrolls(true);
        MyAccountPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        MyAccountPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        MyAccountPanel.setName("MyAccountPanel"); // NOI18N
        MyAccountPanel.setOpaque(false);
        MyAccountPanel.setLayout(null);

        EditLoginLabel.setBackground(new java.awt.Color(255, 255, 255));
        EditLoginLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditLoginLabel.setForeground(new java.awt.Color(0, 51, 51));
        EditLoginLabel.setText("Login:");
        EditLoginLabel.setName("EditLoginLabel"); // NOI18N
        MyAccountPanel.add(EditLoginLabel);
        EditLoginLabel.setBounds(10, 100, 50, 30);

        EditPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditPasswordLabel.setText("Hasło:");
        EditPasswordLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        EditPasswordLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        EditPasswordLabel.setName("EditPasswordLabel"); // NOI18N
        EditPasswordLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        MyAccountPanel.add(EditPasswordLabel);
        EditPasswordLabel.setBounds(10, 130, 50, 30);

        LoginEditTextfield.setName("LoginEditTextfield"); // NOI18N
        LoginEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(LoginEditTextfield);
        LoginEditTextfield.setBounds(110, 100, 230, 30);

        PasswordEditTextfield.setEditable(false);
        PasswordEditTextfield.setBackground(new java.awt.Color(245, 245, 245));
        PasswordEditTextfield.setText("*****");
        PasswordEditTextfield.setName("PasswordEditTextfield"); // NOI18N
        MyAccountPanel.add(PasswordEditTextfield);
        PasswordEditTextfield.setBounds(110, 130, 230, 30);

        NameEditTextfield.setName("NameEditTextfield"); // NOI18N
        NameEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(NameEditTextfield);
        NameEditTextfield.setBounds(110, 160, 230, 30);

        SurnameEditTextfield.setName("SurnameEditTextfield"); // NOI18N
        SurnameEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SurnameEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(SurnameEditTextfield);
        SurnameEditTextfield.setBounds(110, 190, 230, 30);

        NameEditLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NameEditLabel.setText("Imię:");
        NameEditLabel.setName("NameEditLabel"); // NOI18N
        MyAccountPanel.add(NameEditLabel);
        NameEditLabel.setBounds(10, 160, 50, 30);

        SurnameEditLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SurnameEditLabel.setText("Nazwisko:");
        SurnameEditLabel.setName("SurnameEditLabel"); // NOI18N
        MyAccountPanel.add(SurnameEditLabel);
        SurnameEditLabel.setBounds(10, 190, 60, 30);

        IDEditLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        IDEditLabel.setText("ID:");
        IDEditLabel.setName("IDEditLabel"); // NOI18N
        MyAccountPanel.add(IDEditLabel);
        IDEditLabel.setBounds(10, 70, 80, 30);

        IDEditTextfield.setEditable(false);
        IDEditTextfield.setBackground(new java.awt.Color(245, 245, 245));
        IDEditTextfield.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        IDEditTextfield.setName("IDEditTextfield"); // NOI18N
        IDEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(IDEditTextfield);
        IDEditTextfield.setBounds(110, 70, 230, 30);

        StreetEditTextfield.setName("StreetEditTextfield"); // NOI18N
        MyAccountPanel.add(StreetEditTextfield);
        StreetEditTextfield.setBounds(110, 250, 230, 30);

        CityEditTextfield.setName("CityEditTextfield"); // NOI18N
        CityEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(CityEditTextfield);
        CityEditTextfield.setBounds(110, 280, 230, 30);

        CountryEditTextfield.setName("CountryEditTextfield"); // NOI18N
        MyAccountPanel.add(CountryEditTextfield);
        CountryEditTextfield.setBounds(110, 310, 230, 30);

        StreetEditLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StreetEditLabel.setText("Ulica:");
        StreetEditLabel.setName("StreetEditLabel"); // NOI18N
        MyAccountPanel.add(StreetEditLabel);
        StreetEditLabel.setBounds(10, 250, 90, 30);

        CityEditLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CityEditLabel.setText("Miasto:");
        CityEditLabel.setName("CityEditLabel"); // NOI18N
        MyAccountPanel.add(CityEditLabel);
        CityEditLabel.setBounds(10, 280, 90, 30);

        ActiveLabelMyAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ActiveLabelMyAccount.setText("Aktywny?");
        ActiveLabelMyAccount.setName("ActiveLabelMyAccount"); // NOI18N
        MyAccountPanel.add(ActiveLabelMyAccount);
        ActiveLabelMyAccount.setBounds(10, 340, 90, 30);

        EditDetailsButton.setText("Edytuj Dane");
        EditDetailsButton.setName("EditDetailsButton"); // NOI18N
        EditDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditDetailsButtonActionPerformed(evt);
            }
        });
        MyAccountPanel.add(EditDetailsButton);
        EditDetailsButton.setBounds(120, 380, 210, 23);

        SaveDetailsButton.setText("Zapisz");
        SaveDetailsButton.setEnabled(false);
        SaveDetailsButton.setName("SaveDetailsButton"); // NOI18N
        SaveDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDetailsButtonActionPerformed(evt);
            }
        });
        MyAccountPanel.add(SaveDetailsButton);
        SaveDetailsButton.setBounds(250, 410, 80, 23);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Nr dokumentu:");
        jLabel10.setName("jLabel10"); // NOI18N
        MyAccountPanel.add(jLabel10);
        jLabel10.setBounds(10, 220, 100, 30);

        CancelButton.setText("Anuluj");
        CancelButton.setEnabled(false);
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        MyAccountPanel.add(CancelButton);
        CancelButton.setBounds(170, 410, 80, 23);

        EditMessageLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        EditMessageLabel.setName("EditMessageLabel"); // NOI18N
        MyAccountPanel.add(EditMessageLabel);
        EditMessageLabel.setBounds(360, 590, 180, 20);

        jLabel14.setFont(new java.awt.Font("DejaVu Serif", 0, 30)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Dane konta");
        jLabel14.setName("jLabel14"); // NOI18N
        MyAccountPanel.add(jLabel14);
        jLabel14.setBounds(90, 10, 270, 30);

        DocumentEditTextfield.setEditable(false);
        DocumentEditTextfield.setBackground(new java.awt.Color(245, 245, 245));
        DocumentEditTextfield.setDisabledTextColor(new java.awt.Color(245, 245, 245));
        DocumentEditTextfield.setName("DocumentEditTextfield"); // NOI18N
        DocumentEditTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentEditTextfieldActionPerformed(evt);
            }
        });
        MyAccountPanel.add(DocumentEditTextfield);
        DocumentEditTextfield.setBounds(110, 220, 230, 30);

        CountryEditLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CountryEditLabel4.setText("Kraj:");
        CountryEditLabel4.setName("CountryEditLabel4"); // NOI18N
        MyAccountPanel.add(CountryEditLabel4);
        CountryEditLabel4.setBounds(10, 310, 90, 30);

        userActiveCheckboxInMyAccountPanel.setEnabled(false);
        userActiveCheckboxInMyAccountPanel.setName("userActiveCheckboxInMyAccountPanel"); // NOI18N
        MyAccountPanel.add(userActiveCheckboxInMyAccountPanel);
        userActiveCheckboxInMyAccountPanel.setBounds(110, 350, 30, 21);

        getContentPane().add(MyAccountPanel, "myAccountPanel");
        MyAccountPanel.getAccessibleContext().setAccessibleName("");

        Symulator.setName("Symulator"); // NOI18N
        Symulator.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                SymulatorAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Symulator.setLayout(null);

        SymulatotHelp.setText("Pomoc");
        SymulatotHelp.setName("SymulatotHelp"); // NOI18N
        SymulatotHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymulatotHelpActionPerformed(evt);
            }
        });
        Symulator.add(SymulatotHelp);
        SymulatotHelp.setBounds(579, 160, 110, 23);

        jLabel9.setText("Cards");
        jLabel9.setName("jLabel9"); // NOI18N
        Symulator.add(jLabel9);
        jLabel9.setBounds(10, 210, 200, 20);

        jLabel37.setText("Terminals");
        jLabel37.setName("jLabel30"); // NOI18N
        Symulator.add(jLabel37);
        jLabel37.setBounds(230, 210, 200, 20);

        jLabel36.setText("Products");
        jLabel36.setName("jLabel36"); // NOI18N
        Symulator.add(jLabel36);
        jLabel36.setBounds(390, 210, 160, 20);

        SymulatorBuyButton.setBackground(new java.awt.Color(0, 0, 0));
        SymulatorBuyButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SymulatorBuyButton.setForeground(new java.awt.Color(255, 255, 255));
        SymulatorBuyButton.setText("Kup");
        SymulatorBuyButton.setName("SymulatorBuyButton"); // NOI18N
        SymulatorBuyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymulatorBuyButtonActionPerformed(evt);
            }
        });
        Symulator.add(SymulatorBuyButton);
        SymulatorBuyButton.setBounds(480, 500, 160, 40);

        SymulatorResultLabel.setName("SymulatorResultLabel"); // NOI18N
        Symulator.add(SymulatorResultLabel);
        SymulatorResultLabel.setBounds(60, 500, 290, 40);

        jScrollPane13.setName("jScrollPane13"); // NOI18N

        SymulatorTerminalList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa Atrakcji"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SymulatorTerminalList.setToolTipText("");
        SymulatorTerminalList.setName("SymulatorTerminalList"); // NOI18N
        SymulatorTerminalList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SymulatorTerminalListMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(SymulatorTerminalList);

        Symulator.add(jScrollPane13);
        jScrollPane13.setBounds(230, 230, 150, 260);

        jScrollPane14.setName("jScrollPane14"); // NOI18N

        SymulatorProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa", "Cena"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SymulatorProductList.setToolTipText("");
        SymulatorProductList.setName("SymulatorProductList"); // NOI18N
        jScrollPane14.setViewportView(SymulatorProductList);

        Symulator.add(jScrollPane14);
        jScrollPane14.setBounds(390, 230, 250, 260);

        jScrollPane15.setName("jScrollPane15"); // NOI18N

        SymulatorCardsList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Punkty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SymulatorCardsList.setToolTipText("");
        SymulatorCardsList.setName("SymulatorCardsList"); // NOI18N
        SymulatorCardsList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                SymulatorCardsListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        SymulatorCardsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SymulatorCardsListMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(SymulatorCardsList);

        Symulator.add(jScrollPane15);
        jScrollPane15.setBounds(10, 230, 200, 260);

        BackgroundImageLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login.jpg"))); // NOI18N
        BackgroundImageLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        BackgroundImageLabel1.setName("BackgroundImageLabel1"); // NOI18N
        Symulator.add(BackgroundImageLabel1);
        BackgroundImageLabel1.setBounds(0, 0, 1310, 890);

        getContentPane().add(Symulator, "symulator");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void DisplayCards( javax.swing.JPanel CardsPanel, final String clientName ) {
        AvailablePointsLabel = new JLabel();
        IDLabel = new JLabel();
        ActivationDateLabel = new JLabel();
        ExpirationDateLabel = new JLabel();
        PointsLabel = new JLabel();
        AvailablePointsTextField = new JTextField();
        ManualChargePointsAmountTextField = new JTextField();
        BuyPointsButton2 = new JButton();
        CashierChargePointsToClientAccountButton = new JButton();
        AddCardButton = new JButton();
        
        AvailablePointsLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AvailablePointsLabel.setText("Nieprzydzielone punkty:");
        AvailablePointsLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        AvailablePointsLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        AvailablePointsLabel.setName("AvailablePointsLabel"); // NOI18N
        AvailablePointsLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        CardsPanel.add(AvailablePointsLabel);
        AvailablePointsLabel.setBounds(20, 20, 150, 20);

        IDLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        IDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IDLabel.setText("ID");
        IDLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        IDLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        IDLabel.setName("IDLabel"); // NOI18N
        IDLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        CardsPanel.add(IDLabel);
        IDLabel.setBounds(30, 60, 40, 14);

        ActivationDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ActivationDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ActivationDateLabel.setText("Data aktywacji");
        ActivationDateLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        ActivationDateLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        ActivationDateLabel.setName("ActivationDateLabel"); // NOI18N
        ActivationDateLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        CardsPanel.add(ActivationDateLabel);
        ActivationDateLabel.setBounds(80, 60, 100, 14);

        ExpirationDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ExpirationDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ExpirationDateLabel.setText("Data ważności");
        ExpirationDateLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        ExpirationDateLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        ExpirationDateLabel.setName("ExpirationDateLabel"); // NOI18N
        ExpirationDateLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        CardsPanel.add(ExpirationDateLabel);
        ExpirationDateLabel.setBounds(170, 60, 100, 14);

        PointsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PointsLabel.setText("Punkty");
        PointsLabel.setMaximumSize(new java.awt.Dimension(29, 14));
        PointsLabel.setMinimumSize(new java.awt.Dimension(29, 14));
        PointsLabel.setName("PointsLabel"); // NOI18N
        PointsLabel.setPreferredSize(new java.awt.Dimension(29, 14));
        CardsPanel.add(PointsLabel);
        PointsLabel.setBounds(270, 60, 50, 14);

        AvailablePointsTextField.setEditable(false);
        AvailablePointsTextField.setBackground(new java.awt.Color(250, 250, 250));
        AvailablePointsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AvailablePointsTextField.setText("0");
        AvailablePointsTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AvailablePointsTextField.setName("AvailablePointsTextField"); // NOI18N
        CardsPanel.add(AvailablePointsTextField);
        AvailablePointsTextField.setBounds(170, 20, 50, 20);
        
        ManualChargePointsAmountTextField.setEditable(true);
        ManualChargePointsAmountTextField.setBackground(new java.awt.Color(250, 250, 250));
        ManualChargePointsAmountTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ManualChargePointsAmountTextField.setText("");
        ManualChargePointsAmountTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ManualChargePointsAmountTextField.setName("ManualChargePointsAmountTextField"); // NOI18N
        if (CardsPanel.equals(ClientCardsPanel)) CardsPanel.add(ManualChargePointsAmountTextField);
        ManualChargePointsAmountTextField.setBounds(230, 20, 50, 20);
   
        BuyPointsButton2.setText("Kup punkty");
        BuyPointsButton2.setMaximumSize(new java.awt.Dimension(67, 23));
        BuyPointsButton2.setMinimumSize(new java.awt.Dimension(67, 23));
        BuyPointsButton2.setName("BuyPointsButton"); // NOI18N
        BuyPointsButton2.setPreferredSize(new java.awt.Dimension(67, 23));
        BuyPointsButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyPointsButton2ActionPerformed(evt);
            }
        });
        if (!CardsPanel.equals(ClientCardsPanel)) CardsPanel.add(BuyPointsButton2);
        BuyPointsButton2.setBounds(230, 18, 100, 23);
        
        
        CashierChargePointsToClientAccountButton.setText("Doładuj");
        CashierChargePointsToClientAccountButton.setMaximumSize(new java.awt.Dimension(110, 23));
        CashierChargePointsToClientAccountButton.setMinimumSize(new java.awt.Dimension(110, 23));
        CashierChargePointsToClientAccountButton.setName("CashierChargePointsToClientAccount"); // NOI18N
        CashierChargePointsToClientAccountButton.setPreferredSize(new java.awt.Dimension(110, 23));
        CashierChargePointsToClientAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Integer pointsAmount = 0;
                if ((!ManualChargePointsAmountTextField.getText().isEmpty()) && clientName != null)
                    pointsAmount = Integer.parseInt( ManualChargePointsAmountTextField.getText() );
                if (pointsAmount > 0) CashierChargePointsToClientAccount(pointsAmount, clientName);
            }
        });
        if (CardsPanel.equals(ClientCardsPanel)) CardsPanel.add(CashierChargePointsToClientAccountButton);
        CashierChargePointsToClientAccountButton.setBounds(280, 18, 100, 23);

        AddCardButton.setText("Dodaj kartę");
        AddCardButton.setMaximumSize(new java.awt.Dimension(67, 23));
        AddCardButton.setMinimumSize(new java.awt.Dimension(67, 23));
        AddCardButton.setName("AddCardButton2"); // NOI18N
        AddCardButton.setPreferredSize(new java.awt.Dimension(67, 23));
        AddCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCardButtonActionPerformed(evt);
            }
        });
        CardsPanel.add(AddCardButton);
        AddCardButton.setBounds(400, 20, 100, 23);

        int id = ClientController.GetClientIDFromLogin(clientName);
        if( id >= 0 ) {
            List<Cards> cards = CardController.getUserCards
                (id, new StringBuilder());
            for( Cards card : cards ) {
                AddCardView( card, CardsPanel );
            }
            AvailablePointsTextField.setText( Integer.toString(ClientController.GetClientPoints(id)) );
            AddCardButton.setEnabled(true);
            BuyPointsButton2.setEnabled(true);
        }
        else {
            AvailablePointsTextField.setText( "0" );
            AddCardButton.setEnabled(false);
            BuyPointsButton2.setEnabled(false);
        }
    }    
    
    private void RemoveCardPanelComponents( javax.swing.JPanel CardsPanel ) {
        if( AvailablePointsLabel == null )
            return;
        CardsPanel.remove(AvailablePointsLabel);
        CardsPanel.remove(IDLabel);
        CardsPanel.remove(ActivationDateLabel);
        CardsPanel.remove(ExpirationDateLabel);
        CardsPanel.remove(PointsLabel);
        CardsPanel.remove(AvailablePointsTextField);
        CardsPanel.remove(AvailablePointsTextField);
        CardsPanel.remove(BuyPointsButton2);
        CardsPanel.remove(AddCardButton);
    }
    
    private void BuyPointsButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        fillPackagesScrollPanel();
        pointsPackagesListScrollPane.getViewport().setOpaque(false);
        pointsSum.setText("0");
        costSum.setText("0");
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "UserMainPanel", UserContainerPanel, "userBuyPoints" );
        changeCard( view, true );
    }
    
    private void AddCardButtonActionPerformed(java.awt.event.ActionEvent evt) {
        AddCard();
    }
    
    private void AddCard() {
        String login = new String();
        JPanel parent = (JPanel)AddCardButton.getParent();
        if( parent.getName().equalsIgnoreCase( "clientCardsPanel" ))
            login = CashierController.GetSelectedUser();
        else login = SessionController.GetUserLogged();
        Cards card = CardController.AddNewCard(MyAccountController.GetAccountDetails(login).getUserid(), 0, new StringBuilder());
        if( card != null )
            AddCardView( card, (JPanel)AddCardButton.getParent() );
    }
    
    private void AddCardView( Cards card, javax.swing.JPanel CardsPanel ) {
        int minPositionY = 80;
        int cardViewHeight = 25;
        int positionY = minPositionY + cardViewList.size()*cardViewHeight;
        cardViewList.add(new CardView(cardViewList.size(), positionY, CardsPanel, this));
        cardViewList.lastElement().SetTextFields(card.getCardid(), card.getActdate(), card.getExpdate(), card.getPoints());
        if( cardViewList.size() >= 10 ) {
            AddCardButton.setEnabled(false);
        }
    }
    
    public void DeleteCardView( int index ) {
        cardViewList.remove(index);
        for(int i = index; i < cardViewList.size(); i++)
        {
            cardViewList.elementAt(i).SetIndex(i);
            cardViewList.elementAt(i).SlideUp(25);
        }
        int points = ClientController.GetClientPoints(ClientController.GetClientIDFromLogin(SessionController.GetUserLogged()));
        AvailablePointsTextField.setText(Integer.toString(points));
        UserMyCardsPanel.repaint();
        if( !AddCardButton.isEnabled() )
            AddCardButton.setEnabled(true);
    }
    
    public String GetAvailablePointsText() {
        return AvailablePointsTextField.getText();
    }

    public void SetAvailablePointsText( String points ) {
        AvailablePointsTextField.setText(points);
        UserMyCardsPanel.repaint();
    }
    
    private void CashierChargePointsToClientAccount(Integer points, String user) {                                                 
        int clientId = ClientController.GetClientIDFromLogin(user);
        System.out.println(points + user);
        ClientController.UpdateClientPoints(user, ClientController.GetClientPoints(clientId)+ points);
        
        AvailablePointsTextField.setText(Integer.toString(ClientController.GetClientPoints(clientId)));
    }
    
    private void changeCard(ViewSwitcher target, boolean checkSession) {
        CardLayout containerLayout = (CardLayout) target.mainContainer.getLayout();
        CardLayout cardLayout = new CardLayout();
        if( target.card != null )
            cardLayout = (CardLayout) target.card.getLayout();

        if (checkSession) {
            if (SessionController.IsUserLogged()) {
                containerLayout.show(target.mainContainer, target.containerName);
                if( target.card != null )
                    cardLayout.show(target.card, target.cardName);
            } else {
                ExitSession();
                return;
            }
            SessionController.AddToPreviousViews(target);
        } else {
            containerLayout.show(target.mainContainer, target.containerName);
            if( target.card != null )
                cardLayout.show(target.card, target.cardName);
        }
    }

    private void LoginTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginTextFieldActionPerformed

    private void PasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTextFieldActionPerformed

    private void CreateAccountLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateAccountLinkMouseClicked
        ViewSwitcher view = new ViewSwitcher();
        view.mainContainer = getContentPane();
        view.containerName = "register";
        changeCard( view, false );
        RegisterMessageLabel.setText("");
        Name.setText("");
        Surname.setText("");
        LoginTextField1.setText("");
        DocumentNumber.setText("");
        Street.setText("");
        City.setText("");
        Country.setText("");
    }//GEN-LAST:event_CreateAccountLinkMouseClicked

    private void LoginTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginTextField1ActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void SurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SurnameActionPerformed

    private void DocumentNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DocumentNumberActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        PerformLoginAction();
    }//GEN-LAST:event_LoginButtonActionPerformed

    public void PerformLoginAction() {

        StringBuilder viewPanel = new StringBuilder();
        ViewSwitcher view = new ViewSwitcher();
        if (LoginController.logIn(LoginTextField.getText(), new String(PasswordTextField.getPassword()), viewPanel, loginStatusMessage)) {
            MessageLabel.setText("");
            view.mainContainer = getContentPane();
            view.containerName = viewPanel.toString();

            if (SessionController.getLoggedUserType() == RegistrationController.UserTypes.Admin) {
                UserChangeModeToAdminButton.setVisible(true); // Adding return-to-admin-panel button to client panel when admin is logged
                CashierChangeModeToAdminButton.setVisible(true); // Adding return-to-admin-panel button to cashier panel when admin is logged
                AdminPanelBackButton.setVisible(true);
                AdminPanelBackButton.setEnabled(false);
                AdminViewTitleLabel.setText("Menu");
                view.card = AdminContainerPanel;
                view.cardName = "adminMenuPanel";
            } else {
                UserChangeModeToAdminButton.setVisible(false);
                CashierChangeModeToAdminButton.setVisible(false);
                AdminPanelBackButton.setVisible(false);
                if( SessionController.getLoggedUserType() == RegistrationController.UserTypes.Cashier ) {
                    view.card = CashierContainer;
                    view.cardName = "SearchPanel";
                }
                else {
                    view.card = UserContainerPanel;
                    view.cardName = "userMyCards";
                    DisplayCards( UserMyCardsPanel, LoginTextField.getText() );
                }
            }

            changeCard( view, true );
        } else {
            MessageLabel.setText("Błędny login i/lub hasło");
            Password.setText("");
        }
    }

    private void CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityActionPerformed

    private void CountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountryActionPerformed

    private void StreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StreetActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        PreviewView();
    }//GEN-LAST:event_BackButtonActionPerformed

    public void PreviewView() {
        CardLayout loginPaneLayout = (CardLayout) getContentPane().getLayout();
        loginPaneLayout.show(getContentPane(), "login");
        MessageLabel.setText("");
    }
    
    public void register() {
        RegisterButtonActionPerformed( null );
    }

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        String errorMessage;
        if (RepeatPassword.getText().compareTo(Password.getText()) == 0) {
            AccountInfo info = new AccountInfo();
            info.name = Name.getText();
            info.surname = Surname.getText();
            info.login = LoginTextField1.getText();
            info.documentNumber = DocumentNumber.getText();
            info.street = Street.getText();
            info.city = City.getText();
            info.country = Country.getText();
            info.password = Password.getText();
            errorMessage = PerformRegisterAction( info, true );
            MessageLabel.setText("");
        } else {
            errorMessage = "Błędnie powtórzone hasło";
        }
        RegisterMessageLabel.setText(errorMessage);
        Password.setText("");
        RepeatPassword.setText("");
    }//GEN-LAST:event_RegisterButtonActionPerformed

    public String PerformRegisterAction( AccountInfo info, Boolean changeCard ) {

        RegistrationController regController = new RegistrationController();
        String errorMessage = "";
        Boolean isSuccess;
        isSuccess = regController.register(info.name, info.surname, info.city, info.country, info.street, info.login, info.password, info.documentNumber );
        if (isSuccess) {
            if( changeCard ) {
                CardLayout loginPaneLayout = (CardLayout) getContentPane().getLayout();
                loginPaneLayout.show(getContentPane(), "login");
            }
            return "Konto utworzone";
        } else {
            return "Wybierz inny login";
        }
    }

    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    private void UsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsersButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "userManagmentAdminPanel");
        changeCard(view, true);
        AdminPanelBackButton.setEnabled(true);
        AdminViewTitleLabel.setText("Użytkownicy");
    }//GEN-LAST:event_UsersButtonActionPerformed

    private void ClientModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientModeButtonActionPerformed
        MyCardsButtonActionPerformed(evt);
        AdminPanelBackButton.setEnabled(true);
    }//GEN-LAST:event_ClientModeButtonActionPerformed

    private void AdminLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminLogoutButtonActionPerformed
        RemoveCardPanelComponents( UserMyCardsPanel );
        for( CardView c : cardViewList ) {
            c.DeleteView();
        }
        SessionController.ResetSession();
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "login");
        changeCard(view, false);
        PasswordTextField.setText((""));
        LoginTextField.setText("");
        cardViewList.clear();
    }//GEN-LAST:event_AdminLogoutButtonActionPerformed

    private void UserLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserLogoutButtonActionPerformed
        AdminLogoutButtonActionPerformed(evt);
    }//GEN-LAST:event_UserLogoutButtonActionPerformed

    private void UserMyAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserMyAccountButtonActionPerformed
        UserContainerPanel.add(MyAccountPanel, "myAccountPanel");
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "UserMainPanel", UserContainerPanel, "myAccountPanel" );
        changeCard(view, true);
        SetAccountInfo( SessionController.GetUserLogged() );
    }//GEN-LAST:event_UserMyAccountButtonActionPerformed

    private void SetAccountInfo( String login ) {
        AccountInfo user = MyAccountController.GetAccountInfoString( login );
        
        IDEditTextfield.setText(user.userID);
        LoginEditTextfield.setText(user.login);
        if( user.userID.isEmpty() ) {
            PasswordEditTextfield.setText("");
            EditDetailsButton.setEnabled(false);
        }
        else {
            PasswordEditTextfield.setText("*****");
            EditDetailsButton.setEnabled(true);
        }
        NameEditTextfield.setText(user.name);
        SurnameEditTextfield.setText(user.surname);
        StreetEditTextfield.setText(user.street);
        CityEditTextfield.setText(user.city);
        CountryEditTextfield.setText(user.country);
        DocumentEditTextfield.setText(user.documentNumber);
        userActiveCheckboxInMyAccountPanel.setSelected(user.active);

        SetFieldsEnabledAndColor( false, new java.awt.Color(245,245,245));
    }
    
    public void SetFieldsEnabledAndColor( Boolean enabled, java.awt.Color color) {
        java.awt.Color black = new java.awt.Color(0, 0, 0);
        IDEditTextfield.setDisabledTextColor(black);
        IDEditTextfield.setBackground(color);
        LoginEditTextfield.setEditable(enabled);
        LoginEditTextfield.setDisabledTextColor(black);
        LoginEditTextfield.setBackground(color);
        NameEditTextfield.setEditable(enabled);
        NameEditTextfield.setDisabledTextColor(black);
        NameEditTextfield.setBackground(color);
        SurnameEditTextfield.setEditable(enabled);
        SurnameEditTextfield.setDisabledTextColor(black);
        SurnameEditTextfield.setBackground(color);
        StreetEditTextfield.setEditable(enabled);
        StreetEditTextfield.setDisabledTextColor(black);
        StreetEditTextfield.setBackground(color);
        CityEditTextfield.setEditable(enabled);
        CityEditTextfield.setDisabledTextColor(black);
        CityEditTextfield.setBackground(color);
        CountryEditTextfield.setEditable(enabled);
        CountryEditTextfield.setDisabledTextColor(black);
        CountryEditTextfield.setBackground(color);
        DocumentEditTextfield.setEditable(enabled);
        DocumentEditTextfield.setDisabledTextColor(black);
        DocumentEditTextfield.setBackground(color);
        userActiveCheckboxInMyAccountPanel.setEnabled(enabled);
    }

    private void IDEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDEditTextfieldActionPerformed

    private void SaveDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDetailsButtonActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
            return;
        }
        EditMessageLabel.setText(MyAccountController.UpdateAccountDetails(GetDataFromTextfields(), Integer.decode(IDEditTextfield.getText())));
        SetFieldsEnabledAndColor( false, new java.awt.Color(245,245,245));
        CancelButton.setEnabled(false);
        DocumentEditTextfield.setEnabled(false);
    }//GEN-LAST:event_SaveDetailsButtonActionPerformed

    private Users GetDataFromTextfields() {
        Users user = new Users();
        Addresses address = new Addresses();
        user.setLogin(LoginEditTextfield.getText());
        user.setPassword(PasswordEditTextfield.getText());
        user.setName(NameEditTextfield.getText());
        user.setSurname(SurnameEditTextfield.getText());
        user.setDocumentnumber(DocumentEditTextfield.getText());
        user.setActive(userActiveCheckboxInMyAccountPanel.isSelected());
        address.setStreet(StreetEditTextfield.getText());
        address.setCity(CityEditTextfield.getText());
        address.setCountry(CountryEditTextfield.getText());
        user.setAddresses(address);
        return user;
    }
    private void EditDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditDetailsButtonActionPerformed
        if (SessionController.IsUserLogged()) {
            SetFieldsEnabledAndColor( true, new java.awt.Color(255,255,255));
            CancelButton.setEnabled(true);
            SaveDetailsButton.setEnabled(true);
        } else {
            ExitSession();
        }
    }//GEN-LAST:event_EditDetailsButtonActionPerformed

    private void AdminMyAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminMyAccountButtonActionPerformed
        UserMyAccountButtonActionPerformed(evt);
    }//GEN-LAST:event_AdminMyAccountButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
            return;
        }
        SetAccountInfo(MyAccountController.GetLoginFromID(Integer.decode(IDEditTextfield.getText())));
        SaveDetailsButton.setEnabled(false);
        CancelButton.setEnabled(false);
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void SaveDetailsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDetailsButton1ActionPerformed
        String message;
        if( PasswordEditTextfield1.getText().contentEquals(PasswordEditTextfield3.getText()) ) {
            AccountInfo info = new AccountInfo();
            info.name = NameEditTextfield1.getText();
            info.surname = SurnameEditTextfield1.getText();
            info.login = LoginEditTextfield1.getText();
            info.password = PasswordEditTextfield1.getText();
            info.documentNumber = DocumentEditTextfield1.getText();
            info.street = StreetEditTextfield1.getText();
            info.city = CityEditTextfield1.getText();
            info.country = CountryEditTextfield1.getText();
            message = PerformRegisterAction( info, false );
        } else {
            message = "Błędnie powtórzone hasło";
        }
        EditMessageLabel1.setText(message);
        PasswordEditTextfield1.setText("");
        PasswordEditTextfield3.setText("");
    }//GEN-LAST:event_SaveDetailsButton1ActionPerformed

    private void CancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButton1ActionPerformed
        changeCard( SessionController.GetPreviousView(), true );
    }//GEN-LAST:event_CancelButton1ActionPerformed

    private void CashierModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashierModeButtonActionPerformed
        CardLayout loginPaneLayout = (CardLayout) getContentPane().getLayout();
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "SearchPanel");
        changeCard( view, true );
        AdminPanelBackButton.setEnabled(true);
    }//GEN-LAST:event_CashierModeButtonActionPerformed

    private void DocumentEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DocumentEditTextfieldActionPerformed

    private void SurnameEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SurnameEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SurnameEditTextfieldActionPerformed

    private void NameEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameEditTextfieldActionPerformed

    private void CityEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityEditTextfieldActionPerformed

    private void UserChangeModeToAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserChangeModeToAdminButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "adminMenuPanel");
        changeCard( view, true );
    }//GEN-LAST:event_UserChangeModeToAdminButtonActionPerformed

    private void UpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateUserActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
            return;
        }
        Users user = new Users();
        Addresses address = new Addresses();
        user.setLogin(LoginTextField2.getText());
        user.setName(NameTextField2.getText());
        user.setSurname(SurnameTextField2.getText());
        user.setDocumentnumber(DocumentTextField2.getText());
        user.setActive(userActiveCheckboxInAdminPanel.isSelected());
        address.setStreet(StreetTextField2.getText());
        address.setCity(CityTextField2.getText());
        address.setCountry(CountryTextField2.getText());
        user.setAddresses(address);
        int row = UserListTable.getSelectedRow();
        int id = (int)UserListTable.getValueAt(row, 0);
        
        UserManagementAdminController controller = new UserManagementAdminController();
        String choosingRole = getSelectedButtonText(UserRoleChooseGroup);
        if (controller.Exist(LoginTextField2.getText())) {
            UpdateResultLabel.setText(MyAccountController.UpdateAccountDetails(user, id));
            controller.UpdateUser(LoginTextField2.getText(), choosingRole);            
        } else {
            UpdateResultLabel.setText("User does not exist!");
        }
        
        RefreshAdminManagementUsersList();
    }//GEN-LAST:event_UpdateUserActionPerformed

    private void LoginTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginTextField2ActionPerformed
        
    }//GEN-LAST:event_LoginTextField2ActionPerformed

    private void UserRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserRadioActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
        }
    }//GEN-LAST:event_UserRadioActionPerformed

    private void AdminPanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminPanelBackButtonActionPerformed
        ViewSwitcher view = SessionController.GetPreviousView();
        if( view.card != null ) {
            if (SessionController.IsUserLogged())
                changeCard( view, false );
            else {
                ExitSession();
                return;
            }
            SessionController.DeleteLastView();
            if( SessionController.GetViewsCount() > 1 ) {
                if( !AdminPanelBackButton.isEnabled() )
                    AdminPanelBackButton.setEnabled(true);
            } else {
                AdminPanelBackButton.setEnabled(false);
            }
            if( view.cardName == "productsManagementPanel" ) {                
                AdminViewTitleLabel.setText("Cennik");
            } else if ( view.cardName == "AttractionsAndGatesPanel" ) {
                AdminViewTitleLabel.setText("Atrakcje i Bramki");
            } else if( view.cardName == "userManagmentAdminPanel" ) {
                AdminViewTitleLabel.setText("Użytkownicy");
            } else if( view.cardName == "slopeManagmentAdminPanel" ) {
                AdminViewTitleLabel.setText("Stok");
            } else if( view.cardName == "adminMenuPanel" )          
                AdminViewTitleLabel.setText("Menu");
        }
    }//GEN-LAST:event_AdminPanelBackButtonActionPerformed

    private void PriceListButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "productsManagementPanel");
        changeCard( view, true );
        AdminPanelBackButton.setEnabled(true);
        AdminViewTitleLabel.setText("Cennik");
    }                                               

    private void SlopeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlopeButtonActionPerformed

        List <Object []> traffic = SlopeController.getTrafficList(loginStatusMessage);
        if (traffic != null){
            DefaultTableModel model = (DefaultTableModel) SlopeTraffic.getModel();
            model.setRowCount(0);
            boolean tempOverload;
            for (int i = 0; i < traffic.size(); i++){
                Object[] row = traffic.get(i);
                if ((Long)row[1] > MAX_SLOPE_TRAFFIC)
                    tempOverload = true;
                else
                    tempOverload = false;
                
                model.addRow(new Object[]{row[0], row[1].toString(), tempOverload});
            }
        }
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "adminPanelMain", AdminContainerPanel, "slopeManagmentAdminPanel");
        changeCard(view, true);
        AdminPanelBackButton.setEnabled(true);
        AdminViewTitleLabel.setText("Stok");
    }//GEN-LAST:event_SlopeButtonActionPerformed

    private void GatesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GatesButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( AdminContainerPanel, "AttractionsAndGatesPanel", AttractionManagementAdminPanel, "AttractionListPanel");
        changeCard( view, true );
        TerminalController tc = new TerminalController();
        DefaultTableModel model = (DefaultTableModel) AttractionListTable2.getModel();
        model.setRowCount(0);
        List atr = tc.GetAttractionList("");
        if( atr != null ) {
            for (Object atrObj : atr) {
                Attraction attraction = (Attraction)atrObj;
               
                model.addRow(new Object[]{attraction.getAttractionid(),attraction.getName(), attraction.getType()});
            }
        }
        AdminPanelBackButton.setEnabled(true);
        AdminViewTitleLabel.setText("Atrakcje i Bramki");
        
        DefaultTableModel model2 = (DefaultTableModel) TerminalListTable.getModel();
        model.setRowCount(0);
        List terminalList = tc.GetTerminalList("");
        if( terminalList != null ) {
            for (Object termObj : terminalList) {
               Terminal term = (Terminal)termObj;
               String atrName = "";
               if( term.getAttraction() != null )
                   atrName = term.getAttraction().getName();
               model.addRow(new Object[]{term.getTerminalid(), atrName, term.getLocktime()});
            }
        }
        AdminPanelBackButton.setEnabled(true);
        AdminViewTitleLabel.setText("Atrakcje i Bramki");
    }//GEN-LAST:event_GatesButtonActionPerformed

    private void NewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewProductButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "addProductAdminPanel");
        changeCard( view, true );
    }//GEN-LAST:event_NewProductButtonActionPerformed

    private void EditProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditProductButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "editProductAdminPanel");
        changeCard( view, true );
    }//GEN-LAST:event_EditProductButtonActionPerformed

    private void NewTerminalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewTerminalButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "TerminalsEditAddPanel" );
        changeCard( view, true );
        //Dimention d = AttractionListTable2.getSize();
        int row = AttractionListTable2.getSelectedRow();
        String selectedAttraction = null;
        if( row >= 0 )
            selectedAttraction = (String)AttractionListTable2.getValueAt(row, 1);
        if( selectedAttraction == null ) {
            selectedAttraction = "brak";
            AddTerminalButton1.setEnabled(false);
        } else AddTerminalButton1.setEnabled(true);
        ChosenAttractionLabel.setText(selectedAttraction);
    }//GEN-LAST:event_NewTerminalButtonActionPerformed

    private void EditUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUserButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "editUserAdminPanel");
        changeCard( view, true );
        int row = UserListTable.getSelectedRow();
        int id = (int)UserListTable.getValueAt(row, 0);
        AccountInfo info = MyAccountController.GetAccountInfoString(MyAccountController.GetLoginFromID(id));
        LoginTextField2.setText(info.login);
        NameTextField2.setText(info.name);
        SurnameTextField2.setText(info.surname);
        DocumentTextField2.setText(info.documentNumber);
        StreetTextField2.setText(info.street);
        CityTextField2.setText(info.city);
        CountryTextField2.setText(info.country);
        userActiveCheckboxInAdminPanel.setSelected(info.active);
        UpdateResultLabel.setText("");
        UserManagementAdminController ac = new UserManagementAdminController();
        switch(ac.GetUserRole(info.login)) {
            case "User":
                UserRadio.setSelected(true);
                break;
            case "Admin":
                AdminRadio.setSelected(true);
                break;
            case "Cashier":
                CashierRadio.setSelected(true);
        }
    }//GEN-LAST:event_EditUserButtonActionPerformed

    private void SearchUserTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchUserTextFieldActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
        }
    }//GEN-LAST:event_SearchUserTextFieldActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "addProductToPriceListPanel");
        changeCard( view, true );
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "addProductAdminPanel");
        changeCard( view, true );
    }//GEN-LAST:event_jButton11ActionPerformed

    private void EditClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditClientButtonActionPerformed
        CashierContainer.add(MyAccountPanel, "myAccountPanel");
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "myAccountPanel");
        SetAccountInfo( CashierController.GetSelectedUser() );
        changeCard( view, true );
    }//GEN-LAST:event_EditClientButtonActionPerformed

    private void ContactButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactButton3ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "ContactPanel");
        changeCard( view, true );
    }//GEN-LAST:event_ContactButton3ActionPerformed

    private void NewAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewAccountButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "NewClientAccountPanel" );
        changeCard( view, true );
        
        NameEditTextfield1.setText("");
        SurnameEditTextfield1.setText("");
        LoginEditTextfield1.setText("");
        PasswordEditTextfield1.setText("");
        PasswordEditTextfield3.setText("");
        DocumentEditTextfield1.setText("");
        StreetEditTextfield1.setText("");
        CityEditTextfield1.setText("");
        CountryEditTextfield1.setText("");
        EditMessageLabel1.setText("");
    }//GEN-LAST:event_NewAccountButtonActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        AdminLogoutButtonActionPerformed(evt);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void ClientModeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientModeButton1ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "UserMainPanel", UserContainerPanel, "userMyCards" );
        changeCard( view, true );
        RemoveCardPanelComponents( UserMyCardsPanel );
        for( CardView c : cardViewList ) {
            c.DeleteView();
        }
        cardViewList.clear();
        DisplayCards(UserMyCardsPanel, SessionController.GetUserLogged());
    }//GEN-LAST:event_ClientModeButton1ActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "SearchPanel" );
        changeCard( view, true );
        System.out.println("SearchPanel");
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void UserSearchInputTextFieldChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserSearchInputTextFieldChanged
       DefaultListModel model = new DefaultListModel();
       ResultList.setModel(model);
       
       CashierController cc = new CashierController();
       List results = cc.GetUsersList(UserSearchInputTextField.getText());
       
        for (Object result : results) {
            Users user = (Users)result;
            model.addElement(CashierController.GetUserConvertedName(user));
        }
        
        if(results.size() > 0)
        {
            CashierController.SetSelectedUser((Users)results.get(0), SelecetedUserTextPlane);
        }

        CardScanStatusTextField.setText("Skanuj");
    }//GEN-LAST:event_UserSearchInputTextFieldChanged

    private void CardScanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CardScanButtonActionPerformed
        CashierController cc = new CashierController();
        
        Users scannedUser = cc.GetRandomUser();

        CashierController.SetSelectedUser(scannedUser, SelecetedUserTextPlane);
        CardScanStatusTextField.setText("Zeskanowano: " + CashierController.GetUserConvertedName(scannedUser));
        UserSearchInputTextField.setText("");
        DefaultListModel model = new DefaultListModel();
        ResultList.setModel(model);
    }//GEN-LAST:event_CardScanButtonActionPerformed

    private void ResultListClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResultListClicked
        CashierController cc = new CashierController();
        cc.SetSelectedUserWithString(ResultList.getSelectedValue(), SelecetedUserTextPlane);
    }//GEN-LAST:event_ResultListClicked

    private void NewPriceListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPriceListButtonActionPerformed

        ProductController controller = new ProductController();
        String from = NewPriceListDateFrom.getText();
        String to = NewPriceListDateTo.getText();
        StringBuilder logger = new StringBuilder();
        if (controller.CreatePriceList(from,to, logger)) {
            NewPriceListResult.setText(logger.toString());
        }else{
            NewPriceListResult.setText(logger.toString());
        }
    }//GEN-LAST:event_NewPriceListButtonActionPerformed

    private void SlopeTrafficButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlopeTrafficButton1ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "StationTrafficPanel" );
        changeCard( view, true );
    }//GEN-LAST:event_SlopeTrafficButton1ActionPerformed

    private void StationTrafficTableShowed(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_StationTrafficTableShowed
       
        
        List <Object []> traffic = SlopeController.getTrafficList(loginStatusMessage);
        if (traffic != null){
            DefaultTableModel model = (DefaultTableModel) StationTrafficTable.getModel();
            model.setRowCount(0);
            boolean tempOverload;
            for (int i = 0; i < traffic.size(); i++){
                Object[] row = traffic.get(i);
                if ((Long)row[1] > MAX_SLOPE_TRAFFIC)
                    tempOverload = true;
                else
                    tempOverload = false;
                
                model.addRow(new Object[]{row[0], row[1].toString(), tempOverload});
            }
        }   
    }//GEN-LAST:event_StationTrafficTableShowed

    private void ClientCardsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientCardsButton1ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "cashierPanel", CashierContainer, "ClientCardsPanel" );
        changeCard( view, true );
        RemoveCardPanelComponents( ClientCardsPanel );
        for( CardView c : cardViewList ) {
            c.DeleteView();
        }
        cardViewList.clear();
        DisplayCards(ClientCardsPanel, CashierController.GetSelectedUser());
    }//GEN-LAST:event_ClientCardsButton1ActionPerformed

    private void IDEditTextfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDEditTextfield2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDEditTextfield2ActionPerformed

    private void EditDetailsButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditDetailsButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditDetailsButton2ActionPerformed

    private void SaveDetailsButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDetailsButton2ActionPerformed
        if (!SessionController.IsUserLogged()) {
            ExitSession();
            return;
        }
        Users user = new Users();
        Addresses address = new Addresses();
        user.setLogin(LoginTextField2.getText());
        user.setName(NameTextField2.getText());
        user.setSurname(SurnameTextField2.getText());
        user.setDocumentnumber(DocumentTextField2.getText());
        user.setActive(userActiveCheckboxInAdminPanel.isSelected());
        address.setStreet(StreetTextField2.getText());
        address.setCity(CityTextField2.getText());
        address.setCountry(CountryTextField2.getText());
        user.setAddresses(address);
        int id = Integer.parseInt(IDEditTextfield2.getText());
        
        UserManagementAdminController controller = new UserManagementAdminController();
        String choosingRole = getSelectedButtonText(UserRoleChooseGroup);
        if (controller.Exist(LoginTextField2.getText())) {
            EditMessageLabel2.setText(MyAccountController.UpdateAccountDetails(user, id));
            controller.UpdateUser(LoginTextField2.getText(), choosingRole);            
        } else {
            EditMessageLabel2.setText("User does not exist!");
        }
    }//GEN-LAST:event_SaveDetailsButton2ActionPerformed

    private void CancelButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "addPriceListAdminPanel");
        changeCard( view, true );     
    }//GEN-LAST:event_jButton9ActionPerformed

    private void AddNewProductButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewProductButton1ActionPerformed
        ProductController controller = new ProductController();
        String newProductName = NewProductNameTextField1.getText();
        String newProductPrice = NewProductPriceTextField.getText();
        StringBuilder logger = new StringBuilder();
        if (controller.CreateProduct(newProductName,newProductPrice, logger)) {
            NewProductResult1.setText(logger.toString());
        }else{
            NewProductResult1.setText(logger.toString());
        }
    }//GEN-LAST:event_AddNewProductButton1ActionPerformed

    private void AddPriceListComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_AddPriceListComponentShown
            
    }//GEN-LAST:event_AddPriceListComponentShown

    private void NewPriceListDateFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPriceListDateFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewPriceListDateFromActionPerformed

    private void AdminContainerPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_AdminContainerPanelComponentShown

    }//GEN-LAST:event_AdminContainerPanelComponentShown

    private void AdminContainerPanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_AdminContainerPanelComponentAdded
   
    }//GEN-LAST:event_AdminContainerPanelComponentAdded

    private void AddPriceListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AddPriceListAncestorAdded

    }//GEN-LAST:event_AddPriceListAncestorAdded

    private void AdminMainPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AdminMainPanelAncestorAdded
             ProductController pd = new ProductController();
             pd.AddDefaultPriceListIfNotExist();
    }//GEN-LAST:event_AdminMainPanelAncestorAdded

    private void CashierChangeModeToAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashierChangeModeToAdminButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "adminMenuPanel");
        changeCard( view, true );
    }//GEN-LAST:event_CashierChangeModeToAdminButtonActionPerformed

    private void BuyPointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyPointsButtonActionPerformed
               
    }//GEN-LAST:event_BuyPointsButtonActionPerformed

    private void BuyAndPayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyAndPayButtonActionPerformed
        if (Integer.parseInt(pointsSum.getText()) != 0) {
            ViewSwitcher view = new ViewSwitcher(getContentPane(), "UserMainPanel", UserContainerPanel, "userChoosePaymentMethod");
            changeCard(view, true);
            buyPackagePointsMessage.setText("");
        } else {
            buyPackagePointsMessage.setText("Choose at least one package");
        }
    }//GEN-LAST:event_BuyAndPayButtonActionPerformed

    private void CashierRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashierRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CashierRadioActionPerformed

    private void NewAttractionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewAttractionButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AdminContainerPanel, "AttractionsEditAddPanel" );
        changeCard( view, true );
    }//GEN-LAST:event_NewAttractionButtonActionPerformed

    private void SearchAttractionTextFieldTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchAttractionTextFieldTyped
        FillAttractionList(SearchAttractionTextField.getText());
    }//GEN-LAST:event_SearchAttractionTextFieldTyped

    private void AttractionManagementAdminPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AttractionManagementAdminPanelAncestorAdded
        FillAttractionList("");
    }//GEN-LAST:event_AttractionManagementAdminPanelAncestorAdded

    private void ContactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "UserMainPanel", UserContainerPanel, "UserContactPanel" );
        changeCard( view, true );
    }//GEN-LAST:event_ContactButtonActionPerformed

    private void SlopeTrafficButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlopeTrafficButtonActionPerformed
        
        List <Object []> traffic = SlopeController.getTrafficList(loginStatusMessage);
        if (traffic != null){
            DefaultTableModel model = (DefaultTableModel) UserTrafficTable.getModel();
            model.setRowCount(0);
            boolean tempOverload;
            for (int i = 0; i < traffic.size(); i++){
                Object[] row = traffic.get(i);
                if ((Long)row[1] > MAX_SLOPE_TRAFFIC)
                    tempOverload = true;
                else
                    tempOverload = false;
                
                model.addRow(new Object[]{row[0], row[1].toString(), tempOverload});
            }
        }
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "UserMainPanel", UserContainerPanel, "card6");
        changeCard(view, true);
    }//GEN-LAST:event_SlopeTrafficButtonActionPerformed

    private void costSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costSumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costSumActionPerformed

    private void pointsSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsSumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pointsSumActionPerformed
    private void GatesManagementAdminPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_GatesManagementAdminPanelAncestorAdded
        FillTerminalList("");
    }//GEN-LAST:event_GatesManagementAdminPanelAncestorAdded

    private void SearchTerminalTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTerminalTextFieldKeyReleased
        FillTerminalList(SearchTerminalTextField.getText());
    }//GEN-LAST:event_SearchTerminalTextFieldKeyReleased

    private void CancelAddAttractionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAddAttractionButtonActionPerformed
        //ViewSwitcher view = new ViewSwitcher( getContentPane(), "adminPanelMain", AttractionManagementAdminPanel,  "AttractionListPanel");
        //changeCard( view, true );
        //changeCard(AttractionManagementAdminPanel, "AttractionListPanel", true);
        AdminPanelBackButtonActionPerformed( evt );
    }//GEN-LAST:event_CancelAddAttractionButtonActionPerformed

    private void ProductPriceListAddItemPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductPriceListAddItemPriceActionPerformed
        if (ProductPriceListPriceLists.getSelectedRow() < 0) {
            ProductPriceListResult.setText("SelectPriceList!");
            return;
        }
        if (ProductPriceListProducts.getSelectedRow() < 0) {
            ProductPriceListResult.setText("SelectProduct!");
            return;
        }
        
        String priceListID = ProductPriceListPriceLists.getValueAt(ProductPriceListPriceLists.getSelectedRow(), 0).toString();
        String productName= ProductPriceListProducts.getValueAt(ProductPriceListProducts.getSelectedRow(), 0).toString();
        ProductController controller = new ProductController();
        try{
            int price = Integer.parseInt(ProductPriceItemPriceField.getText());
            StringBuilder sb = new StringBuilder();
            controller.AddPriceItem((Pricelist)controller.GetPriceListsList(priceListID).get(0),
                                    (Product)controller.GetProductList(productName).get(0), 
                                    price,
                                    sb);
            RefestPriceItemsInList();
            ProductPriceListResult.setText(sb.toString());
        }catch(Exception e)
        {
            ProductPriceListResult.setText(e.getMessage());
        }

    }//GEN-LAST:event_ProductPriceListAddItemPriceActionPerformed

    private void ProductPriceListFindProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductPriceListFindProductKeyReleased
        DefaultTableModel model = (DefaultTableModel) ProductPriceListProducts.getModel();
        model.setRowCount(0);
        ProductController controller = new ProductController();

        List products = controller.GetProductList(ProductPriceListFindProduct.getText());
        if (products!=null) {
            for (Object productObj : products) {
                Product product = (Product)productObj;
                model.addRow(new Object[]{product.getName()});
            }
        }
    }//GEN-LAST:event_ProductPriceListFindProductKeyReleased

    private void AddProductToPriceListPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AddProductToPriceListPanelAncestorAdded
        DefaultTableModel model = (DefaultTableModel) ProductPriceListProducts.getModel();
        model.setRowCount(0);
        ProductPriceListProducts.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ProductController controller = new ProductController();

        List products = controller.GetProductList();
        if (products!=null) {
            for (Object productObj : products) {
                Product product = (Product)productObj;
                model.addRow(new Object[]{product.getName()});
            }
        }
    }//GEN-LAST:event_AddProductToPriceListPanelAncestorAdded

    private void ProductPriceListPriceListFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductPriceListPriceListFindKeyReleased
        DefaultTableModel model = (DefaultTableModel) ProductPriceListPriceLists.getModel();
        model.setRowCount(0);
        ProductController controller = new ProductController();

        List priceLists = controller.GetPriceListsList(ProductPriceListPriceListFind.getText());
        if (priceLists!=null) {
            for (Object priceListObj : priceLists) {
                Pricelist priceList = (Pricelist)priceListObj;
                model.addRow(new Object[]{priceList.getPricelistid(),priceList.getStartdate(),priceList.getEnddate()});
            }
        }
    }//GEN-LAST:event_ProductPriceListPriceListFindKeyReleased

    private void ProductPriceListPriceListsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ProductPriceListPriceListsAncestorAdded
        DefaultTableModel model = (DefaultTableModel) ProductPriceListPriceLists.getModel();
        model.setRowCount(0);
        ProductPriceListPriceLists.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ProductController controller = new ProductController();

        List priceLists = controller.GetPriceListsList();
        if (priceLists!=null) {
            for (Object priceListObj : priceLists) {
                Pricelist priceList = (Pricelist)priceListObj;
                  model.addRow(new Object[]{priceList.getPricelistid(),priceList.getStartdate(),priceList.getEnddate()});
            }
        }
    }//GEN-LAST:event_ProductPriceListPriceListsAncestorAdded

    private void RefestPriceItemsInList()
    {
        DefaultTableModel model = (DefaultTableModel) ProductPriceListItemPrices.getModel();
        model.setRowCount(0);
        if (ProductPriceListPriceLists.getSelectedRow() > -1) {
            String priceListID = ProductPriceListPriceLists.getValueAt(ProductPriceListPriceLists.getSelectedRow(), 0).toString();

            ProductController controller = new ProductController();

            List itemPrices = controller.GetPriceItems(priceListID);
            if (itemPrices!=null) {
                for (Object priceItemObj : itemPrices) {
                    Itemprice itemPrice = (Itemprice)priceItemObj;
                      model.addRow(new Object[]{itemPrice.getProduct().getName(),itemPrice.getPrice()});
                }
            }
        }
    }
    
    private void ProductPriceListPriceListsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductPriceListPriceListsMouseClicked
        RefestPriceItemsInList();
    }//GEN-LAST:event_ProductPriceListPriceListsMouseClicked

    private void PriceListFindTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PriceListFindTextKeyReleased
        RefreshPriceList(PriceListFindText.getText());
    }//GEN-LAST:event_PriceListFindTextKeyReleased

    private void RefreshPriceList(String text)
    {
        DefaultTableModel model = (DefaultTableModel) PriceLists.getModel();
        model.setRowCount(0);
        ProductController controller = new ProductController();

        List priceLists = controller.GetPriceListsList(text);
        if (priceLists!=null) {
            for (Object priceListObj : priceLists) {
                Pricelist priceList = (Pricelist)priceListObj;
                model.addRow(new Object[]{priceList.getPricelistid(),priceList.getStartdate(),priceList.getEnddate()});
            }
        }
    }
    
    private void ProductFindTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductFindTextKeyTyped

    }//GEN-LAST:event_ProductFindTextKeyTyped

    private void ProductFindTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductFindTextKeyReleased
        RefreshProductsList(ProductFindText.getText());
    }//GEN-LAST:event_ProductFindTextKeyReleased

    private void RefreshProductsList(String text)
    {
                DefaultTableModel model = (DefaultTableModel) ProductList.getModel();
        model.setRowCount(0);
        ProductController controller = new ProductController();

        List products = controller.GetProductList(text);
        if (products!=null) {
            for (Object productObj : products) {
                Product product = (Product)productObj;
                model.addRow(new Object[]{product.getProductid(),product.getName()});
            }
        }
    }
    
    private void ProductFindTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ProductFindTextInputMethodTextChanged

    }//GEN-LAST:event_ProductFindTextInputMethodTextChanged

    private void BuyAndPayButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyAndPayButton1ActionPerformed
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "UserMainPanel", UserContainerPanel, "userBuyPoints");
        changeCard(view, true);
        //changeCard(UserContainerPanel, "userBuyPoints", true);
    }//GEN-LAST:event_BuyAndPayButton1ActionPerformed

    private void BuyAndPayButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyAndPayButton2ActionPerformed
        String loggedUser = SessionController.GetUserLogged();
        int clientId = ClientController.GetClientIDFromLogin(loggedUser);
        
        ClientController.UpdateClientPoints(loggedUser, ClientController.GetClientPoints(clientId)+ Integer.parseInt(pointsSum.getText()));
        
        AvailablePointsTextField.setText(Integer.toString(ClientController.GetClientPoints(clientId)));
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "UserMainPanel", UserContainerPanel, "userMyCards");
        changeCard(view, true);
        //changeCard(UserContainerPanel, "userMyCards", true);
    }//GEN-LAST:event_BuyAndPayButton2ActionPerformed

    private void BuyAndPayButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyAndPayButton3ActionPerformed
        BuyAndPayButton2ActionPerformed(evt);
    }//GEN-LAST:event_BuyAndPayButton3ActionPerformed

    private void BuyAndPayButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyAndPayButton4ActionPerformed
        BuyAndPayButton2ActionPerformed(evt);
    }//GEN-LAST:event_BuyAndPayButton4ActionPerformed

    private void buyPointsPackageBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyPointsPackageBackButtonActionPerformed
        ViewSwitcher view = new ViewSwitcher(getContentPane(), "UserMainPanel", UserContainerPanel, "userMyCards");
        changeCard(view, true);
        //changeCard(UserContainerPanel, "userMyCards", true);
    }//GEN-LAST:event_buyPointsPackageBackButtonActionPerformed

    private void CurrentPriceFindTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CurrentPriceFindTextKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentPriceFindTextKeyReleased

    private void CurrentPricesTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_CurrentPricesTableAncestorAdded

    }//GEN-LAST:event_CurrentPricesTableAncestorAdded

    
    private void RefreshCurrentPrices()
    {
                ProductController pd = new ProductController();
        List products = pd.GetProductList();
        
        DefaultTableModel model = (DefaultTableModel) CurrentPricesTable.getModel();
        model.setRowCount(0);

        for (Object productObject : products) {
            Product product = (Product)productObject;
            int price = pd.GetActualProductPrice(product);
            model.addRow(new Object[]{ product.getProductid(),product.getName(), price });
        }
    }
    
    private void UserSearchInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSearchInputTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserSearchInputTextFieldActionPerformed

    private void LoginEditTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginEditTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginEditTextfieldActionPerformed

    private void LoginEditTextfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginEditTextfield2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginEditTextfield2ActionPerformed

    private void SearchUserTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchUserTextFieldKeyTyped
        DefaultTableModel model = (DefaultTableModel) UserListTable.getModel();
        model.setRowCount(0);
        
        CashierController cc = new CashierController();
        UserManagementAdminController ac = new UserManagementAdminController();
       List results;
        if (!SearchUserTextField.getText().equals("")) {
            results = cc.GetUsersList(SearchUserTextField.getText());    
        }else{
            results = ac.GetUsers(); 
        }
        
        for (Object result : results) {
            Users user = (Users)result;           
            model.addRow(new Object[]{ user.getUserid(), user.getName(), user.getSurname(), ac.GetUserRole(user.getLogin()) });
        }
    }//GEN-LAST:event_SearchUserTextFieldKeyTyped

    private void RefreshAdminManagementUsersList()
    {
        SearchUserTextField.setText("");
        DefaultTableModel model = (DefaultTableModel) UserListTable.getModel();
        model.setRowCount(0);
        
        CashierController cc = new CashierController();
        UserManagementAdminController ac = new UserManagementAdminController();
        
        List results = ac.GetUsers();
        for (Object result : results) {
            Users user = (Users)result;  
            model.addRow(new Object[]{ user.getUserid(), user.getName(), user.getSurname(), ac.GetUserRole(user.getLogin()) });
        }
    }
    
    private void SearchProductTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchProductTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchProductTextFieldActionPerformed

    private void SearchAttractionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchAttractionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchAttractionTextFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ViewSwitcher view = new ViewSwitcher();
        view.mainContainer = getContentPane();
        view.containerName = "symulator";
        changeCard( view, false );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SymulatorBuyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymulatorBuyButtonActionPerformed
        Symulator sm = new Symulator();
        
        if (SymulatorProductList.getSelectedRow() > -1) {
            int[] productsID = SymulatorProductList.getSelectedRows();
            List<Integer> productsToBuy = new ArrayList<Integer>();
            int sum =0;
            for (int i : productsID) {
                productsToBuy.add(Integer.parseInt(SymulatorProductList.getValueAt(i, 0).toString()));
                int price = Integer.parseInt(SymulatorProductList.getValueAt(i, 2).toString());
                sum+=price;
            }
             if (SymulatorCardsList.getSelectedRow() > -1) {
                 if (SymulatorTerminalList.getSelectedRow() > -1) {
                  int cardID = Integer.parseInt(SymulatorCardsList.getValueAt(SymulatorCardsList.getSelectedRow(), 0).toString());
                  int terminalID = Integer.parseInt(SymulatorTerminalList.getValueAt(SymulatorTerminalList.getSelectedRow(), 0).toString());
                  StringBuilder logger = new StringBuilder();
                  sm.BuyProductsFor(cardID,terminalID, sum, productsToBuy,logger);
                  SymulatorResultLabel.setText(logger.toString());
                 }else{
                 SymulatorResultLabel.setText("Select terminal!");
                  }

             }else{
                 SymulatorResultLabel.setText("Select card!");
             }
        }else{
            SymulatorResultLabel.setText("Select product to buy");
        }
        
        
        RefreshSimulatorCardsList();
    }//GEN-LAST:event_SymulatorBuyButtonActionPerformed

    private void SymulatorCardsListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_SymulatorCardsListAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_SymulatorCardsListAncestorAdded

    private void SymulatorCardsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SymulatorCardsListMouseClicked

    }//GEN-LAST:event_SymulatorCardsListMouseClicked

    private void SymulatorAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_SymulatorAncestorAdded
        RefreshSimulator();
    }//GEN-LAST:event_SymulatorAncestorAdded

    private void RefreshSimulator()
    {
        Symulator sm = new Symulator();
        
        DefaultTableModel model = (DefaultTableModel) SymulatorCardsList.getModel();
        model.setRowCount(0);
        
        List cards = sm.GetCards();
        for (Object cardObj : cards) {
            Cards card = (Cards)cardObj;           
             model.addRow(new Object[]{ card.getCardid(),card.getPoints()});
        }
        
        model = (DefaultTableModel) SymulatorTerminalList.getModel();
        model.setRowCount(0);
        
        List terminals = sm.GetTerminals();
        for (Object terminalObj : terminals) {
            Terminal terminal = (Terminal)terminalObj;           
             model.addRow(new Object[]{ terminal.getTerminalid(),terminal.getAttraction().getName()});
        } 
    }
    
    private void RefreshSimulatorCardsList()
    {
         Symulator sm = new Symulator();
        
        DefaultTableModel model = (DefaultTableModel) SymulatorCardsList.getModel();
        model.setRowCount(0);
        
        List cards = sm.GetCards();
        for (Object cardObj : cards) {
            Cards card = (Cards)cardObj;           
             model.addRow(new Object[]{ card.getCardid(),card.getPoints()});
        }
    }
    
    private void SymulatorTerminalListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SymulatorTerminalListMouseClicked

        DefaultTableModel model = (DefaultTableModel) SymulatorProductList.getModel();
        model.setRowCount(0);
        if (SymulatorTerminalList.getSelectedRow() > -1) {
            String terminalID = SymulatorTerminalList.getValueAt(SymulatorTerminalList.getSelectedRow(), 0).toString();

            ProductController controller = new ProductController();
            List productsInTerminal = controller.GetProductsFromTerminal(Integer.parseInt(terminalID));
            if (productsInTerminal!=null) {
                for (Object productObj : productsInTerminal) {
                    Productitem productItem = (Productitem)productObj;
                    int currentPrice = controller.GetActualProductPrice(productItem.getProduct());
                      model.addRow(new Object[]{productItem.getProduct().getProductid(), productItem.getProduct().getName(),currentPrice});
                }
            }
        }
    }//GEN-LAST:event_SymulatorTerminalListMouseClicked

    private void AddAttractionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAttractionButtonActionPerformed
        String atrName = AttractionNameTextField.getText();
        String attrType = (String)AttractionTypeComboBox.getModel().getSelectedItem();
        AttractionController ac = new AttractionController();
        StringBuilder message = new StringBuilder();
        if( atrName != null && attrType != null ) {
            ac.addAttraction(atrName, attrType, message);
        }
        AddAttractionMessage.setText(message.toString());
    }//GEN-LAST:event_AddAttractionButtonActionPerformed

    private void CancelAddTerminalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAddTerminalButton1ActionPerformed
        AdminPanelBackButtonActionPerformed( evt );
    }//GEN-LAST:event_CancelAddTerminalButton1ActionPerformed

    private void AddTerminalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTerminalButton1ActionPerformed
        String lockTime = (String)LockTimeComboBox2.getModel().getSelectedItem();
        if( lockTime != null && lockTime.length() > 0 ) {
            lockTime = lockTime.substring(0, lockTime.length()-1);
        }
        String attraction = ChosenAttractionLabel.getText();
        TerminalController tc = new TerminalController();
        int id = tc.GetAttractionID(attraction);
        StringBuilder message = new StringBuilder();
        if( lockTime != null ) {
            tc.addTerminal(id, Integer.decode(lockTime), message);
            AddTerminalMessageLabel.setText(message.toString());
        }
    }//GEN-LAST:event_AddTerminalButton1ActionPerformed

    private void AttractionTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttractionTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AttractionTypeComboBoxActionPerformed

    private void RefreshGatesProductsPanel()
    {
        GateProductsController sm = new GateProductsController();
        
        DefaultTableModel model = (DefaultTableModel) GatesProductsGatesList.getModel();
        model.setRowCount(0);
        
        List terminals = sm.GetTerminals();
        for (Object terminalObj : terminals) {
            Terminal terminal = (Terminal)terminalObj;           
             model.addRow(new Object[]{ terminal.getTerminalid(), terminal.getAttraction().getName()});
        } 

        model = (DefaultTableModel) GatesProductsAwailableProducts.getModel();
        model.setRowCount(0);
        
        List products = sm.GetProducts();
        for (Object productObj : products) {
            Product product = (Product)productObj;           
             model.addRow(new Object[]{ product.getProductid(),product.getName()});
        } 

    }


    private void GatesProductRefreshGateProductsList()
    {
                DefaultTableModel model = (DefaultTableModel) GatesProductsGatesProductList.getModel();
        model.setRowCount(0);
        if (GatesProductsGatesList.getSelectedRow() > -1) {
            String terminalID = GatesProductsGatesList.getValueAt(GatesProductsGatesList.getSelectedRow(), 0).toString();

            ProductController controller = new ProductController();
            List productsInTerminal = controller.GetProductsFromTerminal(Integer.parseInt(terminalID));
            if (productsInTerminal!=null) {
                for (Object productObj : productsInTerminal) {
                    Productitem productItem = (Productitem)productObj;
                    int currentPrice = controller.GetActualProductPrice(productItem.getProduct());
                      model.addRow(new Object[]{productItem.getProduct().getProductid(), productItem.getProduct().getName(),currentPrice});
                }
            }
        }
    }

    
    private void UserMyCardsPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_UserMyCardsPanelAncestorAdded

    }//GEN-LAST:event_UserMyCardsPanelAncestorAdded

    private void PrintCardDataOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintCardDataOkButtonActionPerformed
        PrintCardDataPanel.setVisible(false);
    }//GEN-LAST:event_PrintCardDataOkButtonActionPerformed

    private void PrintCardDataOkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintCardDataOkButton1ActionPerformed
        PrintCardDataPanel1.setVisible(false);
    }//GEN-LAST:event_PrintCardDataOkButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "AdminContainerPanel", AdminContainerPanel, "gatesProductsPanel" );
        changeCard(view, true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void GatesProductsAddFromGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GatesProductsAddFromGateActionPerformed
                   if (GatesProductsGatesList.getSelectedRow() > -1) {
                int terminalID = Integer.parseInt(GatesProductsGatesList.getValueAt(GatesProductsGatesList.getSelectedRow(), 0).toString());
                if (GatesProductsAwailableProducts.getSelectedRow() > -1) {
                    int productID = Integer.parseInt(GatesProductsAwailableProducts.getValueAt(GatesProductsAwailableProducts.getSelectedRow(), 0).toString());

                    GateProductsController controller = new GateProductsController();
                    StringBuilder logger = new StringBuilder();
                    controller.AddProductToTerminal(terminalID,productID,logger);
                    GatesProductsResultLabel.setText(logger.toString());
                    
                }else{
                    GatesProductsResultLabel.setText("Select product!");
                }
            }else{
                GatesProductsResultLabel.setText("Select terminal!");
            }
            GatesProductRefreshGateProductsList();
    }//GEN-LAST:event_GatesProductsAddFromGateActionPerformed

    private void GatesProductsGatesProductListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GatesProductsGatesProductListMouseClicked

    }//GEN-LAST:event_GatesProductsGatesProductListMouseClicked

    private void GatesProductsGatesListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_GatesProductsGatesListAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_GatesProductsGatesListAncestorAdded

    private void GatesProductsGatesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GatesProductsGatesListMouseClicked
         GatesProductRefreshGateProductsList();
    }//GEN-LAST:event_GatesProductsGatesListMouseClicked

    private void GateProductsPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_GateProductsPanelAncestorAdded
        RefreshGatesProductsPanel();
    }//GEN-LAST:event_GateProductsPanelAncestorAdded

    private void GatesProductsRemoveFromGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GatesProductsRemoveFromGateActionPerformed
                    if (GatesProductsGatesList.getSelectedRow() > -1) {
                int terminalID = Integer.parseInt(GatesProductsGatesList.getValueAt(GatesProductsGatesList.getSelectedRow(), 0).toString());
                if (GatesProductsGatesProductList.getSelectedRow() > -1) {
                    int productID = Integer.parseInt(GatesProductsGatesProductList.getValueAt(GatesProductsGatesProductList.getSelectedRow(), 0).toString());

                    GateProductsController controller = new GateProductsController();
                    StringBuilder logger = new StringBuilder();
                    controller.RemoveProductFromTerminal(terminalID,productID,logger);
                    GatesProductsResultLabel.setText(logger.toString());
                    
                }else{
                    GatesProductsResultLabel.setText("Select product!");
                }
            }else{
                GatesProductsResultLabel.setText("Select terminal!");
            }
            GatesProductRefreshGateProductsList();
    }//GEN-LAST:event_GatesProductsRemoveFromGateActionPerformed

    private void UserListTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_UserListTableAncestorAdded
       RefreshAdminManagementUsersList();
    }//GEN-LAST:event_UserListTableAncestorAdded

    private void ProductsManagmentAdminPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ProductsManagmentAdminPanelAncestorAdded
        RefreshProductsList("");
        RefreshPriceList("");
        RefreshCurrentPrices();
    }//GEN-LAST:event_ProductsManagmentAdminPanelAncestorAdded

    private void userActiveCheckboxInAdminPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActiveCheckboxInAdminPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActiveCheckboxInAdminPanelActionPerformed

    private void CashierHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashierHelpButtonActionPerformed
        new HelpWindow("CashierPanelHelp");
    }//GEN-LAST:event_CashierHelpButtonActionPerformed

    private void LoginAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_LoginAncestorAdded
        //Set overlapping panels visibility to false
        GetPrintCardPanel().setVisible(false);
        GetPrintCardPanel1().setVisible(false);
    }//GEN-LAST:event_LoginAncestorAdded

    private void LoginPageHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginPageHelpButtonActionPerformed
        new HelpWindow("LoginPageHelp");
    }//GEN-LAST:event_LoginPageHelpButtonActionPerformed

    private void RegistrationPageHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrationPageHelpButtonActionPerformed
        new HelpWindow("RegistrationPageHelp");
    }//GEN-LAST:event_RegistrationPageHelpButtonActionPerformed

    private void UserPanelMyCardsHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserPanelMyCardsHelpButtonActionPerformed
        new HelpWindow("CardPanelHelp");
    }//GEN-LAST:event_UserPanelMyCardsHelpButtonActionPerformed

    private void AdminMainPanelHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminMainPanelHelpButtonActionPerformed
        new HelpWindow("AdminMainPanelHelp");
    }//GEN-LAST:event_AdminMainPanelHelpButtonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new HelpWindow("AdminUsersPanelHelp");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void AdminUserEditHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminUserEditHelpButtonActionPerformed
        new HelpWindow("AdminUserEditPanelHelp");
    }//GEN-LAST:event_AdminUserEditHelpButtonActionPerformed

    private void AdminProductPanelHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminProductPanelHelpButtonActionPerformed
        new HelpWindow("AdminPricelistPanelHelp");
    }//GEN-LAST:event_AdminProductPanelHelpButtonActionPerformed

    private void SymulatotHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymulatotHelpActionPerformed
        new HelpWindow("SymulatorHelp");
    }//GEN-LAST:event_SymulatotHelpActionPerformed

    private void AttractionsAndGatesHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttractionsAndGatesHelpActionPerformed
        new HelpWindow("AttractionsHelp");
    }//GEN-LAST:event_AttractionsAndGatesHelpActionPerformed

    private void GateProductsHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GateProductsHelpActionPerformed
        new HelpWindow("GateProductsHelp");
    }//GEN-LAST:event_GateProductsHelpActionPerformed

    private void AttractionsAndGatesHelp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttractionsAndGatesHelp2ActionPerformed
       new HelpWindow("TerminalsHelp"); 
    }//GEN-LAST:event_AttractionsAndGatesHelp2ActionPerformed

    private void AdminAddProductHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAddProductHelpButtonActionPerformed
       new HelpWindow("AdminAddProductHelp");
    }//GEN-LAST:event_AdminAddProductHelpButtonActionPerformed

    private void AdminEditProductHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminEditProductHelpButtonActionPerformed
       new HelpWindow("AdminAddProductHelp");
    }//GEN-LAST:event_AdminEditProductHelpButtonActionPerformed

    private void AdminAddProductToPricelistHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAddProductToPricelistHelpButtonActionPerformed
       new HelpWindow("AdminAddProductToPricelistHelp");
    }//GEN-LAST:event_AdminAddProductToPricelistHelpButtonActionPerformed

    private void AdminAddPricelistHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAddPricelistHelpButtonActionPerformed
       new HelpWindow("AdminAddPricelistHelp");
    }//GEN-LAST:event_AdminAddPricelistHelpButtonActionPerformed

    private void AdminSlopeManagementHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminSlopeManagementHelpButtonActionPerformed
       new HelpWindow("AdminSlopeManagementHelp");
    }//GEN-LAST:event_AdminSlopeManagementHelpButtonActionPerformed

    private void AdminAttractionsEditHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAttractionsEditHelpButtonActionPerformed
       new HelpWindow("AdminAttractionsEditHelp");
    }//GEN-LAST:event_AdminAttractionsEditHelpButtonActionPerformed

    private void AdminTerminalsEditHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminTerminalsEditHelpButtonActionPerformed
       new HelpWindow("AdminTerminalsEditHelp");
    }//GEN-LAST:event_AdminTerminalsEditHelpButtonActionPerformed

    private void UserBuyPointsHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserBuyPointsHelpButtonActionPerformed
       new HelpWindow("UserBuyPointsHelp");
    }//GEN-LAST:event_UserBuyPointsHelpButtonActionPerformed

    private void FillTerminalList(String name)
    {  
        TerminalController tc = new TerminalController();
        
        List results = tc.GetTerminalList(name);

        DefaultTableModel model = (DefaultTableModel) TerminalListTable.getModel();
        model.setRowCount(0);
        
        for (Object result : results) {
            Terminal terminal = (Terminal)result;           
             model.addRow(new Object[]{ terminal.getTerminalid(),terminal.getAttraction().getName(), terminal.getLocktime() });
        }
    }
    
    private void FillAttractionList(String name)
    {
        TerminalController tc = new TerminalController();
        
        List results = tc.GetAttractionList(name);
        
        DefaultTableModel model = (DefaultTableModel) AttractionListTable2.getModel();
        model.setRowCount(0);
        
        for (Object result : results) {
            Attraction attraction = (Attraction)result;           
             model.addRow(new Object[]{ attraction.getAttractionid(),attraction.getName(), attraction.getType() });
        }
    }
    
    private void ExitSession() {
        CardLayout loginPaneLayout = (CardLayout) getContentPane().getLayout();
        PasswordTextField.setText("");
        MessageLabel.setText("Sesja wygasła");
        loginPaneLayout.show(getContentPane(), "login");
    }
    
    private void FindUserButtonActionPerformed(java.awt.event.ActionEvent evt) {
        
    }

    private void MyCardsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        RemoveCardPanelComponents( UserMyCardsPanel );
        for( CardView c : cardViewList ) {
            c.DeleteView();
        }
        cardViewList.clear();
        DisplayCards(UserMyCardsPanel, SessionController.GetUserLogged());
        ViewSwitcher view = new ViewSwitcher( getContentPane(), "UserMainPanel", UserContainerPanel, "userMyCards" );
        changeCard( view, true );
        //changeCard(UserContainerPanel, "userMyCards", true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    public void AddKeyEventHandling(KeyboardEventHandler h) {
        LoginTextField.addKeyListener(h);
        PasswordTextField.addKeyListener(h);
        BackButton.addKeyListener(h);
        RegisterButton.addKeyListener(h);
    }
    
    public JPanel GetPrintCardPanel()
    {
        return PrintCardDataPanel;
    }
    
      public JPanel GetPrintCardPanel1()
    {
        return PrintCardDataPanel1;
    }
    
    public JTextArea GetPrintCardText()
    {
        return PrintCardDataText;
    }
    
       public JTextArea GetPrintCardText1()
    {
        return PrintCardDataText1;
    }
    
    private void fillPackagesScrollPanel(){
        pointsPackagesListPane.removeAll(); // Clearing panel
        
        ProductController productController = new ProductController();
        
        List packages = productController.GetProductList("pointsPackage");
        
        for (Object packageObj : packages){
            Product product = (Product) packageObj;
            String valueStr = product.getName().replace("pointsPackage", "");

            try {
                final int packageValue = Integer.parseInt(valueStr);
                final int packagePrice = productController.GetActualProductPrice(product);
                if (packageValue > 0 && packagePrice > 0) {
                    JCheckBox checkBox = new JCheckBox(Integer.toString(packageValue) + " pkt. - "
                            + Integer.toString(packagePrice) + " zł");
                    
                    checkBox.addItemListener(new ItemListener() {
                        @Override
                        public void itemStateChanged(ItemEvent e) {
                            if (e.getStateChange() == ItemEvent.SELECTED){
                                pointsSum.setText( Integer.toString( Integer.parseInt(pointsSum.getText()) + packageValue) );
                                costSum.setText( Integer.toString( Integer.parseInt(costSum.getText()) + packagePrice) );
                            } else {
                                pointsSum.setText( Integer.toString( Integer.parseInt(pointsSum.getText()) - packageValue) );
                                costSum.setText( Integer.toString( Integer.parseInt(costSum.getText()) - packagePrice) );
                            }
                        }
                    });

                    JLabel priceLabel = new JLabel(Integer.toString(packagePrice));
                    priceLabel.setVisible(false);
                    checkBox.add(priceLabel);

                    pointsPackagesListPane.add(checkBox);
                } else {
                    System.out.println("Pakiet punktów " + product.getName() + " posiada nieprawiłową liczbę punktów lub cenę.");
                    JLabel errLabel = new JLabel("Nie zdefiniowano żadnych aktualnych pakietów do kupienia. Skontaktuj się za administratorem.");
                    pointsPackagesListPane.add(errLabel);
                }
            } catch (NumberFormatException e) {
                System.out.println(e.getMessage());
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ActionInfoLabel;
    private javax.swing.JLabel ActiveLabelMyAccount;
    private javax.swing.JTextField ActualizePriceTextField;
    private javax.swing.JButton ActualizeProductButton;
    private javax.swing.JTextField ActualizeProductNameText;
    private javax.swing.JButton AddAttractionButton;
    private javax.swing.JLabel AddAttractionMessage;
    private javax.swing.JButton AddNewProductButton1;
    private javax.swing.JPanel AddPriceList;
    private javax.swing.JPanel AddProductPanel;
    private javax.swing.JPanel AddProductToPriceListPanel;
    private javax.swing.JButton AddTerminalButton1;
    private javax.swing.JLabel AddTerminalMessageLabel;
    private javax.swing.JButton AdminAddPricelistHelpButton;
    private javax.swing.JButton AdminAddProductHelpButton;
    private javax.swing.JButton AdminAddProductToPricelistHelpButton;
    private javax.swing.JButton AdminAttractionsEditHelpButton;
    private javax.swing.JLabel AdminBackgroundLabel;
    private javax.swing.JPanel AdminContainerPanel;
    private javax.swing.JButton AdminEditProductHelpButton;
    private javax.swing.JButton AdminLogoutButton;
    private javax.swing.JPanel AdminMainPanel;
    private javax.swing.JButton AdminMainPanelHelpButton;
    private javax.swing.JPanel AdminMenuPanel;
    private javax.swing.JButton AdminMyAccountButton;
    private javax.swing.JButton AdminPanelBackButton;
    private javax.swing.JButton AdminProductPanelHelpButton;
    private javax.swing.JRadioButton AdminRadio;
    private javax.swing.JButton AdminSlopeManagementHelpButton;
    private javax.swing.JButton AdminTerminalsEditHelpButton;
    private javax.swing.JButton AdminUserEditHelpButton;
    private javax.swing.JLabel AdminViewTitleLabel;
    private javax.swing.JPanel AttractionListPanel;
    private javax.swing.JTable AttractionListTable2;
    private javax.swing.JPanel AttractionManagementAdminPanel;
    private javax.swing.JTextField AttractionNameTextField;
    private javax.swing.JScrollPane AttractionTable;
    private javax.swing.JComboBox AttractionTypeComboBox;
    private javax.swing.JLabel AttractionTypeLabel;
    private javax.swing.JButton AttractionsAndGatesHelp;
    private javax.swing.JButton AttractionsAndGatesHelp2;
    private javax.swing.JTabbedPane AttractionsAndGatesPanel;
    private javax.swing.JPanel AttractionsEditAddPanel;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel BackgroundImageLabel;
    private javax.swing.JLabel BackgroundImageLabel1;
    private javax.swing.JButton BuyAndPayButton;
    private javax.swing.JButton BuyAndPayButton1;
    private javax.swing.JButton BuyAndPayButton2;
    private javax.swing.JButton BuyAndPayButton3;
    private javax.swing.JButton BuyAndPayButton4;
    private javax.swing.JButton CancelAddAttractionButton;
    private javax.swing.JButton CancelAddTerminalButton1;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CancelButton1;
    private javax.swing.JButton CancelButton2;
    private javax.swing.JButton CardScanButton;
    private javax.swing.JTextField CardScanStatusTextField;
    private javax.swing.JButton CashierChangeModeToAdminButton;
    private javax.swing.JPanel CashierContainer;
    private javax.swing.JButton CashierHelpButton;
    private javax.swing.JButton CashierModeButton;
    private javax.swing.JPanel CashierPanel;
    private javax.swing.JRadioButton CashierRadio;
    private javax.swing.JLabel ChosenAttractionLabel;
    private javax.swing.JTextField City;
    private javax.swing.JLabel CityEditLabel;
    private javax.swing.JLabel CityEditLabel1;
    private javax.swing.JLabel CityEditLabel2;
    private javax.swing.JTextField CityEditTextfield;
    private javax.swing.JTextField CityEditTextfield1;
    private javax.swing.JTextField CityEditTextfield2;
    private javax.swing.JTextField CityTextField2;
    private javax.swing.JPanel ClientAccountEditPanel;
    private javax.swing.JButton ClientCardsButton1;
    private javax.swing.JPanel ClientCardsPanel;
    private javax.swing.JButton ClientModeButton;
    private javax.swing.JButton ClientModeButton1;
    private javax.swing.JButton ContactButton;
    private javax.swing.JButton ContactButton3;
    private javax.swing.JPanel ContactPanel;
    private javax.swing.JTextField Country;
    private javax.swing.JLabel CountryEditLabel1;
    private javax.swing.JLabel CountryEditLabel2;
    private javax.swing.JLabel CountryEditLabel3;
    private javax.swing.JLabel CountryEditLabel4;
    private javax.swing.JTextField CountryEditTextfield;
    private javax.swing.JTextField CountryEditTextfield1;
    private javax.swing.JTextField CountryEditTextfield2;
    private javax.swing.JTextField CountryTextField2;
    private javax.swing.JLabel CreateAccountLink;
    private javax.swing.JTextField CurrentPriceFindText;
    private javax.swing.JTable CurrentPricesTable;
    private javax.swing.JTextField DocumentEditTextfield;
    private javax.swing.JTextField DocumentEditTextfield1;
    private javax.swing.JTextField DocumentEditTextfield2;
    private javax.swing.JTextField DocumentNumber;
    private javax.swing.JTextField DocumentTextField2;
    private javax.swing.JButton EditClientButton;
    private javax.swing.JButton EditDetailsButton;
    private javax.swing.JButton EditDetailsButton2;
    private javax.swing.JLabel EditLoginLabel;
    private javax.swing.JLabel EditLoginLabel1;
    private javax.swing.JLabel EditLoginLabel2;
    private javax.swing.JLabel EditMessageLabel;
    private javax.swing.JLabel EditMessageLabel1;
    private javax.swing.JLabel EditMessageLabel2;
    private javax.swing.JLabel EditPasswordLabel;
    private javax.swing.JLabel EditPasswordLabel1;
    private javax.swing.JLabel EditPasswordLabel2;
    private javax.swing.JLabel EditPasswordLabel3;
    private javax.swing.JButton EditProductButton;
    private javax.swing.JPanel EditProductPanel;
    private javax.swing.JPanel EditUserAdmintPanel;
    private javax.swing.JButton EditUserButton;
    private javax.swing.JButton FindAttractionButton;
    private javax.swing.JButton FindProductButton;
    private javax.swing.JButton FindTerminalButton;
    private javax.swing.JButton FindUserButton;
    private javax.swing.JButton GateProductsHelp;
    private javax.swing.JPanel GateProductsPanel;
    private javax.swing.JButton GatesButton;
    private javax.swing.JPanel GatesManagementAdminPanel;
    private javax.swing.JButton GatesProductsAddFromGate;
    private javax.swing.JTable GatesProductsAwailableProducts;
    private javax.swing.JTable GatesProductsGatesList;
    private javax.swing.JTable GatesProductsGatesProductList;
    private javax.swing.JButton GatesProductsRemoveFromGate;
    private javax.swing.JLabel GatesProductsResultLabel;
    private javax.swing.JLabel IDEditLabel;
    private javax.swing.JLabel IDEditLabel2;
    private javax.swing.JTextField IDEditTextfield;
    private javax.swing.JTextField IDEditTextfield2;
    private javax.swing.JComboBox LockTimeComboBox2;
    private javax.swing.JLabel LockTimeLabel1;
    private javax.swing.JPanel Login;
    private javax.swing.JButton LoginButton;
    private javax.swing.JTextField LoginEditTextfield;
    private javax.swing.JTextField LoginEditTextfield1;
    private javax.swing.JTextField LoginEditTextfield2;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JButton LoginPageHelpButton;
    private javax.swing.JTextField LoginTextField;
    private javax.swing.JTextField LoginTextField1;
    private javax.swing.JTextField LoginTextField2;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JLabel MessageLabel;
    private javax.swing.JLabel MyAccountLabel1;
    private javax.swing.JLabel MyAccountLabel2;
    private javax.swing.JPanel MyAccountPanel;
    private javax.swing.JButton MyCardsButton;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel NameEditLabel;
    private javax.swing.JLabel NameEditLabel1;
    private javax.swing.JLabel NameEditLabel2;
    private javax.swing.JTextField NameEditTextfield;
    private javax.swing.JTextField NameEditTextfield1;
    private javax.swing.JTextField NameEditTextfield2;
    private javax.swing.JTextField NameTextField2;
    private javax.swing.JButton NewAccountButton;
    private javax.swing.JButton NewAttractionButton;
    private javax.swing.JPanel NewClientAccountPanel;
    private javax.swing.JButton NewPriceListButton;
    private javax.swing.JTextField NewPriceListDateFrom;
    private javax.swing.JTextField NewPriceListDateTo;
    private javax.swing.JLabel NewPriceListResult;
    private javax.swing.JButton NewProductButton;
    private javax.swing.JTextField NewProductNameTextField1;
    private javax.swing.JTextField NewProductPriceTextField;
    private javax.swing.JLabel NewProductResult1;
    private javax.swing.JButton NewTerminalButton;
    private javax.swing.JPasswordField Password;
    private javax.swing.JTextField PasswordEditTextfield;
    private javax.swing.JTextField PasswordEditTextfield1;
    private javax.swing.JTextField PasswordEditTextfield2;
    private javax.swing.JTextField PasswordEditTextfield3;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordTextField;
    private javax.swing.JButton PriceListButton;
    private javax.swing.JTextField PriceListFindText;
    private javax.swing.JLabel PriceListFromLabel;
    private javax.swing.JPanel PriceListManagmentAdmintPanel;
    private javax.swing.JTable PriceListTable;
    private javax.swing.JLabel PriceListToLabel;
    private javax.swing.JTable PriceLists;
    private javax.swing.JButton PrintCardDataOkButton;
    private javax.swing.JButton PrintCardDataOkButton1;
    private javax.swing.JPanel PrintCardDataPanel;
    private javax.swing.JPanel PrintCardDataPanel1;
    private javax.swing.JTextArea PrintCardDataText;
    private javax.swing.JTextArea PrintCardDataText1;
    private javax.swing.JScrollPane PrintCardDataTextPanel;
    private javax.swing.JScrollPane PrintCardDataTextPanel1;
    private javax.swing.JTextField ProductFindText;
    private javax.swing.JTable ProductList;
    private javax.swing.JLabel ProductNameLabel1;
    private javax.swing.JTextField ProductPriceItemPriceField;
    private javax.swing.JLabel ProductPriceItemPriceLabel;
    private javax.swing.JLabel ProductPriceLabel;
    private javax.swing.JButton ProductPriceListAddItemPrice;
    private javax.swing.JTextField ProductPriceListFindProduct;
    private javax.swing.JTable ProductPriceListItemPrices;
    private javax.swing.JTextField ProductPriceListPriceListFind;
    private javax.swing.JTable ProductPriceListPriceLists;
    private javax.swing.JTable ProductPriceListProducts;
    private javax.swing.JLabel ProductPriceListResult;
    private javax.swing.JPanel ProductsManagmentAdminPanel;
    private javax.swing.JTabbedPane ProductsTables;
    private javax.swing.JPanel Register;
    private javax.swing.JLabel RegisterBackgroundImage1;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JLabel RegisterMessageLabel;
    private javax.swing.JButton RegistrationPageHelpButton;
    private javax.swing.JButton RemoveProductButton;
    private javax.swing.JPasswordField RepeatPassword;
    private javax.swing.JLabel RepeatPasswordLabel;
    private javax.swing.JList<String> ResultList;
    private javax.swing.JScrollPane ResultListPanel;
    private javax.swing.JButton SaveDetailsButton;
    private javax.swing.JButton SaveDetailsButton1;
    private javax.swing.JButton SaveDetailsButton2;
    private javax.swing.JTextField SearchAttractionTextField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SearchButton2;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JTextField SearchProductTextField;
    private javax.swing.JTextField SearchTerminalTextField;
    private javax.swing.JTextField SearchUserTextField;
    private javax.swing.JTextPane SelecetedUserTextPlane;
    private javax.swing.JScrollPane SelectedUserPanel;
    private javax.swing.JButton SlopeButton;
    private javax.swing.JPanel SlopeManagementAdminPanel;
    private javax.swing.JTable SlopeTraffic;
    private javax.swing.JButton SlopeTrafficButton;
    private javax.swing.JButton SlopeTrafficButton1;
    private javax.swing.JScrollPane SlopeTrafficScrollPane;
    private javax.swing.JPanel StationTrafficPanel;
    private javax.swing.JTable StationTrafficTable;
    private javax.swing.JTextField Street;
    private javax.swing.JLabel StreetEditLabel;
    private javax.swing.JLabel StreetEditLabel1;
    private javax.swing.JLabel StreetEditLabel2;
    private javax.swing.JTextField StreetEditTextfield;
    private javax.swing.JTextField StreetEditTextfield1;
    private javax.swing.JTextField StreetEditTextfield2;
    private javax.swing.JTextField StreetTextField2;
    private javax.swing.JTextField Surname;
    private javax.swing.JLabel SurnameEditLabel;
    private javax.swing.JLabel SurnameEditLabel1;
    private javax.swing.JLabel SurnameEditLabel2;
    private javax.swing.JTextField SurnameEditTextfield;
    private javax.swing.JTextField SurnameEditTextfield1;
    private javax.swing.JTextField SurnameEditTextfield2;
    private javax.swing.JTextField SurnameTextField2;
    private javax.swing.JPanel Symulator;
    private javax.swing.JButton SymulatorBuyButton;
    private javax.swing.JTable SymulatorCardsList;
    private javax.swing.JTable SymulatorProductList;
    private javax.swing.JLabel SymulatorResultLabel;
    private javax.swing.JTable SymulatorTerminalList;
    private javax.swing.JButton SymulatotHelp;
    private javax.swing.JPanel TerminalListPanel;
    private javax.swing.JTable TerminalListTable;
    private javax.swing.JLabel TerminalNameLabel;
    private javax.swing.JPanel TerminalsEditAddPanel;
    private javax.swing.JLabel UpdateResultLabel;
    private javax.swing.JButton UpdateUser;
    private javax.swing.JLabel UserBackgroundLabel3;
    private javax.swing.JButton UserBuyPointsHelpButton;
    private javax.swing.JPanel UserBuyPointsPanel;
    private javax.swing.JButton UserChangeModeToAdminButton;
    private javax.swing.JPanel UserChoosePaymentMethodPanel;
    private javax.swing.JPanel UserContactPanel;
    private javax.swing.JPanel UserContainerPanel;
    private javax.swing.JTable UserListTable;
    private javax.swing.JButton UserLogoutButton;
    private javax.swing.JPanel UserMainPanel;
    private javax.swing.JPanel UserManagmentAdmintPanel;
    private javax.swing.JButton UserMyAccountButton;
    private javax.swing.JPanel UserMyCardsPanel;
    private javax.swing.JButton UserPanelMyCardsHelpButton;
    private javax.swing.JRadioButton UserRadio;
    private javax.swing.ButtonGroup UserRoleChooseGroup;
    private javax.swing.JTextField UserSearchInputTextField;
    private javax.swing.JPanel UserTraffic;
    private javax.swing.JScrollPane UserTrafficScrollPane;
    private javax.swing.JTable UserTrafficTable;
    private javax.swing.JButton UsersButton;
    private javax.swing.JLabel buyPackagePointsMessage;
    private javax.swing.JButton buyPointsPackageBackButton;
    private javax.swing.JTextField costSum;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane5;
    private javax.swing.JSplitPane jSplitPane6;
    private javax.swing.JSplitPane jSplitPane7;
    private javax.swing.JSplitPane jSplitPane8;
    private javax.swing.JLabel mbankOptionLabel;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JLabel paypalOptionLabel;
    private javax.swing.JPanel pointsPackagesListPane;
    private javax.swing.JScrollPane pointsPackagesListScrollPane;
    private javax.swing.JTextField pointsSum;
    private javax.swing.JLabel transferujOptionLabel;
    private javax.swing.JCheckBox userActiveCheckboxInAdminPanel;
    private javax.swing.JCheckBox userActiveCheckboxInCashierPanel;
    private javax.swing.JCheckBox userActiveCheckboxInMyAccountPanel;
    // End of variables declaration//GEN-END:variables
    private Vector<CardView> cardViewList;    
    private JLabel AvailablePointsLabel;
    private JLabel IDLabel;
    private JLabel ActivationDateLabel;
    private JLabel ExpirationDateLabel;
    private JLabel PointsLabel;
    private JTextField AvailablePointsTextField;
    private JTextField ManualChargePointsAmountTextField;
    private JButton BuyPointsButton2;
    private JButton AddCardButton;
    private JButton CashierChargePointsToClientAccountButton;
}
